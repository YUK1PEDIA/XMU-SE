/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 91.0, "series": [{"data": [[0.0, 5.0], [0.1, 7.0], [0.2, 13.0], [0.3, 13.0], [0.4, 13.0], [0.5, 13.0], [0.6, 13.0], [0.7, 13.0], [0.8, 13.0], [0.9, 13.0], [1.0, 13.0], [1.1, 13.0], [1.2, 13.0], [1.3, 13.0], [1.4, 13.0], [1.5, 13.0], [1.6, 13.0], [1.7, 13.0], [1.8, 13.0], [1.9, 13.0], [2.0, 13.0], [2.1, 13.0], [2.2, 13.0], [2.3, 13.0], [2.4, 13.0], [2.5, 13.0], [2.6, 13.0], [2.7, 13.0], [2.8, 13.0], [2.9, 13.0], [3.0, 13.0], [3.1, 14.0], [3.2, 14.0], [3.3, 14.0], [3.4, 14.0], [3.5, 14.0], [3.6, 14.0], [3.7, 14.0], [3.8, 14.0], [3.9, 14.0], [4.0, 14.0], [4.1, 14.0], [4.2, 14.0], [4.3, 14.0], [4.4, 14.0], [4.5, 14.0], [4.6, 14.0], [4.7, 14.0], [4.8, 14.0], [4.9, 14.0], [5.0, 14.0], [5.1, 14.0], [5.2, 14.0], [5.3, 14.0], [5.4, 14.0], [5.5, 14.0], [5.6, 14.0], [5.7, 14.0], [5.8, 14.0], [5.9, 14.0], [6.0, 14.0], [6.1, 14.0], [6.2, 14.0], [6.3, 14.0], [6.4, 14.0], [6.5, 14.0], [6.6, 14.0], [6.7, 14.0], [6.8, 14.0], [6.9, 14.0], [7.0, 14.0], [7.1, 14.0], [7.2, 14.0], [7.3, 14.0], [7.4, 14.0], [7.5, 14.0], [7.6, 14.0], [7.7, 14.0], [7.8, 14.0], [7.9, 14.0], [8.0, 14.0], [8.1, 14.0], [8.2, 14.0], [8.3, 14.0], [8.4, 14.0], [8.5, 14.0], [8.6, 14.0], [8.7, 14.0], [8.8, 14.0], [8.9, 14.0], [9.0, 14.0], [9.1, 14.0], [9.2, 14.0], [9.3, 14.0], [9.4, 14.0], [9.5, 14.0], [9.6, 14.0], [9.7, 14.0], [9.8, 14.0], [9.9, 14.0], [10.0, 14.0], [10.1, 14.0], [10.2, 14.0], [10.3, 14.0], [10.4, 14.0], [10.5, 14.0], [10.6, 14.0], [10.7, 14.0], [10.8, 14.0], [10.9, 14.0], [11.0, 14.0], [11.1, 14.0], [11.2, 14.0], [11.3, 14.0], [11.4, 14.0], [11.5, 14.0], [11.6, 14.0], [11.7, 14.0], [11.8, 14.0], [11.9, 14.0], [12.0, 14.0], [12.1, 14.0], [12.2, 14.0], [12.3, 14.0], [12.4, 14.0], [12.5, 14.0], [12.6, 14.0], [12.7, 14.0], [12.8, 14.0], [12.9, 14.0], [13.0, 14.0], [13.1, 14.0], [13.2, 14.0], [13.3, 14.0], [13.4, 14.0], [13.5, 14.0], [13.6, 14.0], [13.7, 14.0], [13.8, 14.0], [13.9, 14.0], [14.0, 14.0], [14.1, 14.0], [14.2, 14.0], [14.3, 14.0], [14.4, 14.0], [14.5, 14.0], [14.6, 14.0], [14.7, 14.0], [14.8, 14.0], [14.9, 14.0], [15.0, 14.0], [15.1, 14.0], [15.2, 14.0], [15.3, 14.0], [15.4, 14.0], [15.5, 14.0], [15.6, 14.0], [15.7, 14.0], [15.8, 14.0], [15.9, 14.0], [16.0, 14.0], [16.1, 14.0], [16.2, 14.0], [16.3, 14.0], [16.4, 14.0], [16.5, 14.0], [16.6, 14.0], [16.7, 14.0], [16.8, 14.0], [16.9, 14.0], [17.0, 14.0], [17.1, 14.0], [17.2, 14.0], [17.3, 14.0], [17.4, 14.0], [17.5, 14.0], [17.6, 14.0], [17.7, 14.0], [17.8, 14.0], [17.9, 14.0], [18.0, 14.0], [18.1, 14.0], [18.2, 14.0], [18.3, 14.0], [18.4, 14.0], [18.5, 14.0], [18.6, 14.0], [18.7, 14.0], [18.8, 14.0], [18.9, 14.0], [19.0, 14.0], [19.1, 14.0], [19.2, 14.0], [19.3, 14.0], [19.4, 14.0], [19.5, 14.0], [19.6, 14.0], [19.7, 14.0], [19.8, 14.0], [19.9, 14.0], [20.0, 14.0], [20.1, 14.0], [20.2, 14.0], [20.3, 14.0], [20.4, 14.0], [20.5, 14.0], [20.6, 14.0], [20.7, 14.0], [20.8, 14.0], [20.9, 14.0], [21.0, 14.0], [21.1, 14.0], [21.2, 14.0], [21.3, 14.0], [21.4, 14.0], [21.5, 14.0], [21.6, 14.0], [21.7, 14.0], [21.8, 14.0], [21.9, 14.0], [22.0, 14.0], [22.1, 14.0], [22.2, 14.0], [22.3, 14.0], [22.4, 14.0], [22.5, 14.0], [22.6, 14.0], [22.7, 14.0], [22.8, 14.0], [22.9, 14.0], [23.0, 14.0], [23.1, 14.0], [23.2, 14.0], [23.3, 14.0], [23.4, 14.0], [23.5, 14.0], [23.6, 14.0], [23.7, 14.0], [23.8, 14.0], [23.9, 15.0], [24.0, 15.0], [24.1, 15.0], [24.2, 15.0], [24.3, 15.0], [24.4, 15.0], [24.5, 15.0], [24.6, 15.0], [24.7, 15.0], [24.8, 15.0], [24.9, 15.0], [25.0, 15.0], [25.1, 15.0], [25.2, 15.0], [25.3, 15.0], [25.4, 15.0], [25.5, 15.0], [25.6, 15.0], [25.7, 15.0], [25.8, 15.0], [25.9, 15.0], [26.0, 15.0], [26.1, 15.0], [26.2, 15.0], [26.3, 15.0], [26.4, 15.0], [26.5, 15.0], [26.6, 15.0], [26.7, 15.0], [26.8, 15.0], [26.9, 15.0], [27.0, 15.0], [27.1, 15.0], [27.2, 15.0], [27.3, 15.0], [27.4, 15.0], [27.5, 15.0], [27.6, 15.0], [27.7, 15.0], [27.8, 15.0], [27.9, 15.0], [28.0, 15.0], [28.1, 15.0], [28.2, 15.0], [28.3, 15.0], [28.4, 15.0], [28.5, 15.0], [28.6, 15.0], [28.7, 15.0], [28.8, 15.0], [28.9, 15.0], [29.0, 15.0], [29.1, 15.0], [29.2, 15.0], [29.3, 15.0], [29.4, 15.0], [29.5, 15.0], [29.6, 15.0], [29.7, 15.0], [29.8, 15.0], [29.9, 15.0], [30.0, 15.0], [30.1, 15.0], [30.2, 15.0], [30.3, 15.0], [30.4, 15.0], [30.5, 15.0], [30.6, 15.0], [30.7, 15.0], [30.8, 15.0], [30.9, 15.0], [31.0, 15.0], [31.1, 15.0], [31.2, 15.0], [31.3, 15.0], [31.4, 15.0], [31.5, 15.0], [31.6, 15.0], [31.7, 15.0], [31.8, 15.0], [31.9, 15.0], [32.0, 15.0], [32.1, 16.0], [32.2, 16.0], [32.3, 16.0], [32.4, 16.0], [32.5, 16.0], [32.6, 16.0], [32.7, 16.0], [32.8, 16.0], [32.9, 16.0], [33.0, 16.0], [33.1, 16.0], [33.2, 16.0], [33.3, 16.0], [33.4, 16.0], [33.5, 16.0], [33.6, 16.0], [33.7, 16.0], [33.8, 16.0], [33.9, 16.0], [34.0, 16.0], [34.1, 16.0], [34.2, 16.0], [34.3, 16.0], [34.4, 16.0], [34.5, 16.0], [34.6, 16.0], [34.7, 16.0], [34.8, 16.0], [34.9, 16.0], [35.0, 16.0], [35.1, 16.0], [35.2, 16.0], [35.3, 16.0], [35.4, 16.0], [35.5, 16.0], [35.6, 16.0], [35.7, 16.0], [35.8, 16.0], [35.9, 16.0], [36.0, 16.0], [36.1, 16.0], [36.2, 16.0], [36.3, 16.0], [36.4, 16.0], [36.5, 16.0], [36.6, 16.0], [36.7, 16.0], [36.8, 16.0], [36.9, 16.0], [37.0, 16.0], [37.1, 16.0], [37.2, 16.0], [37.3, 16.0], [37.4, 17.0], [37.5, 17.0], [37.6, 17.0], [37.7, 17.0], [37.8, 17.0], [37.9, 17.0], [38.0, 17.0], [38.1, 17.0], [38.2, 17.0], [38.3, 17.0], [38.4, 17.0], [38.5, 17.0], [38.6, 17.0], [38.7, 17.0], [38.8, 17.0], [38.9, 17.0], [39.0, 17.0], [39.1, 17.0], [39.2, 17.0], [39.3, 17.0], [39.4, 17.0], [39.5, 17.0], [39.6, 17.0], [39.7, 17.0], [39.8, 17.0], [39.9, 17.0], [40.0, 17.0], [40.1, 17.0], [40.2, 17.0], [40.3, 17.0], [40.4, 17.0], [40.5, 17.0], [40.6, 17.0], [40.7, 17.0], [40.8, 17.0], [40.9, 17.0], [41.0, 17.0], [41.1, 17.0], [41.2, 17.0], [41.3, 17.0], [41.4, 17.0], [41.5, 17.0], [41.6, 17.0], [41.7, 17.0], [41.8, 17.0], [41.9, 17.0], [42.0, 17.0], [42.1, 17.0], [42.2, 17.0], [42.3, 17.0], [42.4, 17.0], [42.5, 17.0], [42.6, 17.0], [42.7, 17.0], [42.8, 17.0], [42.9, 17.0], [43.0, 17.0], [43.1, 17.0], [43.2, 17.0], [43.3, 17.0], [43.4, 17.0], [43.5, 17.0], [43.6, 17.0], [43.7, 17.0], [43.8, 17.0], [43.9, 17.0], [44.0, 17.0], [44.1, 17.0], [44.2, 17.0], [44.3, 18.0], [44.4, 18.0], [44.5, 18.0], [44.6, 18.0], [44.7, 18.0], [44.8, 18.0], [44.9, 18.0], [45.0, 18.0], [45.1, 18.0], [45.2, 18.0], [45.3, 18.0], [45.4, 18.0], [45.5, 18.0], [45.6, 18.0], [45.7, 18.0], [45.8, 18.0], [45.9, 18.0], [46.0, 18.0], [46.1, 18.0], [46.2, 18.0], [46.3, 18.0], [46.4, 18.0], [46.5, 18.0], [46.6, 18.0], [46.7, 18.0], [46.8, 18.0], [46.9, 18.0], [47.0, 18.0], [47.1, 18.0], [47.2, 18.0], [47.3, 18.0], [47.4, 18.0], [47.5, 18.0], [47.6, 18.0], [47.7, 18.0], [47.8, 18.0], [47.9, 18.0], [48.0, 18.0], [48.1, 18.0], [48.2, 18.0], [48.3, 18.0], [48.4, 18.0], [48.5, 18.0], [48.6, 18.0], [48.7, 18.0], [48.8, 18.0], [48.9, 18.0], [49.0, 18.0], [49.1, 18.0], [49.2, 18.0], [49.3, 18.0], [49.4, 18.0], [49.5, 18.0], [49.6, 18.0], [49.7, 18.0], [49.8, 18.0], [49.9, 18.0], [50.0, 18.0], [50.1, 18.0], [50.2, 18.0], [50.3, 18.0], [50.4, 18.0], [50.5, 18.0], [50.6, 18.0], [50.7, 18.0], [50.8, 18.0], [50.9, 18.0], [51.0, 18.0], [51.1, 18.0], [51.2, 18.0], [51.3, 18.0], [51.4, 18.0], [51.5, 18.0], [51.6, 18.0], [51.7, 18.0], [51.8, 18.0], [51.9, 19.0], [52.0, 19.0], [52.1, 19.0], [52.2, 19.0], [52.3, 19.0], [52.4, 19.0], [52.5, 19.0], [52.6, 19.0], [52.7, 19.0], [52.8, 19.0], [52.9, 19.0], [53.0, 19.0], [53.1, 19.0], [53.2, 19.0], [53.3, 19.0], [53.4, 19.0], [53.5, 19.0], [53.6, 19.0], [53.7, 19.0], [53.8, 19.0], [53.9, 19.0], [54.0, 19.0], [54.1, 19.0], [54.2, 19.0], [54.3, 19.0], [54.4, 19.0], [54.5, 19.0], [54.6, 19.0], [54.7, 19.0], [54.8, 19.0], [54.9, 19.0], [55.0, 19.0], [55.1, 19.0], [55.2, 19.0], [55.3, 19.0], [55.4, 19.0], [55.5, 19.0], [55.6, 19.0], [55.7, 19.0], [55.8, 19.0], [55.9, 19.0], [56.0, 19.0], [56.1, 19.0], [56.2, 19.0], [56.3, 19.0], [56.4, 19.0], [56.5, 19.0], [56.6, 19.0], [56.7, 19.0], [56.8, 19.0], [56.9, 20.0], [57.0, 20.0], [57.1, 20.0], [57.2, 20.0], [57.3, 20.0], [57.4, 20.0], [57.5, 20.0], [57.6, 20.0], [57.7, 20.0], [57.8, 20.0], [57.9, 20.0], [58.0, 20.0], [58.1, 20.0], [58.2, 20.0], [58.3, 20.0], [58.4, 20.0], [58.5, 20.0], [58.6, 20.0], [58.7, 20.0], [58.8, 20.0], [58.9, 20.0], [59.0, 20.0], [59.1, 20.0], [59.2, 20.0], [59.3, 20.0], [59.4, 20.0], [59.5, 20.0], [59.6, 20.0], [59.7, 20.0], [59.8, 20.0], [59.9, 20.0], [60.0, 20.0], [60.1, 20.0], [60.2, 20.0], [60.3, 20.0], [60.4, 20.0], [60.5, 20.0], [60.6, 20.0], [60.7, 20.0], [60.8, 20.0], [60.9, 20.0], [61.0, 20.0], [61.1, 20.0], [61.2, 20.0], [61.3, 20.0], [61.4, 20.0], [61.5, 20.0], [61.6, 20.0], [61.7, 20.0], [61.8, 20.0], [61.9, 20.0], [62.0, 20.0], [62.1, 20.0], [62.2, 20.0], [62.3, 20.0], [62.4, 20.0], [62.5, 20.0], [62.6, 20.0], [62.7, 20.0], [62.8, 20.0], [62.9, 21.0], [63.0, 21.0], [63.1, 21.0], [63.2, 21.0], [63.3, 21.0], [63.4, 21.0], [63.5, 21.0], [63.6, 21.0], [63.7, 21.0], [63.8, 21.0], [63.9, 21.0], [64.0, 21.0], [64.1, 21.0], [64.2, 21.0], [64.3, 21.0], [64.4, 21.0], [64.5, 21.0], [64.6, 21.0], [64.7, 21.0], [64.8, 21.0], [64.9, 21.0], [65.0, 21.0], [65.1, 21.0], [65.2, 21.0], [65.3, 21.0], [65.4, 21.0], [65.5, 21.0], [65.6, 21.0], [65.7, 21.0], [65.8, 21.0], [65.9, 21.0], [66.0, 21.0], [66.1, 21.0], [66.2, 21.0], [66.3, 21.0], [66.4, 21.0], [66.5, 21.0], [66.6, 21.0], [66.7, 21.0], [66.8, 21.0], [66.9, 21.0], [67.0, 21.0], [67.1, 21.0], [67.2, 21.0], [67.3, 21.0], [67.4, 21.0], [67.5, 21.0], [67.6, 21.0], [67.7, 21.0], [67.8, 21.0], [67.9, 21.0], [68.0, 21.0], [68.1, 21.0], [68.2, 21.0], [68.3, 21.0], [68.4, 21.0], [68.5, 21.0], [68.6, 21.0], [68.7, 21.0], [68.8, 21.0], [68.9, 22.0], [69.0, 22.0], [69.1, 22.0], [69.2, 22.0], [69.3, 22.0], [69.4, 22.0], [69.5, 22.0], [69.6, 22.0], [69.7, 22.0], [69.8, 22.0], [69.9, 22.0], [70.0, 22.0], [70.1, 22.0], [70.2, 22.0], [70.3, 22.0], [70.4, 22.0], [70.5, 22.0], [70.6, 22.0], [70.7, 22.0], [70.8, 22.0], [70.9, 22.0], [71.0, 22.0], [71.1, 22.0], [71.2, 22.0], [71.3, 22.0], [71.4, 22.0], [71.5, 22.0], [71.6, 22.0], [71.7, 22.0], [71.8, 22.0], [71.9, 22.0], [72.0, 22.0], [72.1, 22.0], [72.2, 22.0], [72.3, 22.0], [72.4, 22.0], [72.5, 22.0], [72.6, 22.0], [72.7, 22.0], [72.8, 22.0], [72.9, 22.0], [73.0, 22.0], [73.1, 22.0], [73.2, 22.0], [73.3, 22.0], [73.4, 22.0], [73.5, 22.0], [73.6, 22.0], [73.7, 22.0], [73.8, 22.0], [73.9, 22.0], [74.0, 22.0], [74.1, 22.0], [74.2, 22.0], [74.3, 22.0], [74.4, 22.0], [74.5, 22.0], [74.6, 22.0], [74.7, 22.0], [74.8, 22.0], [74.9, 23.0], [75.0, 23.0], [75.1, 23.0], [75.2, 23.0], [75.3, 23.0], [75.4, 23.0], [75.5, 23.0], [75.6, 23.0], [75.7, 23.0], [75.8, 23.0], [75.9, 23.0], [76.0, 23.0], [76.1, 23.0], [76.2, 23.0], [76.3, 23.0], [76.4, 23.0], [76.5, 23.0], [76.6, 23.0], [76.7, 23.0], [76.8, 23.0], [76.9, 23.0], [77.0, 23.0], [77.1, 23.0], [77.2, 23.0], [77.3, 23.0], [77.4, 23.0], [77.5, 23.0], [77.6, 23.0], [77.7, 23.0], [77.8, 23.0], [77.9, 23.0], [78.0, 23.0], [78.1, 23.0], [78.2, 23.0], [78.3, 23.0], [78.4, 23.0], [78.5, 23.0], [78.6, 23.0], [78.7, 23.0], [78.8, 23.0], [78.9, 23.0], [79.0, 23.0], [79.1, 23.0], [79.2, 23.0], [79.3, 23.0], [79.4, 24.0], [79.5, 24.0], [79.6, 24.0], [79.7, 24.0], [79.8, 24.0], [79.9, 24.0], [80.0, 24.0], [80.1, 24.0], [80.2, 24.0], [80.3, 24.0], [80.4, 24.0], [80.5, 24.0], [80.6, 24.0], [80.7, 24.0], [80.8, 24.0], [80.9, 24.0], [81.0, 24.0], [81.1, 24.0], [81.2, 24.0], [81.3, 24.0], [81.4, 24.0], [81.5, 24.0], [81.6, 24.0], [81.7, 24.0], [81.8, 24.0], [81.9, 24.0], [82.0, 24.0], [82.1, 24.0], [82.2, 24.0], [82.3, 24.0], [82.4, 24.0], [82.5, 24.0], [82.6, 24.0], [82.7, 24.0], [82.8, 24.0], [82.9, 24.0], [83.0, 24.0], [83.1, 24.0], [83.2, 24.0], [83.3, 24.0], [83.4, 24.0], [83.5, 24.0], [83.6, 24.0], [83.7, 25.0], [83.8, 25.0], [83.9, 25.0], [84.0, 25.0], [84.1, 25.0], [84.2, 25.0], [84.3, 25.0], [84.4, 25.0], [84.5, 25.0], [84.6, 25.0], [84.7, 25.0], [84.8, 25.0], [84.9, 25.0], [85.0, 25.0], [85.1, 25.0], [85.2, 25.0], [85.3, 25.0], [85.4, 25.0], [85.5, 25.0], [85.6, 25.0], [85.7, 25.0], [85.8, 25.0], [85.9, 25.0], [86.0, 25.0], [86.1, 25.0], [86.2, 25.0], [86.3, 25.0], [86.4, 25.0], [86.5, 25.0], [86.6, 25.0], [86.7, 26.0], [86.8, 26.0], [86.9, 26.0], [87.0, 26.0], [87.1, 26.0], [87.2, 26.0], [87.3, 26.0], [87.4, 26.0], [87.5, 26.0], [87.6, 26.0], [87.7, 26.0], [87.8, 26.0], [87.9, 26.0], [88.0, 26.0], [88.1, 26.0], [88.2, 26.0], [88.3, 26.0], [88.4, 26.0], [88.5, 26.0], [88.6, 26.0], [88.7, 26.0], [88.8, 27.0], [88.9, 27.0], [89.0, 27.0], [89.1, 27.0], [89.2, 27.0], [89.3, 27.0], [89.4, 27.0], [89.5, 27.0], [89.6, 27.0], [89.7, 27.0], [89.8, 27.0], [89.9, 27.0], [90.0, 27.0], [90.1, 27.0], [90.2, 27.0], [90.3, 27.0], [90.4, 27.0], [90.5, 28.0], [90.6, 28.0], [90.7, 28.0], [90.8, 28.0], [90.9, 28.0], [91.0, 28.0], [91.1, 28.0], [91.2, 28.0], [91.3, 28.0], [91.4, 28.0], [91.5, 28.0], [91.6, 28.0], [91.7, 28.0], [91.8, 29.0], [91.9, 29.0], [92.0, 29.0], [92.1, 29.0], [92.2, 29.0], [92.3, 29.0], [92.4, 29.0], [92.5, 29.0], [92.6, 29.0], [92.7, 29.0], [92.8, 30.0], [92.9, 30.0], [93.0, 30.0], [93.1, 30.0], [93.2, 30.0], [93.3, 30.0], [93.4, 30.0], [93.5, 30.0], [93.6, 30.0], [93.7, 30.0], [93.8, 30.0], [93.9, 31.0], [94.0, 31.0], [94.1, 31.0], [94.2, 31.0], [94.3, 31.0], [94.4, 31.0], [94.5, 31.0], [94.6, 31.0], [94.7, 32.0], [94.8, 32.0], [94.9, 32.0], [95.0, 32.0], [95.1, 32.0], [95.2, 32.0], [95.3, 32.0], [95.4, 33.0], [95.5, 33.0], [95.6, 33.0], [95.7, 33.0], [95.8, 33.0], [95.9, 34.0], [96.0, 34.0], [96.1, 34.0], [96.2, 34.0], [96.3, 35.0], [96.4, 35.0], [96.5, 35.0], [96.6, 35.0], [96.7, 36.0], [96.8, 36.0], [96.9, 36.0], [97.0, 36.0], [97.1, 37.0], [97.2, 37.0], [97.3, 37.0], [97.4, 38.0], [97.5, 38.0], [97.6, 38.0], [97.7, 39.0], [97.8, 39.0], [97.9, 40.0], [98.0, 40.0], [98.1, 40.0], [98.2, 41.0], [98.3, 42.0], [98.4, 42.0], [98.5, 43.0], [98.6, 44.0], [98.7, 44.0], [98.8, 45.0], [98.9, 46.0], [99.0, 47.0], [99.1, 48.0], [99.2, 49.0], [99.3, 50.0], [99.4, 51.0], [99.5, 52.0], [99.6, 53.0], [99.7, 56.0], [99.8, 58.0], [99.9, 62.0], [100.0, 91.0]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 25000.0, "minX": 0.0, "maxY": 25000.0, "series": [{"data": [[0.0, 25000.0]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4.9E-324, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 25000.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 25000.0, "series": [{"data": [[0.0, 25000.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 4.9E-324, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.619047619047619, "minX": 1.73175473E12, "maxY": 3.6999999999999993, "series": [{"data": [[1.731754804E12, 2.602941176470588], [1.73175489E12, 2.6388888888888893], [1.731754886E12, 2.79591836734694], [1.731754759E12, 2.9927536231884058], [1.731754845E12, 2.773049645390072], [1.731754755E12, 2.9851851851851863], [1.731754841E12, 2.7769784172661867], [1.7317548E12, 2.570422535211268], [1.731754796E12, 2.584507042253521], [1.731754882E12, 2.8175182481751833], [1.731754771E12, 2.7692307692307683], [1.731754857E12, 2.9452054794520546], [1.73175473E12, 3.5294117647058822], [1.731754816E12, 2.6950354609929095], [1.731754812E12, 2.7553956834532367], [1.731754898E12, 2.6541353383458643], [1.731754894E12, 2.7214285714285715], [1.731754767E12, 2.986206896551723], [1.731754853E12, 2.833333333333335], [1.731754763E12, 3.0510948905109485], [1.731754849E12, 2.9850746268656727], [1.731754808E12, 2.698529411764705], [1.73175491E12, 1.619047619047619], [1.731754783E12, 2.8102189781021902], [1.731754869E12, 2.570370370370371], [1.731754779E12, 2.6791044776119395], [1.731754865E12, 2.6433566433566438], [1.731754738E12, 3.2602739726027394], [1.731754824E12, 2.778571428571429], [1.731754734E12, 3.536231884057973], [1.73175482E12, 2.7686567164179103], [1.731754906E12, 2.9290780141843955], [1.731754902E12, 2.751824817518249], [1.731754775E12, 2.687943262411347], [1.731754861E12, 2.7375886524822697], [1.73175475E12, 2.715328467153285], [1.731754836E12, 2.654929577464788], [1.731754791E12, 2.7089552238805963], [1.731754877E12, 2.7499999999999996], [1.731754787E12, 2.764285714285714], [1.731754873E12, 2.7058823529411775], [1.731754746E12, 2.6571428571428553], [1.731754832E12, 2.8671328671328666], [1.731754742E12, 2.8239436619718323], [1.731754828E12, 2.827338129496404], [1.731754846E12, 2.82857142857143], [1.731754805E12, 2.702127659574467], [1.731754801E12, 2.598540145985402], [1.731754887E12, 2.559701492537315], [1.73175476E12, 2.901408450704226], [1.731754883E12, 2.5352112676056344], [1.731754756E12, 3.0000000000000004], [1.731754842E12, 2.7246376811594195], [1.731754838E12, 2.7744360902255636], [1.731754797E12, 2.574626865671642], [1.731754899E12, 2.830985915492959], [1.731754772E12, 2.7518248175182483], [1.731754858E12, 2.5985401459854036], [1.731754854E12, 2.6595744680851054], [1.731754813E12, 2.725925925925925], [1.731754809E12, 2.6785714285714266], [1.731754895E12, 2.7841726618705027], [1.731754768E12, 2.7185185185185183], [1.731754891E12, 2.720588235294117], [1.731754764E12, 2.7972027972027966], [1.73175485E12, 2.8493150684931514], [1.731754739E12, 2.842857142857144], [1.731754825E12, 2.6760563380281686], [1.731754784E12, 2.8507462686567173], [1.731754907E12, 2.905797101449274], [1.73175478E12, 2.971830985915494], [1.731754866E12, 2.7647058823529407], [1.731754862E12, 2.5882352941176467], [1.731754735E12, 3.3286713286713288], [1.731754821E12, 2.719178082191781], [1.731754731E12, 3.6999999999999993], [1.731754817E12, 2.7153284671532845], [1.731754903E12, 2.909090909090908], [1.731754776E12, 2.7647058823529407], [1.731754878E12, 2.7410071942446046], [1.731754751E12, 2.833333333333333], [1.731754837E12, 2.7647058823529393], [1.731754747E12, 2.8913043478260887], [1.731754833E12, 2.666666666666667], [1.731754792E12, 2.861111111111113], [1.731754788E12, 2.87769784172662], [1.731754874E12, 2.7686567164179103], [1.73175487E12, 2.7482014388489207], [1.731754743E12, 2.703703703703704], [1.731754829E12, 2.6170212765957457], [1.731754761E12, 2.789855072463768], [1.731754847E12, 2.5857142857142863], [1.731754843E12, 2.625899280575541], [1.731754802E12, 2.7037037037037033], [1.731754888E12, 2.8273381294964017], [1.731754798E12, 2.709219858156028], [1.731754884E12, 2.7080291970802914], [1.731754757E12, 2.6978417266187056], [1.731754753E12, 2.859154929577466], [1.731754839E12, 2.945578231292519], [1.731754814E12, 2.698630136986301], [1.7317549E12, 2.8529411764705888], [1.731754773E12, 2.789473684210527], [1.731754769E12, 2.992805755395685], [1.731754855E12, 2.705882352941176], [1.731754851E12, 2.558823529411765], [1.73175481E12, 2.9214285714285713], [1.731754896E12, 2.8613138686131396], [1.731754806E12, 2.7391304347826075], [1.731754892E12, 2.683823529411766], [1.731754765E12, 2.884892086330935], [1.731754867E12, 2.8014705882352935], [1.73175474E12, 3.1159420289855078], [1.731754826E12, 2.634328358208955], [1.731754822E12, 2.4999999999999987], [1.731754908E12, 2.8], [1.731754781E12, 3.0724637681159437], [1.731754777E12, 2.899280575539568], [1.731754863E12, 2.8028169014084523], [1.731754736E12, 3.1911764705882346], [1.731754859E12, 2.811594202898551], [1.731754732E12, 3.4379562043795624], [1.731754818E12, 2.6083916083916097], [1.731754904E12, 2.9931506849315084], [1.731754793E12, 2.5785714285714296], [1.731754879E12, 2.6549295774647885], [1.731754752E12, 3.02919708029197], [1.731754875E12, 2.8827586206896556], [1.731754748E12, 2.939393939393938], [1.731754834E12, 2.942446043165467], [1.73175483E12, 2.733333333333333], [1.731754789E12, 2.7605633802816905], [1.731754785E12, 2.904109589041093], [1.731754871E12, 2.8623188405797104], [1.731754744E12, 2.7943262411347516], [1.731754803E12, 2.7762237762237763], [1.731754889E12, 2.818840579710145], [1.731754762E12, 2.9000000000000004], [1.731754848E12, 2.7536231884057982], [1.731754758E12, 2.8529411764705888], [1.731754844E12, 2.6102941176470584], [1.731754799E12, 2.77536231884058], [1.731754885E12, 2.8045112781954895], [1.731754795E12, 2.9071428571428566], [1.731754881E12, 2.7071428571428577], [1.731754754E12, 2.904411764705882], [1.73175484E12, 2.5652173913043463], [1.731754815E12, 2.589552238805971], [1.731754901E12, 2.6267605633802806], [1.731754811E12, 2.546762589928058], [1.731754897E12, 2.717241379310345], [1.73175477E12, 3.1366906474820158], [1.731754856E12, 2.762962962962962], [1.731754766E12, 2.8106060606060628], [1.731754852E12, 2.719424460431654], [1.731754807E12, 2.6142857142857148], [1.731754893E12, 2.8936170212765946], [1.731754782E12, 2.767605633802817], [1.731754868E12, 2.758620689655172], [1.731754741E12, 2.9503546099290787], [1.731754737E12, 3.125925925925925], [1.731754823E12, 2.757352941176471], [1.731754909E12, 2.755555555555555], [1.731754819E12, 2.61764705882353], [1.731754905E12, 2.748148148148149], [1.731754778E12, 2.7676056338028157], [1.731754864E12, 2.927007299270074], [1.731754774E12, 3.0206896551724136], [1.73175486E12, 2.841726618705037], [1.731754733E12, 3.499999999999999], [1.731754835E12, 2.9574468085106385], [1.731754794E12, 2.6811594202898554], [1.73175488E12, 2.5620437956204385], [1.73175479E12, 2.693430656934306], [1.731754876E12, 2.5390070921985815], [1.731754749E12, 3.068027210884355], [1.731754745E12, 2.892086330935251], [1.731754831E12, 2.9051094890510956], [1.731754827E12, 2.7464788732394365], [1.731754786E12, 2.5895522388059704], [1.731754872E12, 2.654929577464787]], "isOverall": false, "label": "线程组", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.73175491E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 15.25, "minX": 1.0, "maxY": 43.846153846153854, "series": [{"data": [[2.0, 16.389053512288648], [4.0, 25.091687041564803], [1.0, 15.25], [5.0, 43.846153846153854], [3.0, 20.6685844550586]], "isOverall": false, "label": "Products", "isController": false}, {"data": [[2.803639999999977, 19.841560000000126]], "isOverall": false, "label": "Products-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 5.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 5195.0, "minX": 1.73175473E12, "maxY": 281629.0, "series": [{"data": [[1.731754804E12, 261755.0], [1.73175489E12, 269359.0], [1.731754886E12, 268526.0], [1.731754759E12, 270055.0], [1.731754845E12, 255736.0], [1.731754755E12, 274025.0], [1.731754841E12, 262203.0], [1.7317548E12, 263518.0], [1.731754796E12, 258991.0], [1.731754882E12, 271215.0], [1.731754771E12, 265141.0], [1.731754857E12, 264249.0], [1.73175473E12, 205036.0], [1.731754816E12, 258076.0], [1.731754812E12, 262558.0], [1.731754898E12, 260393.0], [1.731754894E12, 260379.0], [1.731754767E12, 261083.0], [1.731754853E12, 269797.0], [1.731754763E12, 271659.0], [1.731754849E12, 276357.0], [1.731754808E12, 262647.0], [1.73175491E12, 33173.0], [1.731754783E12, 256939.0], [1.731754869E12, 260863.0], [1.731754779E12, 261208.0], [1.731754865E12, 267067.0], [1.731754738E12, 262692.0], [1.731754824E12, 272052.0], [1.731754734E12, 271705.0], [1.73175482E12, 275314.0], [1.731754906E12, 264728.0], [1.731754902E12, 255144.0], [1.731754775E12, 263225.0], [1.731754861E12, 262141.0], [1.73175475E12, 264804.0], [1.731754836E12, 263953.0], [1.731754791E12, 249697.0], [1.731754877E12, 258072.0], [1.731754787E12, 257520.0], [1.731754873E12, 261001.0], [1.731754746E12, 260240.0], [1.731754832E12, 259366.0], [1.731754742E12, 267409.0], [1.731754828E12, 269516.0], [1.731754846E12, 276261.0], [1.731754805E12, 259545.0], [1.731754801E12, 255805.0], [1.731754887E12, 259393.0], [1.73175476E12, 262892.0], [1.731754883E12, 261515.0], [1.731754756E12, 263441.0], [1.731754842E12, 269044.0], [1.731754838E12, 270974.0], [1.731754797E12, 261652.0], [1.731754899E12, 260484.0], [1.731754772E12, 261761.0], [1.731754858E12, 256815.0], [1.731754854E12, 259775.0], [1.731754813E12, 270482.0], [1.731754809E12, 258329.0], [1.731754895E12, 263134.0], [1.731754768E12, 260950.0], [1.731754891E12, 261754.0], [1.731754764E12, 263391.0], [1.73175485E12, 263894.0], [1.731754739E12, 262855.0], [1.731754825E12, 265940.0], [1.731754784E12, 276560.0], [1.731754907E12, 267615.0], [1.73175478E12, 261489.0], [1.731754866E12, 252329.0], [1.731754862E12, 259549.0], [1.731754735E12, 264017.0], [1.731754821E12, 265548.0], [1.731754731E12, 274813.0], [1.731754817E12, 269405.0], [1.731754903E12, 271701.0], [1.731754776E12, 256392.0], [1.731754878E12, 272109.0], [1.731754751E12, 251749.0], [1.731754837E12, 259498.0], [1.731754747E12, 258097.0], [1.731754833E12, 260006.0], [1.731754792E12, 281629.0], [1.731754788E12, 268539.0], [1.731754874E12, 266383.0], [1.73175487E12, 254565.0], [1.731754743E12, 261826.0], [1.731754829E12, 262640.0], [1.731754761E12, 264807.0], [1.731754847E12, 261218.0], [1.731754843E12, 261815.0], [1.731754802E12, 276647.0], [1.731754888E12, 255806.0], [1.731754798E12, 259225.0], [1.731754884E12, 256471.0], [1.731754757E12, 260285.0], [1.731754753E12, 262298.0], [1.731754839E12, 266421.0], [1.731754814E12, 264805.0], [1.7317549E12, 266266.0], [1.731754773E12, 264226.0], [1.731754769E12, 254585.0], [1.731754855E12, 261301.0], [1.731754851E12, 262179.0], [1.73175481E12, 273794.0], [1.731754896E12, 271380.0], [1.731754806E12, 267000.0], [1.731754892E12, 263665.0], [1.731754765E12, 261085.0], [1.731754867E12, 281051.0], [1.73175474E12, 261598.0], [1.731754826E12, 261833.0], [1.731754822E12, 254844.0], [1.731754908E12, 262606.0], [1.731754781E12, 273525.0], [1.731754777E12, 272916.0], [1.731754863E12, 260738.0], [1.731754736E12, 261161.0], [1.731754859E12, 262327.0], [1.731754732E12, 263771.0], [1.731754818E12, 265439.0], [1.731754904E12, 266584.0], [1.731754793E12, 261185.0], [1.731754879E12, 261032.0], [1.731754752E12, 270733.0], [1.731754875E12, 267487.0], [1.731754748E12, 272716.0], [1.731754834E12, 258511.0], [1.73175483E12, 254247.0], [1.731754789E12, 265674.0], [1.731754785E12, 265109.0], [1.731754871E12, 270952.0], [1.731754744E12, 253833.0], [1.731754803E12, 262691.0], [1.731754889E12, 266420.0], [1.731754762E12, 257776.0], [1.731754848E12, 256647.0], [1.731754758E12, 257794.0], [1.731754844E12, 261476.0], [1.731754799E12, 272207.0], [1.731754885E12, 273294.0], [1.731754795E12, 276086.0], [1.731754881E12, 259096.0], [1.731754754E12, 261167.0], [1.73175484E12, 260151.0], [1.731754815E12, 260806.0], [1.731754901E12, 266808.0], [1.731754811E12, 257773.0], [1.731754897E12, 263697.0], [1.73175477E12, 272779.0], [1.731754856E12, 273526.0], [1.731754766E12, 274595.0], [1.731754852E12, 257135.0], [1.731754807E12, 263215.0], [1.731754893E12, 264916.0], [1.731754782E12, 260592.0], [1.731754868E12, 261762.0], [1.731754741E12, 273421.0], [1.731754737E12, 274960.0], [1.731754823E12, 257572.0], [1.731754909E12, 262280.0], [1.731754819E12, 256791.0], [1.731754905E12, 255325.0], [1.731754778E12, 260513.0], [1.731754864E12, 271565.0], [1.731754774E12, 268131.0], [1.73175486E12, 271531.0], [1.731754733E12, 259575.0], [1.731754835E12, 272220.0], [1.731754794E12, 259583.0], [1.73175488E12, 263892.0], [1.73175479E12, 263320.0], [1.731754876E12, 263124.0], [1.731754749E12, 264910.0], [1.731754745E12, 274689.0], [1.731754831E12, 277822.0], [1.731754827E12, 260744.0], [1.731754786E12, 259409.0], [1.731754872E12, 263251.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.731754804E12, 33448.0], [1.73175489E12, 35724.0], [1.731754886E12, 36024.0], [1.731754759E12, 33814.0], [1.731754845E12, 34916.0], [1.731754755E12, 33253.0], [1.731754841E12, 34336.0], [1.7317548E12, 35104.0], [1.731754796E12, 35273.0], [1.731754882E12, 33648.0], [1.731754771E12, 35480.0], [1.731754857E12, 35878.0], [1.73175473E12, 25186.0], [1.731754816E12, 34851.0], [1.731754812E12, 34260.0], [1.731754898E12, 32515.0], [1.731754894E12, 34750.0], [1.731754767E12, 35462.0], [1.731754853E12, 33659.0], [1.731754763E12, 33621.0], [1.731754849E12, 33107.0], [1.731754808E12, 33431.0], [1.73175491E12, 5195.0], [1.731754783E12, 33723.0], [1.731754869E12, 33249.0], [1.731754779E12, 32786.0], [1.731754865E12, 35282.0], [1.731754738E12, 35883.0], [1.731754824E12, 34164.0], [1.731754734E12, 33646.0], [1.73175482E12, 32992.0], [1.731754906E12, 34981.0], [1.731754902E12, 33758.0], [1.731754775E12, 34968.0], [1.731754861E12, 35065.0], [1.73175475E12, 33738.0], [1.731754836E12, 35164.0], [1.731754791E12, 32937.0], [1.731754877E12, 33590.0], [1.731754787E12, 34791.0], [1.731754873E12, 33405.0], [1.731754746E12, 34578.0], [1.731754832E12, 35068.0], [1.731754742E12, 35322.0], [1.731754828E12, 34227.0], [1.731754846E12, 34399.0], [1.731754805E12, 34981.0], [1.731754801E12, 33731.0], [1.731754887E12, 32924.0], [1.73175476E12, 35273.0], [1.731754883E12, 35115.0], [1.731754756E12, 35865.0], [1.731754842E12, 33684.0], [1.731754838E12, 32627.0], [1.731754797E12, 32768.0], [1.731754899E12, 35087.0], [1.731754772E12, 33658.0], [1.731754858E12, 33871.0], [1.731754854E12, 34948.0], [1.731754813E12, 33213.0], [1.731754809E12, 34433.0], [1.731754895E12, 34293.0], [1.731754768E12, 33269.0], [1.731754891E12, 33423.0], [1.731754764E12, 35368.0], [1.73175485E12, 35760.0], [1.731754739E12, 34610.0], [1.731754825E12, 35204.0], [1.731754784E12, 33164.0], [1.731754907E12, 33600.0], [1.73175478E12, 35088.0], [1.731754866E12, 33515.0], [1.731754862E12, 33256.0], [1.731754735E12, 35449.0], [1.731754821E12, 35832.0], [1.731754731E12, 36785.0], [1.731754817E12, 33526.0], [1.731754903E12, 32559.0], [1.731754776E12, 33581.0], [1.731754878E12, 34015.0], [1.731754751E12, 34190.0], [1.731754837E12, 33508.0], [1.731754747E12, 34068.0], [1.731754833E12, 33242.0], [1.731754792E12, 35350.0], [1.731754788E12, 33862.0], [1.731754874E12, 32982.0], [1.73175487E12, 34474.0], [1.731754743E12, 32959.0], [1.731754829E12, 34850.0], [1.731754761E12, 33735.0], [1.731754847E12, 34575.0], [1.731754843E12, 34610.0], [1.731754802E12, 33375.0], [1.731754888E12, 34538.0], [1.731754798E12, 34834.0], [1.731754884E12, 33696.0], [1.731754757E12, 34363.0], [1.731754753E12, 35196.0], [1.731754839E12, 36206.0], [1.731754814E12, 35976.0], [1.7317549E12, 33425.0], [1.731754773E12, 32720.0], [1.731754769E12, 34455.0], [1.731754855E12, 33455.0], [1.731754851E12, 33516.0], [1.73175481E12, 34383.0], [1.731754896E12, 33589.0], [1.731754806E12, 33663.0], [1.731754892E12, 33425.0], [1.731754765E12, 34175.0], [1.731754867E12, 33699.0], [1.73175474E12, 34050.0], [1.731754826E12, 32971.0], [1.731754822E12, 33522.0], [1.731754908E12, 34707.0], [1.731754781E12, 33858.0], [1.731754777E12, 34015.0], [1.731754863E12, 35192.0], [1.731754736E12, 33443.0], [1.731754859E12, 34080.0], [1.731754732E12, 33750.0], [1.731754818E12, 35411.0], [1.731754904E12, 35833.0], [1.731754793E12, 34750.0], [1.731754879E12, 35282.0], [1.731754752E12, 33384.0], [1.731754875E12, 35612.0], [1.731754748E12, 32637.0], [1.731754834E12, 34433.0], [1.73175483E12, 33314.0], [1.731754789E12, 35254.0], [1.731754785E12, 35782.0], [1.731754871E12, 33606.0], [1.731754744E12, 34961.0], [1.731754803E12, 35071.0], [1.731754889E12, 33627.0], [1.731754762E12, 34668.0], [1.731754848E12, 34068.0], [1.731754758E12, 33583.0], [1.731754844E12, 33241.0], [1.731754799E12, 33895.0], [1.731754885E12, 32931.0], [1.731754795E12, 34280.0], [1.731754881E12, 34596.0], [1.731754754E12, 33450.0], [1.73175484E12, 34118.0], [1.731754815E12, 32921.0], [1.731754901E12, 35077.0], [1.731754811E12, 34524.0], [1.731754897E12, 35964.0], [1.73175477E12, 33844.0], [1.731754856E12, 33230.0], [1.731754766E12, 32743.0], [1.731754852E12, 34394.0], [1.731754807E12, 34699.0], [1.731754893E12, 34618.0], [1.731754782E12, 35127.0], [1.731754868E12, 35468.0], [1.731754741E12, 34483.0], [1.731754737E12, 33242.0], [1.731754823E12, 33667.0], [1.731754909E12, 33215.0], [1.731754819E12, 33532.0], [1.731754905E12, 33231.0], [1.731754778E12, 35273.0], [1.731754864E12, 33617.0], [1.731754774E12, 35612.0], [1.73175486E12, 34004.0], [1.731754733E12, 35161.0], [1.731754835E12, 34400.0], [1.731754794E12, 34049.0], [1.73175488E12, 33518.0], [1.73175479E12, 33658.0], [1.731754876E12, 34950.0], [1.731754749E12, 35986.0], [1.731754745E12, 34152.0], [1.731754831E12, 33799.0], [1.731754827E12, 34998.0], [1.731754786E12, 32924.0], [1.731754872E12, 35227.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.73175491E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 14.714285714285715, "minX": 1.73175473E12, "maxY": 26.07843137254902, "series": [{"data": [[1.731754804E12, 18.698529411764707], [1.73175489E12, 18.305555555555554], [1.731754886E12, 19.08163265306123], [1.731754759E12, 21.19565217391305], [1.731754845E12, 19.219858156028366], [1.731754755E12, 21.792592592592595], [1.731754841E12, 19.417266187050362], [1.7317548E12, 17.82394366197183], [1.731754796E12, 17.922535211267608], [1.731754882E12, 20.11678832116788], [1.731754771E12, 19.216783216783227], [1.731754857E12, 19.876712328767127], [1.73175473E12, 26.07843137254902], [1.731754816E12, 18.893617021276597], [1.731754812E12, 19.388489208633082], [1.731754898E12, 19.13533834586466], [1.731754894E12, 18.957142857142856], [1.731754767E12, 20.275862068965523], [1.731754853E12, 20.42753623188406], [1.731754763E12, 21.919708029197082], [1.731754849E12, 22.044776119402982], [1.731754808E12, 19.345588235294112], [1.73175491E12, 14.714285714285715], [1.731754783E12, 20.058394160583937], [1.731754869E12, 18.733333333333324], [1.731754779E12, 19.880597014925378], [1.731754865E12, 18.40559440559441], [1.731754738E12, 21.78767123287672], [1.731754824E12, 19.792857142857144], [1.731754734E12, 25.094202898550726], [1.73175482E12, 19.865671641791046], [1.731754906E12, 20.744680851063826], [1.731754902E12, 19.729927007299285], [1.731754775E12, 18.879432624113473], [1.731754861E12, 18.91489361702128], [1.73175475E12, 19.83941605839415], [1.731754836E12, 18.45774647887324], [1.731754791E12, 19.10447761194029], [1.731754877E12, 19.566176470588232], [1.731754787E12, 19.464285714285698], [1.731754873E12, 19.52941176470589], [1.731754746E12, 19.028571428571443], [1.731754832E12, 19.56643356643357], [1.731754742E12, 19.35915492957746], [1.731754828E12, 19.956834532374092], [1.731754846E12, 20.292857142857148], [1.731754805E12, 18.843971631205676], [1.731754801E12, 18.503649635036496], [1.731754887E12, 18.910447761194032], [1.73175476E12, 20.204225352112676], [1.731754883E12, 17.57746478873239], [1.731754756E12, 20.30821917808219], [1.731754842E12, 19.782608695652176], [1.731754838E12, 20.496240601503757], [1.731754797E12, 18.64179104477613], [1.731754899E12, 19.880281690140837], [1.731754772E12, 19.53284671532848], [1.731754858E12, 18.795620437956206], [1.731754854E12, 18.62411347517731], [1.731754813E12, 19.629629629629623], [1.731754809E12, 18.57857142857144], [1.731754895E12, 19.467625899280577], [1.731754768E12, 19.977777777777778], [1.731754891E12, 19.323529411764717], [1.731754764E12, 19.307692307692328], [1.73175485E12, 19.136986301369863], [1.731754739E12, 20.242857142857137], [1.731754825E12, 18.704225352112687], [1.731754784E12, 20.99253731343284], [1.731754907E12, 20.673913043478265], [1.73175478E12, 20.8169014084507], [1.731754866E12, 19.67647058823529], [1.731754862E12, 18.632352941176475], [1.731754735E12, 22.741258741258747], [1.731754821E12, 18.6027397260274], [1.731754731E12, 24.186666666666685], [1.731754817E12, 19.306569343065696], [1.731754903E12, 21.43939393939395], [1.731754776E12, 19.683823529411764], [1.731754878E12, 19.705035971223012], [1.731754751E12, 19.978260869565215], [1.731754837E12, 19.977941176470587], [1.731754747E12, 20.565217391304337], [1.731754833E12, 19.622222222222224], [1.731754792E12, 20.277777777777782], [1.731754788E12, 20.48201438848921], [1.731754874E12, 20.395522388059703], [1.73175487E12, 19.424460431654673], [1.731754743E12, 19.77037037037036], [1.731754829E12, 18.354609929078013], [1.731754761E12, 20.08695652173913], [1.731754847E12, 18.278571428571432], [1.731754843E12, 18.7841726618705], [1.731754802E12, 19.666666666666664], [1.731754888E12, 19.87769784172662], [1.731754798E12, 19.07801418439715], [1.731754884E12, 19.57664233576642], [1.731754757E12, 19.151079136690658], [1.731754753E12, 19.654929577464785], [1.731754839E12, 19.81632653061226], [1.731754814E12, 18.45205479452056], [1.7317549E12, 20.235294117647065], [1.731754773E12, 20.729323308270683], [1.731754769E12, 21.05755395683453], [1.731754855E12, 19.588235294117638], [1.731754851E12, 18.742647058823533], [1.73175481E12, 20.421428571428557], [1.731754896E12, 20.605839416058398], [1.731754806E12, 19.253623188405797], [1.731754892E12, 19.41911764705882], [1.731754765E12, 20.27338129496402], [1.731754867E12, 20.602941176470576], [1.73175474E12, 22.10144927536233], [1.731754826E12, 19.171641791044774], [1.731754822E12, 17.977941176470594], [1.731754908E12, 19.7], [1.731754781E12, 21.95652173913043], [1.731754777E12, 20.812949640287776], [1.731754863E12, 19.774647887323955], [1.731754736E12, 22.75735294117647], [1.731754859E12, 20.101449275362324], [1.731754732E12, 24.182481751824824], [1.731754818E12, 18.069930069930056], [1.731754904E12, 20.383561643835623], [1.731754793E12, 18.12857142857143], [1.731754879E12, 18.070422535211264], [1.731754752E12, 21.95620437956205], [1.731754875E12, 19.786206896551725], [1.731754748E12, 21.962121212121204], [1.731754834E12, 20.654676258992804], [1.73175483E12, 19.333333333333325], [1.731754789E12, 19.0281690140845], [1.731754785E12, 19.53424657534248], [1.731754871E12, 20.376811594202906], [1.731754744E12, 19.014184397163124], [1.731754803E12, 19.279720279720273], [1.731754889E12, 19.95652173913043], [1.731754762E12, 20.371428571428567], [1.731754848E12, 19.101449275362317], [1.731754758E12, 20.323529411764714], [1.731754844E12, 18.926470588235308], [1.731754799E12, 19.82608695652174], [1.731754885E12, 20.58646616541352], [1.731754795E12, 20.742857142857144], [1.731754881E12, 18.985714285714273], [1.731754754E12, 21.3014705882353], [1.73175484E12, 18.442028985507253], [1.731754815E12, 18.783582089552237], [1.731754901E12, 18.274647887323944], [1.731754811E12, 17.942446043165482], [1.731754897E12, 18.41379310344828], [1.73175477E12, 22.107913669064743], [1.731754856E12, 20.503703703703707], [1.731754766E12, 20.97727272727272], [1.731754852E12, 19.2589928057554], [1.731754807E12, 18.33571428571428], [1.731754893E12, 20.078014184397148], [1.731754782E12, 19.204225352112676], [1.731754868E12, 18.510344827586213], [1.731754741E12, 20.907801418439714], [1.731754737E12, 22.9925925925926], [1.731754823E12, 19.514705882352946], [1.731754909E12, 20.288888888888888], [1.731754819E12, 18.99264705882353], [1.731754905E12, 19.600000000000012], [1.731754778E12, 18.978873239436613], [1.731754864E12, 20.583941605839417], [1.731754774E12, 20.682758620689658], [1.73175486E12, 20.15827338129497], [1.731754733E12, 24.00704225352113], [1.731754835E12, 20.88652482269503], [1.731754794E12, 19.239130434782613], [1.73175488E12, 18.291970802919717], [1.73175479E12, 19.255474452554747], [1.731754876E12, 18.02127659574468], [1.731754749E12, 20.591836734693874], [1.731754745E12, 20.453237410071942], [1.731754831E12, 21.313868613138688], [1.731754827E12, 19.169014084507044], [1.731754786E12, 18.93283582089552], [1.731754872E12, 18.387323943661983]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.73175491E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 14.714285714285715, "minX": 1.73175473E12, "maxY": 26.029411764705877, "series": [{"data": [[1.731754804E12, 18.698529411764707], [1.73175489E12, 18.305555555555554], [1.731754886E12, 19.08163265306123], [1.731754759E12, 21.152173913043487], [1.731754845E12, 19.212765957446802], [1.731754755E12, 21.78518518518519], [1.731754841E12, 19.40287769784173], [1.7317548E12, 17.809859154929583], [1.731754796E12, 17.90845070422534], [1.731754882E12, 20.109489051094894], [1.731754771E12, 19.216783216783227], [1.731754857E12, 19.863013698630144], [1.73175473E12, 26.029411764705877], [1.731754816E12, 18.87234042553191], [1.731754812E12, 19.381294964028772], [1.731754898E12, 19.127819548872182], [1.731754894E12, 18.957142857142856], [1.731754767E12, 20.26896551724138], [1.731754853E12, 20.420289855072465], [1.731754763E12, 21.919708029197082], [1.731754849E12, 22.03731343283582], [1.731754808E12, 19.330882352941178], [1.73175491E12, 14.714285714285715], [1.731754783E12, 20.058394160583937], [1.731754869E12, 18.733333333333324], [1.731754779E12, 19.873134328358205], [1.731754865E12, 18.398601398601393], [1.731754738E12, 21.76712328767122], [1.731754824E12, 19.778571428571425], [1.731754734E12, 25.065217391304344], [1.73175482E12, 19.85074626865671], [1.731754906E12, 20.723404255319153], [1.731754902E12, 19.729927007299285], [1.731754775E12, 18.879432624113473], [1.731754861E12, 18.91489361702128], [1.73175475E12, 19.824817518248178], [1.731754836E12, 18.43661971830986], [1.731754791E12, 19.097014925373134], [1.731754877E12, 19.55882352941177], [1.731754787E12, 19.464285714285698], [1.731754873E12, 19.52205882352941], [1.731754746E12, 19.021428571428576], [1.731754832E12, 19.56643356643357], [1.731754742E12, 19.338028169014084], [1.731754828E12, 19.949640287769782], [1.731754846E12, 20.292857142857148], [1.731754805E12, 18.829787234042552], [1.731754801E12, 18.49635036496352], [1.731754887E12, 18.910447761194032], [1.73175476E12, 20.197183098591548], [1.731754883E12, 17.570422535211275], [1.731754756E12, 20.3013698630137], [1.731754842E12, 19.782608695652176], [1.731754838E12, 20.496240601503757], [1.731754797E12, 18.6268656716418], [1.731754899E12, 19.859154929577475], [1.731754772E12, 19.51824817518249], [1.731754858E12, 18.795620437956206], [1.731754854E12, 18.61702127659574], [1.731754813E12, 19.629629629629623], [1.731754809E12, 18.571428571428566], [1.731754895E12, 19.467625899280577], [1.731754768E12, 19.977777777777778], [1.731754891E12, 19.323529411764717], [1.731754764E12, 19.279720279720284], [1.73175485E12, 19.12328767123288], [1.731754739E12, 20.207142857142866], [1.731754825E12, 18.690140845070424], [1.731754784E12, 20.985074626865682], [1.731754907E12, 20.666666666666675], [1.73175478E12, 20.795774647887317], [1.731754866E12, 19.661764705882348], [1.731754862E12, 18.632352941176475], [1.731754735E12, 22.706293706293714], [1.731754821E12, 18.595890410958912], [1.731754731E12, 24.159999999999997], [1.731754817E12, 19.29927007299269], [1.731754903E12, 21.43939393939395], [1.731754776E12, 19.66911764705883], [1.731754878E12, 19.705035971223012], [1.731754751E12, 19.949275362318847], [1.731754837E12, 19.977941176470587], [1.731754747E12, 20.550724637681157], [1.731754833E12, 19.6074074074074], [1.731754792E12, 20.27083333333334], [1.731754788E12, 20.474820143884884], [1.731754874E12, 20.395522388059703], [1.73175487E12, 19.424460431654673], [1.731754743E12, 19.755555555555556], [1.731754829E12, 18.340425531914892], [1.731754761E12, 20.079710144927517], [1.731754847E12, 18.271428571428565], [1.731754843E12, 18.77697841726618], [1.731754802E12, 19.651851851851863], [1.731754888E12, 19.87769784172662], [1.731754798E12, 19.07801418439715], [1.731754884E12, 19.57664233576642], [1.731754757E12, 19.151079136690658], [1.731754753E12, 19.63380281690141], [1.731754839E12, 19.802721088435387], [1.731754814E12, 18.45205479452056], [1.7317549E12, 20.227941176470583], [1.731754773E12, 20.72180451127819], [1.731754769E12, 21.05755395683453], [1.731754855E12, 19.56617647058824], [1.731754851E12, 18.742647058823533], [1.73175481E12, 20.407142857142873], [1.731754896E12, 20.591240875912415], [1.731754806E12, 19.231884057971023], [1.731754892E12, 19.404411764705877], [1.731754765E12, 20.251798561151084], [1.731754867E12, 20.595588235294116], [1.73175474E12, 22.10144927536233], [1.731754826E12, 19.15671641791045], [1.731754822E12, 17.977941176470594], [1.731754908E12, 19.7], [1.731754781E12, 21.949275362318843], [1.731754777E12, 20.791366906474828], [1.731754863E12, 19.76760563380282], [1.731754736E12, 22.75735294117647], [1.731754859E12, 20.101449275362324], [1.731754732E12, 24.15328467153285], [1.731754818E12, 18.069930069930056], [1.731754904E12, 20.37671232876712], [1.731754793E12, 18.114285714285707], [1.731754879E12, 18.070422535211264], [1.731754752E12, 21.941605839416066], [1.731754875E12, 19.786206896551725], [1.731754748E12, 21.962121212121204], [1.731754834E12, 20.647482014388476], [1.73175483E12, 19.333333333333325], [1.731754789E12, 19.0281690140845], [1.731754785E12, 19.52739726027398], [1.731754871E12, 20.376811594202906], [1.731754744E12, 18.992907801418447], [1.731754803E12, 19.279720279720273], [1.731754889E12, 19.942028985507243], [1.731754762E12, 20.357142857142858], [1.731754848E12, 19.094202898550733], [1.731754758E12, 20.323529411764714], [1.731754844E12, 18.911764705882366], [1.731754799E12, 19.82608695652174], [1.731754885E12, 20.57894736842104], [1.731754795E12, 20.742857142857144], [1.731754881E12, 18.985714285714273], [1.731754754E12, 21.294117647058822], [1.73175484E12, 18.434782608695645], [1.731754815E12, 18.783582089552237], [1.731754901E12, 18.274647887323944], [1.731754811E12, 17.935251798561158], [1.731754897E12, 18.41379310344828], [1.73175477E12, 22.093525179856105], [1.731754856E12, 20.503703703703707], [1.731754766E12, 20.95454545454545], [1.731754852E12, 19.2589928057554], [1.731754807E12, 18.33571428571428], [1.731754893E12, 20.078014184397148], [1.731754782E12, 19.204225352112676], [1.731754868E12, 18.510344827586213], [1.731754741E12, 20.893617021276608], [1.731754737E12, 22.970370370370375], [1.731754823E12, 19.514705882352946], [1.731754909E12, 20.274074074074072], [1.731754819E12, 18.99264705882353], [1.731754905E12, 19.600000000000012], [1.731754778E12, 18.964788732394368], [1.731754864E12, 20.583941605839417], [1.731754774E12, 20.67586206896552], [1.73175486E12, 20.151079136690655], [1.731754733E12, 23.978873239436616], [1.731754835E12, 20.879432624113463], [1.731754794E12, 19.21739130434782], [1.73175488E12, 18.291970802919717], [1.73175479E12, 19.24817518248176], [1.731754876E12, 18.02127659574468], [1.731754749E12, 20.571428571428587], [1.731754745E12, 20.431654676259], [1.731754831E12, 21.3065693430657], [1.731754827E12, 19.147887323943667], [1.731754786E12, 18.925373134328368], [1.731754872E12, 18.387323943661983]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.73175491E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.73175473E12, "maxY": 0.3725490196078433, "series": [{"data": [[1.731754804E12, 0.014705882352941181], [1.73175489E12, 0.027777777777777787], [1.731754886E12, 0.02040816326530613], [1.731754759E12, 0.028985507246376805], [1.731754845E12, 0.021276595744680854], [1.731754755E12, 0.029629629629629638], [1.731754841E12, 0.0287769784172662], [1.7317548E12, 0.0352112676056338], [1.731754796E12, 0.021126760563380288], [1.731754882E12, 0.0072992700729927005], [1.731754771E12, 0.02097902097902099], [1.731754857E12, 0.03424657534246575], [1.73175473E12, 0.3725490196078433], [1.731754816E12, 0.028368794326241138], [1.731754812E12, 0.00719424460431655], [1.731754898E12, 0.022556390977443608], [1.731754894E12, 0.01428571428571429], [1.731754767E12, 0.027586206896551727], [1.731754853E12, 0.01449275362318841], [1.731754763E12, 0.029197080291970802], [1.731754849E12, 0.014925373134328365], [1.731754808E12, 0.03676470588235295], [1.73175491E12, 0.0], [1.731754783E12, 0.029197080291970812], [1.731754869E12, 0.01481481481481482], [1.731754779E12, 0.02985074626865673], [1.731754865E12, 0.013986013986013993], [1.731754738E12, 0.02739726027397261], [1.731754824E12, 0.035714285714285705], [1.731754734E12, 0.028985507246376822], [1.73175482E12, 0.02985074626865671], [1.731754906E12, 0.04255319148936171], [1.731754902E12, 0.02919708029197081], [1.731754775E12, 0.014184397163120574], [1.731754861E12, 0.014184397163120572], [1.73175475E12, 0.021897810218978114], [1.731754836E12, 0.014084507042253527], [1.731754791E12, 0.029850746268656716], [1.731754877E12, 0.02205882352941177], [1.731754787E12, 0.014285714285714292], [1.731754873E12, 0.036764705882352956], [1.731754746E12, 0.021428571428571443], [1.731754832E12, 0.034965034965034975], [1.731754742E12, 0.0352112676056338], [1.731754828E12, 0.014388489208633103], [1.731754846E12, 0.035714285714285705], [1.731754805E12, 0.021276595744680854], [1.731754801E12, 0.014598540145985401], [1.731754887E12, 0.02238805970149255], [1.73175476E12, 0.021126760563380285], [1.731754883E12, 0.0352112676056338], [1.731754756E12, 0.027397260273972608], [1.731754842E12, 0.021739130434782608], [1.731754838E12, 0.037593984962406], [1.731754797E12, 0.014925373134328361], [1.731754899E12, 0.02112676056338029], [1.731754772E12, 0.021897810218978107], [1.731754858E12, 0.02919708029197081], [1.731754854E12, 0.007092198581560287], [1.731754813E12, 0.022222222222222227], [1.731754809E12, 0.028571428571428584], [1.731754895E12, 0.021582733812949645], [1.731754768E12, 0.037037037037037035], [1.731754891E12, 0.029411764705882363], [1.731754764E12, 0.020979020979020983], [1.73175485E12, 0.02739726027397261], [1.731754739E12, 0.028571428571428584], [1.731754825E12, 0.04225352112676057], [1.731754784E12, 0.022388059701492543], [1.731754907E12, 0.04347826086956523], [1.73175478E12, 0.021126760563380285], [1.731754866E12, 0.0], [1.731754862E12, 0.014705882352941185], [1.731754735E12, 0.027972027972027975], [1.731754821E12, 0.020547945205479458], [1.731754731E12, 0.046666666666666655], [1.731754817E12, 0.007299270072992703], [1.731754903E12, 0.03787878787878787], [1.731754776E12, 0.029411764705882363], [1.731754878E12, 0.007194244604316549], [1.731754751E12, 0.02898550724637682], [1.731754837E12, 0.029411764705882366], [1.731754747E12, 0.03623188405797103], [1.731754833E12, 0.0], [1.731754792E12, 0.013888888888888895], [1.731754788E12, 0.0143884892086331], [1.731754874E12, 0.022388059701492546], [1.73175487E12, 0.014388489208633106], [1.731754743E12, 0.03703703703703703], [1.731754829E12, 0.014184397163120574], [1.731754761E12, 0.028985507246376822], [1.731754847E12, 0.007142857142857146], [1.731754843E12, 0.03597122302158274], [1.731754802E12, 0.014814814814814819], [1.731754888E12, 0.0143884892086331], [1.731754798E12, 0.03546099290780143], [1.731754884E12, 0.0437956204379562], [1.731754757E12, 0.02877697841726619], [1.731754753E12, 0.03521126760563381], [1.731754839E12, 0.020408163265306128], [1.731754814E12, 0.0410958904109589], [1.7317549E12, 0.01470588235294118], [1.731754773E12, 0.03759398496240601], [1.731754769E12, 0.021582733812949645], [1.731754855E12, 0.022058823529411773], [1.731754851E12, 0.014705882352941181], [1.73175481E12, 0.021428571428571432], [1.731754896E12, 0.029197080291970812], [1.731754806E12, 0.01449275362318841], [1.731754892E12, 0.029411764705882363], [1.731754765E12, 0.028776978417266202], [1.731754867E12, 0.03676470588235293], [1.73175474E12, 0.03623188405797103], [1.731754826E12, 0.02985074626865673], [1.731754822E12, 0.029411764705882346], [1.731754908E12, 0.035714285714285726], [1.731754781E12, 0.02173913043478261], [1.731754777E12, 0.0287769784172662], [1.731754863E12, 0.014084507042253528], [1.731754736E12, 0.044117647058823525], [1.731754859E12, 0.03623188405797101], [1.731754732E12, 0.029197080291970812], [1.731754818E12, 0.027972027972027986], [1.731754904E12, 0.006849315068493154], [1.731754793E12, 0.02857142857142858], [1.731754879E12, 0.03521126760563382], [1.731754752E12, 0.029197080291970812], [1.731754875E12, 0.027586206896551738], [1.731754748E12, 0.022727272727272735], [1.731754834E12, 0.021582733812949645], [1.73175483E12, 0.0], [1.731754789E12, 0.007042253521126771], [1.731754785E12, 0.02739726027397261], [1.731754871E12, 0.028985507246376822], [1.731754744E12, 0.03546099290780143], [1.731754803E12, 0.03496503496503497], [1.731754889E12, 0.03623188405797102], [1.731754762E12, 0.014285714285714287], [1.731754848E12, 0.03623188405797101], [1.731754758E12, 0.036764705882352956], [1.731754844E12, 0.029411764705882353], [1.731754799E12, 0.043478260869565216], [1.731754885E12, 0.022556390977443615], [1.731754795E12, 0.028571428571428584], [1.731754881E12, 0.03571428571428572], [1.731754754E12, 0.014705882352941181], [1.73175484E12, 0.02898550724637683], [1.731754815E12, 0.022388059701492543], [1.731754901E12, 0.021126760563380285], [1.731754811E12, 0.0143884892086331], [1.731754897E12, 0.0206896551724138], [1.73175477E12, 0.0143884892086331], [1.731754856E12, 0.029629629629629624], [1.731754766E12, 0.030303030303030293], [1.731754852E12, 0.0287769784172662], [1.731754807E12, 0.021428571428571432], [1.731754893E12, 0.021276595744680854], [1.731754782E12, 0.028169014084507053], [1.731754868E12, 0.041379310344827586], [1.731754741E12, 0.042553191489361694], [1.731754737E12, 0.029629629629629638], [1.731754823E12, 0.014705882352941181], [1.731754909E12, 0.02962962962962964], [1.731754819E12, 0.02941176470588237], [1.731754905E12, 0.014814814814814815], [1.731754778E12, 0.03521126760563381], [1.731754864E12, 0.014598540145985406], [1.731754774E12, 0.0206896551724138], [1.73175486E12, 0.00719424460431655], [1.731754733E12, 0.028169014084507057], [1.731754835E12, 0.04255319148936171], [1.731754794E12, 0.021739130434782615], [1.73175488E12, 0.021897810218978107], [1.73175479E12, 0.014598540145985404], [1.731754876E12, 0.014184397163120572], [1.731754749E12, 0.040816326530612256], [1.731754745E12, 0.03597122302158273], [1.731754831E12, 0.014598540145985404], [1.731754827E12, 0.014084507042253527], [1.731754786E12, 0.03731343283582089], [1.731754872E12, 0.03521126760563381]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.73175491E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.73175473E12, "maxY": 91.0, "series": [{"data": [[1.731754804E12, 39.0], [1.73175489E12, 34.0], [1.731754886E12, 32.0], [1.731754759E12, 61.0], [1.731754845E12, 44.0], [1.731754755E12, 67.0], [1.731754841E12, 45.0], [1.7317548E12, 39.0], [1.731754796E12, 37.0], [1.731754882E12, 67.0], [1.731754771E12, 42.0], [1.731754857E12, 35.0], [1.73175473E12, 91.0], [1.731754816E12, 50.0], [1.731754812E12, 42.0], [1.731754898E12, 36.0], [1.731754894E12, 39.0], [1.731754767E12, 42.0], [1.731754853E12, 65.0], [1.731754763E12, 57.0], [1.731754849E12, 58.0], [1.731754808E12, 48.0], [1.73175491E12, 17.0], [1.731754783E12, 51.0], [1.731754869E12, 41.0], [1.731754779E12, 49.0], [1.731754865E12, 47.0], [1.731754738E12, 38.0], [1.731754824E12, 60.0], [1.731754734E12, 81.0], [1.73175482E12, 50.0], [1.731754906E12, 47.0], [1.731754902E12, 56.0], [1.731754775E12, 45.0], [1.731754861E12, 38.0], [1.73175475E12, 46.0], [1.731754836E12, 50.0], [1.731754791E12, 43.0], [1.731754877E12, 47.0], [1.731754787E12, 48.0], [1.731754873E12, 48.0], [1.731754746E12, 49.0], [1.731754832E12, 39.0], [1.731754742E12, 46.0], [1.731754828E12, 58.0], [1.731754846E12, 56.0], [1.731754805E12, 53.0], [1.731754801E12, 46.0], [1.731754887E12, 46.0], [1.73175476E12, 46.0], [1.731754883E12, 32.0], [1.731754756E12, 45.0], [1.731754842E12, 60.0], [1.731754838E12, 61.0], [1.731754797E12, 37.0], [1.731754899E12, 48.0], [1.731754772E12, 54.0], [1.731754858E12, 52.0], [1.731754854E12, 50.0], [1.731754813E12, 49.0], [1.731754809E12, 39.0], [1.731754895E12, 45.0], [1.731754768E12, 48.0], [1.731754891E12, 48.0], [1.731754764E12, 51.0], [1.73175485E12, 39.0], [1.731754739E12, 45.0], [1.731754825E12, 44.0], [1.731754784E12, 59.0], [1.731754907E12, 51.0], [1.73175478E12, 53.0], [1.731754866E12, 47.0], [1.731754862E12, 53.0], [1.731754735E12, 46.0], [1.731754821E12, 37.0], [1.731754731E12, 49.0], [1.731754817E12, 51.0], [1.731754903E12, 55.0], [1.731754776E12, 49.0], [1.731754878E12, 54.0], [1.731754751E12, 43.0], [1.731754837E12, 45.0], [1.731754747E12, 54.0], [1.731754833E12, 45.0], [1.731754792E12, 58.0], [1.731754788E12, 59.0], [1.731754874E12, 59.0], [1.73175487E12, 57.0], [1.731754743E12, 44.0], [1.731754829E12, 51.0], [1.731754761E12, 55.0], [1.731754847E12, 52.0], [1.731754843E12, 49.0], [1.731754802E12, 60.0], [1.731754888E12, 57.0], [1.731754798E12, 46.0], [1.731754884E12, 53.0], [1.731754757E12, 48.0], [1.731754753E12, 44.0], [1.731754839E12, 39.0], [1.731754814E12, 42.0], [1.7317549E12, 54.0], [1.731754773E12, 71.0], [1.731754769E12, 52.0], [1.731754855E12, 48.0], [1.731754851E12, 47.0], [1.73175481E12, 64.0], [1.731754896E12, 53.0], [1.731754806E12, 43.0], [1.731754892E12, 51.0], [1.731754765E12, 50.0], [1.731754867E12, 63.0], [1.73175474E12, 60.0], [1.731754826E12, 49.0], [1.731754822E12, 43.0], [1.731754908E12, 43.0], [1.731754781E12, 60.0], [1.731754777E12, 62.0], [1.731754863E12, 52.0], [1.731754736E12, 53.0], [1.731754859E12, 55.0], [1.731754732E12, 49.0], [1.731754818E12, 35.0], [1.731754904E12, 38.0], [1.731754793E12, 36.0], [1.731754879E12, 35.0], [1.731754752E12, 64.0], [1.731754875E12, 52.0], [1.731754748E12, 60.0], [1.731754834E12, 53.0], [1.73175483E12, 43.0], [1.731754789E12, 36.0], [1.731754785E12, 38.0], [1.731754871E12, 63.0], [1.731754744E12, 39.0], [1.731754803E12, 38.0], [1.731754889E12, 64.0], [1.731754762E12, 51.0], [1.731754848E12, 49.0], [1.731754758E12, 46.0], [1.731754844E12, 41.0], [1.731754799E12, 58.0], [1.731754885E12, 65.0], [1.731754795E12, 61.0], [1.731754881E12, 47.0], [1.731754754E12, 62.0], [1.73175484E12, 49.0], [1.731754815E12, 50.0], [1.731754901E12, 41.0], [1.731754811E12, 36.0], [1.731754897E12, 36.0], [1.73175477E12, 58.0], [1.731754856E12, 62.0], [1.731754766E12, 62.0], [1.731754852E12, 47.0], [1.731754807E12, 44.0], [1.731754893E12, 42.0], [1.731754782E12, 49.0], [1.731754868E12, 38.0], [1.731754741E12, 59.0], [1.731754737E12, 65.0], [1.731754823E12, 51.0], [1.731754909E12, 50.0], [1.731754819E12, 51.0], [1.731754905E12, 36.0], [1.731754778E12, 32.0], [1.731754864E12, 64.0], [1.731754774E12, 59.0], [1.73175486E12, 58.0], [1.731754733E12, 53.0], [1.731754835E12, 57.0], [1.731754794E12, 57.0], [1.73175488E12, 50.0], [1.73175479E12, 59.0], [1.731754876E12, 41.0], [1.731754749E12, 38.0], [1.731754745E12, 62.0], [1.731754831E12, 64.0], [1.731754827E12, 39.0], [1.731754786E12, 36.0], [1.731754872E12, 41.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.731754804E12, 27.0], [1.73175489E12, 24.5], [1.731754886E12, 26.200000000000017], [1.731754759E12, 28.0], [1.731754845E12, 27.799999999999997], [1.731754755E12, 32.0], [1.731754841E12, 29.0], [1.7317548E12, 25.700000000000017], [1.731754796E12, 24.0], [1.731754882E12, 26.200000000000003], [1.731754771E12, 26.0], [1.731754857E12, 26.0], [1.73175473E12, 35.7], [1.731754816E12, 26.0], [1.731754812E12, 25.0], [1.731754898E12, 28.0], [1.731754894E12, 25.900000000000006], [1.731754767E12, 26.400000000000006], [1.731754853E12, 28.10000000000001], [1.731754763E12, 29.200000000000003], [1.731754849E12, 31.5], [1.731754808E12, 27.299999999999997], [1.73175491E12, 16.6], [1.731754783E12, 26.200000000000003], [1.731754869E12, 25.400000000000006], [1.731754779E12, 26.5], [1.731754865E12, 27.599999999999994], [1.731754738E12, 29.0], [1.731754824E12, 27.0], [1.731754734E12, 34.10000000000001], [1.73175482E12, 28.5], [1.731754906E12, 31.0], [1.731754902E12, 28.0], [1.731754775E12, 25.0], [1.731754861E12, 25.0], [1.73175475E12, 28.60000000000001], [1.731754836E12, 25.0], [1.731754791E12, 26.0], [1.731754877E12, 27.299999999999997], [1.731754787E12, 26.0], [1.731754873E12, 27.0], [1.731754746E12, 26.0], [1.731754832E12, 27.0], [1.731754742E12, 26.700000000000017], [1.731754828E12, 28.0], [1.731754846E12, 27.0], [1.731754805E12, 25.0], [1.731754801E12, 26.0], [1.731754887E12, 28.0], [1.73175476E12, 28.700000000000017], [1.731754883E12, 24.0], [1.731754756E12, 26.0], [1.731754842E12, 27.0], [1.731754838E12, 34.0], [1.731754797E12, 27.0], [1.731754899E12, 27.700000000000017], [1.731754772E12, 25.400000000000006], [1.731754858E12, 25.0], [1.731754854E12, 27.0], [1.731754813E12, 30.0], [1.731754809E12, 26.0], [1.731754895E12, 26.0], [1.731754768E12, 29.0], [1.731754891E12, 28.299999999999997], [1.731754764E12, 25.0], [1.73175485E12, 25.30000000000001], [1.731754739E12, 26.900000000000006], [1.731754825E12, 26.0], [1.731754784E12, 32.5], [1.731754907E12, 28.0], [1.73175478E12, 29.0], [1.731754866E12, 25.599999999999994], [1.731754862E12, 27.299999999999997], [1.731754735E12, 30.0], [1.731754821E12, 25.0], [1.731754731E12, 32.900000000000006], [1.731754817E12, 29.0], [1.731754903E12, 31.700000000000003], [1.731754776E12, 28.299999999999997], [1.731754878E12, 25.0], [1.731754751E12, 28.10000000000001], [1.731754837E12, 29.0], [1.731754747E12, 30.0], [1.731754833E12, 29.0], [1.731754792E12, 26.0], [1.731754788E12, 27.0], [1.731754874E12, 27.0], [1.73175487E12, 27.0], [1.731754743E12, 30.0], [1.731754829E12, 24.799999999999997], [1.731754761E12, 28.0], [1.731754847E12, 26.0], [1.731754843E12, 26.0], [1.731754802E12, 28.0], [1.731754888E12, 26.0], [1.731754798E12, 25.0], [1.731754884E12, 27.0], [1.731754757E12, 26.0], [1.731754753E12, 25.700000000000017], [1.731754839E12, 27.200000000000017], [1.731754814E12, 26.0], [1.7317549E12, 27.0], [1.731754773E12, 29.200000000000017], [1.731754769E12, 28.0], [1.731754855E12, 27.0], [1.731754851E12, 25.299999999999997], [1.73175481E12, 27.80000000000001], [1.731754896E12, 28.200000000000003], [1.731754806E12, 28.10000000000001], [1.731754892E12, 25.0], [1.731754765E12, 28.0], [1.731754867E12, 29.299999999999997], [1.73175474E12, 30.0], [1.731754826E12, 27.5], [1.731754822E12, 26.0], [1.731754908E12, 25.0], [1.731754781E12, 28.10000000000001], [1.731754777E12, 27.0], [1.731754863E12, 27.700000000000017], [1.731754736E12, 31.19999999999999], [1.731754859E12, 29.10000000000001], [1.731754732E12, 36.0], [1.731754818E12, 25.0], [1.731754904E12, 28.0], [1.731754793E12, 26.0], [1.731754879E12, 24.0], [1.731754752E12, 30.400000000000006], [1.731754875E12, 27.0], [1.731754748E12, 33.80000000000001], [1.731754834E12, 27.0], [1.73175483E12, 27.400000000000006], [1.731754789E12, 25.700000000000017], [1.731754785E12, 26.0], [1.731754871E12, 26.0], [1.731754744E12, 27.0], [1.731754803E12, 26.0], [1.731754889E12, 27.0], [1.731754762E12, 27.900000000000006], [1.731754848E12, 27.0], [1.731754758E12, 28.0], [1.731754844E12, 27.0], [1.731754799E12, 27.10000000000001], [1.731754885E12, 27.60000000000001], [1.731754795E12, 28.900000000000006], [1.731754881E12, 25.900000000000006], [1.731754754E12, 29.0], [1.73175484E12, 26.0], [1.731754815E12, 27.0], [1.731754901E12, 24.0], [1.731754811E12, 24.0], [1.731754897E12, 26.0], [1.73175477E12, 31.0], [1.731754856E12, 29.0], [1.731754766E12, 31.700000000000003], [1.731754852E12, 27.0], [1.731754807E12, 25.0], [1.731754893E12, 26.799999999999997], [1.731754782E12, 25.0], [1.731754868E12, 24.0], [1.731754741E12, 28.799999999999997], [1.731754737E12, 32.0], [1.731754823E12, 29.0], [1.731754909E12, 29.0], [1.731754819E12, 30.0], [1.731754905E12, 28.0], [1.731754778E12, 25.0], [1.731754864E12, 27.200000000000003], [1.731754774E12, 28.400000000000006], [1.73175486E12, 26.0], [1.731754733E12, 32.0], [1.731754835E12, 28.0], [1.731754794E12, 25.10000000000001], [1.73175488E12, 26.0], [1.73175479E12, 27.400000000000006], [1.731754876E12, 25.0], [1.731754749E12, 27.0], [1.731754745E12, 30.0], [1.731754831E12, 30.400000000000006], [1.731754827E12, 26.700000000000017], [1.731754786E12, 27.0], [1.731754872E12, 25.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.731754804E12, 37.51999999999998], [1.73175489E12, 34.0], [1.731754886E12, 31.52000000000001], [1.731754759E12, 59.049999999999926], [1.731754845E12, 42.74000000000004], [1.731754755E12, 65.55999999999995], [1.731754841E12, 45.0], [1.7317548E12, 37.27999999999997], [1.731754796E12, 36.56999999999999], [1.731754882E12, 63.960000000000036], [1.731754771E12, 41.120000000000005], [1.731754857E12, 34.53], [1.73175473E12, 90.91], [1.731754816E12, 48.74000000000004], [1.731754812E12, 42.0], [1.731754898E12, 34.97999999999999], [1.731754894E12, 36.95000000000002], [1.731754767E12, 40.619999999999976], [1.731754853E12, 62.2699999999999], [1.731754763E12, 56.620000000000005], [1.731754849E12, 56.95000000000002], [1.731754808E12, 47.629999999999995], [1.73175491E12, 17.0], [1.731754783E12, 49.860000000000014], [1.731754869E12, 40.27999999999997], [1.731754779E12, 47.95000000000002], [1.731754865E12, 45.68000000000001], [1.731754738E12, 37.53], [1.731754824E12, 56.72000000000003], [1.731754734E12, 81.0], [1.73175482E12, 48.25000000000003], [1.731754906E12, 46.58000000000001], [1.731754902E12, 49.92000000000007], [1.731754775E12, 45.0], [1.731754861E12, 38.0], [1.73175475E12, 45.620000000000005], [1.731754836E12, 47.849999999999966], [1.731754791E12, 42.650000000000006], [1.731754877E12, 45.889999999999986], [1.731754787E12, 45.130000000000024], [1.731754873E12, 47.25999999999999], [1.731754746E12, 46.130000000000024], [1.731754832E12, 35.48000000000002], [1.731754742E12, 45.139999999999986], [1.731754828E12, 55.599999999999966], [1.731754846E12, 54.77000000000001], [1.731754805E12, 51.32000000000005], [1.731754801E12, 44.10000000000002], [1.731754887E12, 43.55000000000004], [1.73175476E12, 42.559999999999945], [1.731754883E12, 32.0], [1.731754756E12, 42.18000000000001], [1.731754842E12, 58.43999999999994], [1.731754838E12, 57.25999999999996], [1.731754797E12, 36.650000000000006], [1.731754899E12, 47.56999999999999], [1.731754772E12, 50.200000000000045], [1.731754858E12, 50.48000000000002], [1.731754854E12, 48.32000000000005], [1.731754813E12, 46.11999999999989], [1.731754809E12, 37.77000000000001], [1.731754895E12, 42.99999999999997], [1.731754768E12, 46.91999999999996], [1.731754891E12, 47.629999999999995], [1.731754764E12, 48.360000000000014], [1.73175485E12, 35.71000000000001], [1.731754739E12, 43.360000000000014], [1.731754825E12, 43.139999999999986], [1.731754784E12, 58.650000000000006], [1.731754907E12, 51.0], [1.73175478E12, 50.41999999999996], [1.731754866E12, 45.889999999999986], [1.731754862E12, 48.559999999999945], [1.731754735E12, 45.120000000000005], [1.731754821E12, 36.06], [1.731754731E12, 46.450000000000045], [1.731754817E12, 49.48000000000002], [1.731754903E12, 54.00999999999996], [1.731754776E12, 48.629999999999995], [1.731754878E12, 53.599999999999994], [1.731754751E12, 42.609999999999985], [1.731754837E12, 45.0], [1.731754747E12, 52.049999999999926], [1.731754833E12, 44.27999999999997], [1.731754792E12, 56.650000000000034], [1.731754788E12, 58.599999999999994], [1.731754874E12, 58.30000000000001], [1.73175487E12, 54.599999999999966], [1.731754743E12, 43.639999999999986], [1.731754829E12, 47.22000000000011], [1.731754761E12, 50.70999999999984], [1.731754847E12, 49.95000000000002], [1.731754843E12, 49.0], [1.731754802E12, 58.19999999999993], [1.731754888E12, 54.19999999999996], [1.731754798E12, 44.32000000000005], [1.731754884E12, 50.72000000000003], [1.731754757E12, 45.19999999999996], [1.731754753E12, 43.56999999999999], [1.731754839E12, 36.60000000000005], [1.731754814E12, 39.18000000000001], [1.7317549E12, 49.559999999999945], [1.731754773E12, 64.87999999999994], [1.731754769E12, 51.599999999999994], [1.731754855E12, 47.629999999999995], [1.731754851E12, 45.889999999999986], [1.73175481E12, 60.31000000000003], [1.731754896E12, 52.24000000000001], [1.731754806E12, 42.609999999999985], [1.731754892E12, 48.039999999999964], [1.731754765E12, 48.39999999999998], [1.731754867E12, 58.559999999999945], [1.73175474E12, 60.0], [1.731754826E12, 46.55000000000004], [1.731754822E12, 42.25999999999999], [1.731754908E12, 42.18000000000001], [1.731754781E12, 59.609999999999985], [1.731754777E12, 57.99999999999994], [1.731754863E12, 50.27999999999997], [1.731754736E12, 52.25999999999999], [1.731754859E12, 53.43999999999994], [1.731754732E12, 49.0], [1.731754818E12, 33.24000000000001], [1.731754904E12, 37.53], [1.731754793E12, 36.0], [1.731754879E12, 32.849999999999966], [1.731754752E12, 59.82000000000005], [1.731754875E12, 46.479999999999905], [1.731754748E12, 58.019999999999925], [1.731754834E12, 50.599999999999966], [1.73175483E12, 41.559999999999945], [1.731754789E12, 34.70999999999998], [1.731754785E12, 36.120000000000005], [1.731754871E12, 61.43999999999994], [1.731754744E12, 38.58000000000001], [1.731754803E12, 38.0], [1.731754889E12, 59.70999999999984], [1.731754762E12, 48.130000000000024], [1.731754848E12, 46.2699999999999], [1.731754758E12, 45.25999999999999], [1.731754844E12, 41.0], [1.731754799E12, 57.21999999999997], [1.731754885E12, 62.619999999999976], [1.731754795E12, 58.95000000000002], [1.731754881E12, 46.18000000000001], [1.731754754E12, 61.629999999999995], [1.73175484E12, 47.829999999999956], [1.731754815E12, 45.450000000000074], [1.731754901E12, 40.139999999999986], [1.731754811E12, 35.599999999999994], [1.731754897E12, 33.23999999999995], [1.73175477E12, 58.0], [1.731754856E12, 60.19999999999993], [1.731754766E12, 60.34999999999994], [1.731754852E12, 43.799999999999955], [1.731754807E12, 39.49000000000004], [1.731754893E12, 42.0], [1.731754782E12, 45.98999999999995], [1.731754868E12, 34.319999999999936], [1.731754741E12, 56.06000000000009], [1.731754737E12, 60.679999999999836], [1.731754823E12, 48.40999999999997], [1.731754909E12, 47.479999999999905], [1.731754819E12, 47.66999999999996], [1.731754905E12, 35.27999999999997], [1.731754778E12, 31.139999999999986], [1.731754864E12, 62.10000000000002], [1.731754774E12, 48.879999999999825], [1.73175486E12, 57.599999999999994], [1.731754733E12, 52.56999999999999], [1.731754835E12, 56.58000000000001], [1.731754794E12, 54.65999999999991], [1.73175488E12, 45.82000000000005], [1.73175479E12, 51.780000000000086], [1.731754876E12, 38.480000000000075], [1.731754749E12, 37.04000000000002], [1.731754745E12, 57.19999999999993], [1.731754831E12, 61.72000000000003], [1.731754827E12, 38.139999999999986], [1.731754786E12, 34.60000000000002], [1.731754872E12, 40.56999999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.731754804E12, 30.150000000000006], [1.73175489E12, 28.5], [1.731754886E12, 27.0], [1.731754759E12, 37.099999999999966], [1.731754845E12, 34.70000000000002], [1.731754755E12, 38.39999999999998], [1.731754841E12, 33.0], [1.7317548E12, 28.849999999999994], [1.731754796E12, 27.0], [1.731754882E12, 31.49999999999997], [1.731754771E12, 28.799999999999983], [1.731754857E12, 28.0], [1.73175473E12, 46.39999999999998], [1.731754816E12, 31.0], [1.731754812E12, 30.0], [1.731754898E12, 30.0], [1.731754894E12, 30.94999999999999], [1.731754767E12, 30.69999999999999], [1.731754853E12, 34.0], [1.731754763E12, 33.29999999999998], [1.731754849E12, 40.25], [1.731754808E12, 32.45000000000002], [1.73175491E12, 17.0], [1.731754783E12, 33.0], [1.731754869E12, 29.19999999999999], [1.731754779E12, 36.25], [1.731754865E12, 31.0], [1.731754738E12, 34.650000000000006], [1.731754824E12, 37.74999999999994], [1.731754734E12, 38.14999999999995], [1.73175482E12, 32.75], [1.731754906E12, 37.0], [1.731754902E12, 32.29999999999998], [1.731754775E12, 28.0], [1.731754861E12, 29.0], [1.73175475E12, 39.0], [1.731754836E12, 30.849999999999994], [1.731754791E12, 29.75], [1.731754877E12, 33.150000000000006], [1.731754787E12, 34.849999999999966], [1.731754873E12, 33.200000000000045], [1.731754746E12, 33.849999999999966], [1.731754832E12, 29.799999999999983], [1.731754742E12, 31.0], [1.731754828E12, 32.0], [1.731754846E12, 33.94999999999999], [1.731754805E12, 29.900000000000006], [1.731754801E12, 32.0], [1.731754887E12, 34.0], [1.73175476E12, 32.849999999999994], [1.731754883E12, 25.849999999999994], [1.731754756E12, 29.650000000000006], [1.731754842E12, 33.0], [1.731754838E12, 37.0], [1.731754797E12, 30.0], [1.731754899E12, 31.849999999999994], [1.731754772E12, 34.29999999999998], [1.731754858E12, 30.099999999999994], [1.731754854E12, 29.80000000000001], [1.731754813E12, 35.599999999999966], [1.731754809E12, 30.0], [1.731754895E12, 30.0], [1.731754768E12, 33.19999999999999], [1.731754891E12, 32.45000000000002], [1.731754764E12, 29.799999999999983], [1.73175485E12, 28.0], [1.731754739E12, 34.0], [1.731754825E12, 32.24999999999997], [1.731754784E12, 40.5], [1.731754907E12, 35.0], [1.73175478E12, 33.849999999999994], [1.731754866E12, 34.0], [1.731754862E12, 33.150000000000006], [1.731754735E12, 31.0], [1.731754821E12, 30.0], [1.731754731E12, 35.0], [1.731754817E12, 32.29999999999998], [1.731754903E12, 34.0], [1.731754776E12, 37.45000000000002], [1.731754878E12, 38.0], [1.731754751E12, 32.099999999999966], [1.731754837E12, 32.0], [1.731754747E12, 35.0], [1.731754833E12, 35.19999999999999], [1.731754792E12, 35.0], [1.731754788E12, 29.0], [1.731754874E12, 34.75], [1.73175487E12, 32.0], [1.731754743E12, 33.19999999999999], [1.731754829E12, 30.900000000000006], [1.731754761E12, 36.0], [1.731754847E12, 28.94999999999999], [1.731754843E12, 31.0], [1.731754802E12, 37.599999999999966], [1.731754888E12, 34.0], [1.731754798E12, 31.80000000000001], [1.731754884E12, 30.399999999999977], [1.731754757E12, 33.0], [1.731754753E12, 29.849999999999994], [1.731754839E12, 29.599999999999994], [1.731754814E12, 28.650000000000006], [1.7317549E12, 36.150000000000006], [1.731754773E12, 34.3], [1.731754769E12, 35.0], [1.731754855E12, 34.45000000000002], [1.731754851E12, 33.60000000000002], [1.73175481E12, 35.89999999999998], [1.731754896E12, 40.19999999999999], [1.731754806E12, 31.049999999999983], [1.731754892E12, 34.75000000000003], [1.731754765E12, 35.0], [1.731754867E12, 38.05000000000004], [1.73175474E12, 37.599999999999795], [1.731754826E12, 35.25], [1.731754822E12, 28.30000000000001], [1.731754908E12, 32.94999999999999], [1.731754781E12, 37.19999999999993], [1.731754777E12, 42.0], [1.731754863E12, 35.0], [1.731754736E12, 40.30000000000001], [1.731754859E12, 35.099999999999966], [1.731754732E12, 44.099999999999994], [1.731754818E12, 28.599999999999966], [1.731754904E12, 33.650000000000006], [1.731754793E12, 31.0], [1.731754879E12, 25.0], [1.731754752E12, 36.19999999999999], [1.731754875E12, 28.0], [1.731754748E12, 38.74999999999997], [1.731754834E12, 32.0], [1.73175483E12, 32.19999999999999], [1.731754789E12, 28.849999999999994], [1.731754785E12, 29.0], [1.731754871E12, 31.0], [1.731754744E12, 30.80000000000001], [1.731754803E12, 28.0], [1.731754889E12, 37.0], [1.731754762E12, 36.74999999999994], [1.731754848E12, 32.04999999999998], [1.731754758E12, 41.150000000000006], [1.731754844E12, 31.150000000000006], [1.731754799E12, 35.04999999999998], [1.731754885E12, 37.3], [1.731754795E12, 38.94999999999999], [1.731754881E12, 32.94999999999999], [1.731754754E12, 38.150000000000006], [1.73175484E12, 34.0], [1.731754815E12, 31.0], [1.731754901E12, 27.549999999999983], [1.731754811E12, 29.0], [1.731754897E12, 27.0], [1.73175477E12, 36.0], [1.731754856E12, 36.59999999999991], [1.731754766E12, 36.69999999999999], [1.731754852E12, 34.0], [1.731754807E12, 29.0], [1.731754893E12, 33.900000000000006], [1.731754782E12, 30.69999999999999], [1.731754868E12, 26.0], [1.731754741E12, 33.80000000000001], [1.731754737E12, 41.799999999999955], [1.731754823E12, 30.150000000000006], [1.731754909E12, 33.39999999999998], [1.731754819E12, 36.150000000000006], [1.731754905E12, 30.399999999999977], [1.731754778E12, 27.0], [1.731754864E12, 31.099999999999994], [1.731754774E12, 32.0], [1.73175486E12, 32.0], [1.731754733E12, 38.0], [1.731754835E12, 36.0], [1.731754794E12, 30.099999999999966], [1.73175488E12, 31.099999999999994], [1.73175479E12, 31.099999999999994], [1.731754876E12, 27.0], [1.731754749E12, 30.0], [1.731754745E12, 33.0], [1.731754831E12, 40.19999999999999], [1.731754827E12, 30.849999999999994], [1.731754786E12, 30.0], [1.731754872E12, 27.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.731754804E12, 13.0], [1.73175489E12, 13.0], [1.731754886E12, 13.0], [1.731754759E12, 14.0], [1.731754845E12, 10.0], [1.731754755E12, 6.0], [1.731754841E12, 10.0], [1.7317548E12, 13.0], [1.731754796E12, 13.0], [1.731754882E12, 13.0], [1.731754771E12, 13.0], [1.731754857E12, 14.0], [1.73175473E12, 15.0], [1.731754816E12, 6.0], [1.731754812E12, 13.0], [1.731754898E12, 13.0], [1.731754894E12, 13.0], [1.731754767E12, 14.0], [1.731754853E12, 13.0], [1.731754763E12, 14.0], [1.731754849E12, 8.0], [1.731754808E12, 13.0], [1.73175491E12, 14.0], [1.731754783E12, 13.0], [1.731754869E12, 13.0], [1.731754779E12, 13.0], [1.731754865E12, 13.0], [1.731754738E12, 14.0], [1.731754824E12, 13.0], [1.731754734E12, 14.0], [1.73175482E12, 6.0], [1.731754906E12, 6.0], [1.731754902E12, 13.0], [1.731754775E12, 13.0], [1.731754861E12, 13.0], [1.73175475E12, 13.0], [1.731754836E12, 13.0], [1.731754791E12, 8.0], [1.731754877E12, 13.0], [1.731754787E12, 11.0], [1.731754873E12, 13.0], [1.731754746E12, 14.0], [1.731754832E12, 13.0], [1.731754742E12, 14.0], [1.731754828E12, 13.0], [1.731754846E12, 13.0], [1.731754805E12, 6.0], [1.731754801E12, 13.0], [1.731754887E12, 13.0], [1.73175476E12, 13.0], [1.731754883E12, 13.0], [1.731754756E12, 13.0], [1.731754842E12, 13.0], [1.731754838E12, 10.0], [1.731754797E12, 13.0], [1.731754899E12, 6.0], [1.731754772E12, 13.0], [1.731754858E12, 13.0], [1.731754854E12, 13.0], [1.731754813E12, 6.0], [1.731754809E12, 5.0], [1.731754895E12, 13.0], [1.731754768E12, 13.0], [1.731754891E12, 13.0], [1.731754764E12, 13.0], [1.73175485E12, 13.0], [1.731754739E12, 14.0], [1.731754825E12, 13.0], [1.731754784E12, 5.0], [1.731754907E12, 13.0], [1.73175478E12, 9.0], [1.731754866E12, 13.0], [1.731754862E12, 13.0], [1.731754735E12, 14.0], [1.731754821E12, 13.0], [1.731754731E12, 14.0], [1.731754817E12, 13.0], [1.731754903E12, 6.0], [1.731754776E12, 13.0], [1.731754878E12, 7.0], [1.731754751E12, 6.0], [1.731754837E12, 13.0], [1.731754747E12, 14.0], [1.731754833E12, 13.0], [1.731754792E12, 13.0], [1.731754788E12, 13.0], [1.731754874E12, 12.0], [1.73175487E12, 6.0], [1.731754743E12, 13.0], [1.731754829E12, 13.0], [1.731754761E12, 13.0], [1.731754847E12, 13.0], [1.731754843E12, 13.0], [1.731754802E12, 6.0], [1.731754888E12, 6.0], [1.731754798E12, 7.0], [1.731754884E12, 13.0], [1.731754757E12, 13.0], [1.731754753E12, 14.0], [1.731754839E12, 13.0], [1.731754814E12, 13.0], [1.7317549E12, 13.0], [1.731754773E12, 6.0], [1.731754769E12, 7.0], [1.731754855E12, 14.0], [1.731754851E12, 13.0], [1.73175481E12, 13.0], [1.731754896E12, 12.0], [1.731754806E12, 13.0], [1.731754892E12, 9.0], [1.731754765E12, 13.0], [1.731754867E12, 5.0], [1.73175474E12, 7.0], [1.731754826E12, 13.0], [1.731754822E12, 13.0], [1.731754908E12, 14.0], [1.731754781E12, 14.0], [1.731754777E12, 8.0], [1.731754863E12, 6.0], [1.731754736E12, 14.0], [1.731754859E12, 10.0], [1.731754732E12, 14.0], [1.731754818E12, 13.0], [1.731754904E12, 13.0], [1.731754793E12, 13.0], [1.731754879E12, 13.0], [1.731754752E12, 13.0], [1.731754875E12, 13.0], [1.731754748E12, 6.0], [1.731754834E12, 11.0], [1.73175483E12, 13.0], [1.731754789E12, 13.0], [1.731754785E12, 13.0], [1.731754871E12, 13.0], [1.731754744E12, 11.0], [1.731754803E12, 13.0], [1.731754889E12, 13.0], [1.731754762E12, 6.0], [1.731754848E12, 13.0], [1.731754758E12, 8.0], [1.731754844E12, 13.0], [1.731754799E12, 13.0], [1.731754885E12, 12.0], [1.731754795E12, 7.0], [1.731754881E12, 8.0], [1.731754754E12, 13.0], [1.73175484E12, 13.0], [1.731754815E12, 13.0], [1.731754901E12, 13.0], [1.731754811E12, 13.0], [1.731754897E12, 13.0], [1.73175477E12, 13.0], [1.731754856E12, 10.0], [1.731754766E12, 9.0], [1.731754852E12, 6.0], [1.731754807E12, 13.0], [1.731754893E12, 14.0], [1.731754782E12, 13.0], [1.731754868E12, 13.0], [1.731754741E12, 13.0], [1.731754737E12, 14.0], [1.731754823E12, 6.0], [1.731754909E12, 14.0], [1.731754819E12, 13.0], [1.731754905E12, 13.0], [1.731754778E12, 13.0], [1.731754864E12, 14.0], [1.731754774E12, 13.0], [1.73175486E12, 13.0], [1.731754733E12, 6.0], [1.731754835E12, 13.0], [1.731754794E12, 13.0], [1.73175488E12, 13.0], [1.73175479E12, 13.0], [1.731754876E12, 13.0], [1.731754749E12, 13.0], [1.731754745E12, 13.0], [1.731754831E12, 7.0], [1.731754827E12, 6.0], [1.731754786E12, 13.0], [1.731754872E12, 13.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.731754804E12, 17.0], [1.73175489E12, 18.0], [1.731754886E12, 18.0], [1.731754759E12, 19.5], [1.731754845E12, 18.0], [1.731754755E12, 19.0], [1.731754841E12, 18.0], [1.7317548E12, 16.0], [1.731754796E12, 17.0], [1.731754882E12, 19.0], [1.731754771E12, 18.0], [1.731754857E12, 20.0], [1.73175473E12, 23.0], [1.731754816E12, 18.0], [1.731754812E12, 18.0], [1.731754898E12, 17.0], [1.731754894E12, 18.0], [1.731754767E12, 19.0], [1.731754853E12, 18.5], [1.731754763E12, 21.0], [1.731754849E12, 20.0], [1.731754808E12, 17.0], [1.73175491E12, 15.0], [1.731754783E12, 19.0], [1.731754869E12, 16.0], [1.731754779E12, 18.0], [1.731754865E12, 16.0], [1.731754738E12, 21.5], [1.731754824E12, 18.0], [1.731754734E12, 23.0], [1.73175482E12, 19.0], [1.731754906E12, 20.0], [1.731754902E12, 18.0], [1.731754775E12, 18.0], [1.731754861E12, 18.0], [1.73175475E12, 18.0], [1.731754836E12, 16.0], [1.731754791E12, 18.0], [1.731754877E12, 18.0], [1.731754787E12, 18.0], [1.731754873E12, 18.0], [1.731754746E12, 17.0], [1.731754832E12, 19.0], [1.731754742E12, 18.0], [1.731754828E12, 18.0], [1.731754846E12, 18.0], [1.731754805E12, 17.0], [1.731754801E12, 17.0], [1.731754887E12, 17.0], [1.73175476E12, 18.0], [1.731754883E12, 15.5], [1.731754756E12, 20.0], [1.731754842E12, 18.0], [1.731754838E12, 18.0], [1.731754797E12, 17.0], [1.731754899E12, 18.0], [1.731754772E12, 18.0], [1.731754858E12, 17.0], [1.731754854E12, 17.0], [1.731754813E12, 18.0], [1.731754809E12, 17.0], [1.731754895E12, 18.0], [1.731754768E12, 19.0], [1.731754891E12, 17.5], [1.731754764E12, 18.0], [1.73175485E12, 18.0], [1.731754739E12, 20.0], [1.731754825E12, 17.0], [1.731754784E12, 19.5], [1.731754907E12, 20.0], [1.73175478E12, 20.0], [1.731754866E12, 18.5], [1.731754862E12, 16.0], [1.731754735E12, 22.0], [1.731754821E12, 18.0], [1.731754731E12, 24.0], [1.731754817E12, 17.0], [1.731754903E12, 20.0], [1.731754776E12, 18.0], [1.731754878E12, 18.0], [1.731754751E12, 19.0], [1.731754837E12, 18.0], [1.731754747E12, 18.0], [1.731754833E12, 17.0], [1.731754792E12, 19.0], [1.731754788E12, 19.0], [1.731754874E12, 18.5], [1.73175487E12, 18.0], [1.731754743E12, 17.0], [1.731754829E12, 17.0], [1.731754761E12, 18.0], [1.731754847E12, 16.0], [1.731754843E12, 17.0], [1.731754802E12, 17.0], [1.731754888E12, 18.0], [1.731754798E12, 18.0], [1.731754884E12, 18.0], [1.731754757E12, 17.0], [1.731754753E12, 18.5], [1.731754839E12, 19.0], [1.731754814E12, 17.0], [1.7317549E12, 18.0], [1.731754773E12, 19.0], [1.731754769E12, 20.0], [1.731754855E12, 17.0], [1.731754851E12, 16.5], [1.73175481E12, 19.0], [1.731754896E12, 20.0], [1.731754806E12, 17.5], [1.731754892E12, 18.0], [1.731754765E12, 20.0], [1.731754867E12, 18.0], [1.73175474E12, 20.0], [1.731754826E12, 16.5], [1.731754822E12, 15.0], [1.731754908E12, 19.0], [1.731754781E12, 21.0], [1.731754777E12, 20.0], [1.731754863E12, 18.0], [1.731754736E12, 21.0], [1.731754859E12, 18.0], [1.731754732E12, 22.0], [1.731754818E12, 17.0], [1.731754904E12, 19.5], [1.731754793E12, 16.0], [1.731754879E12, 17.5], [1.731754752E12, 21.0], [1.731754875E12, 19.0], [1.731754748E12, 20.0], [1.731754834E12, 20.0], [1.73175483E12, 18.0], [1.731754789E12, 18.0], [1.731754785E12, 19.0], [1.731754871E12, 18.0], [1.731754744E12, 18.0], [1.731754803E12, 18.0], [1.731754889E12, 18.0], [1.731754762E12, 19.0], [1.731754848E12, 17.5], [1.731754758E12, 18.0], [1.731754844E12, 17.0], [1.731754799E12, 18.0], [1.731754885E12, 19.0], [1.731754795E12, 19.0], [1.731754881E12, 18.0], [1.731754754E12, 19.0], [1.73175484E12, 15.5], [1.731754815E12, 17.0], [1.731754901E12, 17.0], [1.731754811E12, 16.0], [1.731754897E12, 17.0], [1.73175477E12, 21.0], [1.731754856E12, 18.0], [1.731754766E12, 18.0], [1.731754852E12, 17.0], [1.731754807E12, 17.0], [1.731754893E12, 19.0], [1.731754782E12, 18.0], [1.731754868E12, 18.0], [1.731754741E12, 19.0], [1.731754737E12, 21.0], [1.731754823E12, 18.0], [1.731754909E12, 19.0], [1.731754819E12, 16.0], [1.731754905E12, 19.0], [1.731754778E12, 18.5], [1.731754864E12, 19.0], [1.731754774E12, 20.0], [1.73175486E12, 19.0], [1.731754733E12, 23.0], [1.731754835E12, 19.0], [1.731754794E12, 17.0], [1.73175488E12, 16.0], [1.73175479E12, 17.0], [1.731754876E12, 15.0], [1.731754749E12, 19.0], [1.731754745E12, 18.0], [1.731754831E12, 19.0], [1.731754827E12, 18.0], [1.731754786E12, 17.5], [1.731754872E12, 17.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.73175491E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 15.0, "minX": 21.0, "maxY": 24.0, "series": [{"data": [[135.0, 18.0], [132.0, 19.0], [133.0, 18.0], [134.0, 18.0], [137.0, 19.0], [142.0, 18.0], [138.0, 19.0], [143.0, 18.0], [136.0, 18.0], [140.0, 18.0], [141.0, 18.0], [139.0, 18.0], [150.0, 24.0], [146.0, 19.0], [147.0, 19.0], [145.0, 18.0], [144.0, 18.0], [21.0, 15.0], [102.0, 23.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 150.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 15.0, "minX": 21.0, "maxY": 24.0, "series": [{"data": [[135.0, 18.0], [132.0, 19.0], [133.0, 18.0], [134.0, 18.0], [137.0, 19.0], [142.0, 18.0], [138.0, 19.0], [143.0, 18.0], [136.0, 18.0], [140.0, 18.0], [141.0, 18.0], [139.0, 18.0], [150.0, 24.0], [146.0, 19.0], [147.0, 19.0], [145.0, 18.0], [144.0, 18.0], [21.0, 15.0], [102.0, 23.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 150.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 19.0, "minX": 1.73175473E12, "maxY": 150.0, "series": [{"data": [[1.731754804E12, 135.0], [1.73175489E12, 143.0], [1.731754886E12, 147.0], [1.731754759E12, 138.0], [1.731754845E12, 141.0], [1.731754755E12, 135.0], [1.731754841E12, 140.0], [1.7317548E12, 141.0], [1.731754796E12, 142.0], [1.731754882E12, 138.0], [1.731754771E12, 142.0], [1.731754857E12, 146.0], [1.73175473E12, 106.0], [1.731754816E12, 140.0], [1.731754812E12, 140.0], [1.731754898E12, 134.0], [1.731754894E12, 139.0], [1.731754767E12, 145.0], [1.731754853E12, 138.0], [1.731754763E12, 137.0], [1.731754849E12, 134.0], [1.731754808E12, 137.0], [1.73175491E12, 19.0], [1.731754783E12, 138.0], [1.731754869E12, 135.0], [1.731754779E12, 134.0], [1.731754865E12, 142.0], [1.731754738E12, 147.0], [1.731754824E12, 140.0], [1.731754734E12, 139.0], [1.73175482E12, 134.0], [1.731754906E12, 141.0], [1.731754902E12, 138.0], [1.731754775E12, 140.0], [1.731754861E12, 140.0], [1.73175475E12, 136.0], [1.731754836E12, 141.0], [1.731754791E12, 134.0], [1.731754877E12, 136.0], [1.731754787E12, 141.0], [1.731754873E12, 137.0], [1.731754746E12, 139.0], [1.731754832E12, 144.0], [1.731754742E12, 143.0], [1.731754828E12, 140.0], [1.731754846E12, 140.0], [1.731754805E12, 142.0], [1.731754801E12, 138.0], [1.731754887E12, 135.0], [1.73175476E12, 142.0], [1.731754883E12, 141.0], [1.731754756E12, 146.0], [1.731754842E12, 137.0], [1.731754838E12, 133.0], [1.731754797E12, 135.0], [1.731754899E12, 142.0], [1.731754772E12, 137.0], [1.731754858E12, 136.0], [1.731754854E12, 140.0], [1.731754813E12, 135.0], [1.731754809E12, 140.0], [1.731754895E12, 140.0], [1.731754768E12, 134.0], [1.731754891E12, 137.0], [1.731754764E12, 143.0], [1.73175485E12, 146.0], [1.731754739E12, 139.0], [1.731754825E12, 141.0], [1.731754784E12, 134.0], [1.731754907E12, 138.0], [1.73175478E12, 142.0], [1.731754866E12, 137.0], [1.731754862E12, 137.0], [1.731754735E12, 142.0], [1.731754821E12, 146.0], [1.731754731E12, 150.0], [1.731754817E12, 138.0], [1.731754903E12, 132.0], [1.731754776E12, 137.0], [1.731754878E12, 140.0], [1.731754751E12, 139.0], [1.731754837E12, 137.0], [1.731754747E12, 139.0], [1.731754833E12, 135.0], [1.731754792E12, 144.0], [1.731754788E12, 139.0], [1.731754874E12, 134.0], [1.73175487E12, 139.0], [1.731754743E12, 134.0], [1.731754829E12, 140.0], [1.731754761E12, 138.0], [1.731754847E12, 139.0], [1.731754843E12, 140.0], [1.731754802E12, 135.0], [1.731754888E12, 139.0], [1.731754798E12, 141.0], [1.731754884E12, 138.0], [1.731754757E12, 138.0], [1.731754753E12, 142.0], [1.731754839E12, 147.0], [1.731754814E12, 146.0], [1.7317549E12, 136.0], [1.731754773E12, 133.0], [1.731754769E12, 140.0], [1.731754855E12, 137.0], [1.731754851E12, 136.0], [1.73175481E12, 140.0], [1.731754896E12, 137.0], [1.731754806E12, 138.0], [1.731754892E12, 135.0], [1.731754765E12, 139.0], [1.731754867E12, 135.0], [1.73175474E12, 139.0], [1.731754826E12, 135.0], [1.731754822E12, 135.0], [1.731754908E12, 140.0], [1.731754781E12, 138.0], [1.731754777E12, 138.0], [1.731754863E12, 141.0], [1.731754736E12, 137.0], [1.731754859E12, 139.0], [1.731754732E12, 136.0], [1.731754818E12, 142.0], [1.731754904E12, 146.0], [1.731754793E12, 139.0], [1.731754879E12, 141.0], [1.731754752E12, 137.0], [1.731754875E12, 145.0], [1.731754748E12, 132.0], [1.731754834E12, 139.0], [1.73175483E12, 136.0], [1.731754789E12, 142.0], [1.731754785E12, 146.0], [1.731754871E12, 138.0], [1.731754744E12, 142.0], [1.731754803E12, 143.0], [1.731754889E12, 138.0], [1.731754762E12, 140.0], [1.731754848E12, 139.0], [1.731754758E12, 137.0], [1.731754844E12, 136.0], [1.731754799E12, 138.0], [1.731754885E12, 132.0], [1.731754795E12, 139.0], [1.731754881E12, 139.0], [1.731754754E12, 136.0], [1.73175484E12, 137.0], [1.731754815E12, 134.0], [1.731754901E12, 141.0], [1.731754811E12, 138.0], [1.731754897E12, 144.0], [1.73175477E12, 140.0], [1.731754856E12, 135.0], [1.731754766E12, 132.0], [1.731754852E12, 139.0], [1.731754807E12, 139.0], [1.731754893E12, 142.0], [1.731754782E12, 141.0], [1.731754868E12, 146.0], [1.731754741E12, 140.0], [1.731754737E12, 133.0], [1.731754823E12, 137.0], [1.731754909E12, 134.0], [1.731754819E12, 137.0], [1.731754905E12, 135.0], [1.731754778E12, 143.0], [1.731754864E12, 138.0], [1.731754774E12, 145.0], [1.73175486E12, 139.0], [1.731754733E12, 142.0], [1.731754835E12, 141.0], [1.731754794E12, 139.0], [1.73175488E12, 138.0], [1.73175479E12, 137.0], [1.731754876E12, 140.0], [1.731754749E12, 147.0], [1.731754745E12, 139.0], [1.731754831E12, 136.0], [1.731754827E12, 141.0], [1.731754786E12, 133.0], [1.731754872E12, 141.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.73175491E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 21.0, "minX": 1.73175473E12, "maxY": 150.0, "series": [{"data": [[1.731754804E12, 136.0], [1.73175489E12, 144.0], [1.731754886E12, 147.0], [1.731754759E12, 138.0], [1.731754845E12, 141.0], [1.731754755E12, 135.0], [1.731754841E12, 139.0], [1.7317548E12, 142.0], [1.731754796E12, 142.0], [1.731754882E12, 137.0], [1.731754771E12, 143.0], [1.731754857E12, 146.0], [1.73175473E12, 102.0], [1.731754816E12, 141.0], [1.731754812E12, 139.0], [1.731754898E12, 133.0], [1.731754894E12, 140.0], [1.731754767E12, 145.0], [1.731754853E12, 138.0], [1.731754763E12, 137.0], [1.731754849E12, 134.0], [1.731754808E12, 136.0], [1.73175491E12, 21.0], [1.731754783E12, 137.0], [1.731754869E12, 135.0], [1.731754779E12, 134.0], [1.731754865E12, 143.0], [1.731754738E12, 146.0], [1.731754824E12, 140.0], [1.731754734E12, 138.0], [1.73175482E12, 134.0], [1.731754906E12, 141.0], [1.731754902E12, 137.0], [1.731754775E12, 141.0], [1.731754861E12, 141.0], [1.73175475E12, 137.0], [1.731754836E12, 142.0], [1.731754791E12, 134.0], [1.731754877E12, 136.0], [1.731754787E12, 140.0], [1.731754873E12, 136.0], [1.731754746E12, 140.0], [1.731754832E12, 143.0], [1.731754742E12, 142.0], [1.731754828E12, 139.0], [1.731754846E12, 140.0], [1.731754805E12, 141.0], [1.731754801E12, 137.0], [1.731754887E12, 134.0], [1.73175476E12, 142.0], [1.731754883E12, 142.0], [1.731754756E12, 146.0], [1.731754842E12, 138.0], [1.731754838E12, 133.0], [1.731754797E12, 134.0], [1.731754899E12, 142.0], [1.731754772E12, 137.0], [1.731754858E12, 137.0], [1.731754854E12, 141.0], [1.731754813E12, 135.0], [1.731754809E12, 140.0], [1.731754895E12, 139.0], [1.731754768E12, 135.0], [1.731754891E12, 136.0], [1.731754764E12, 143.0], [1.73175485E12, 146.0], [1.731754739E12, 140.0], [1.731754825E12, 142.0], [1.731754784E12, 134.0], [1.731754907E12, 138.0], [1.73175478E12, 142.0], [1.731754866E12, 136.0], [1.731754862E12, 136.0], [1.731754735E12, 143.0], [1.731754821E12, 146.0], [1.731754731E12, 150.0], [1.731754817E12, 137.0], [1.731754903E12, 132.0], [1.731754776E12, 136.0], [1.731754878E12, 139.0], [1.731754751E12, 138.0], [1.731754837E12, 136.0], [1.731754747E12, 138.0], [1.731754833E12, 135.0], [1.731754792E12, 144.0], [1.731754788E12, 139.0], [1.731754874E12, 134.0], [1.73175487E12, 139.0], [1.731754743E12, 135.0], [1.731754829E12, 141.0], [1.731754761E12, 138.0], [1.731754847E12, 140.0], [1.731754843E12, 139.0], [1.731754802E12, 135.0], [1.731754888E12, 139.0], [1.731754798E12, 141.0], [1.731754884E12, 137.0], [1.731754757E12, 139.0], [1.731754753E12, 142.0], [1.731754839E12, 147.0], [1.731754814E12, 146.0], [1.7317549E12, 136.0], [1.731754773E12, 133.0], [1.731754769E12, 139.0], [1.731754855E12, 136.0], [1.731754851E12, 136.0], [1.73175481E12, 140.0], [1.731754896E12, 137.0], [1.731754806E12, 138.0], [1.731754892E12, 136.0], [1.731754765E12, 139.0], [1.731754867E12, 136.0], [1.73175474E12, 138.0], [1.731754826E12, 134.0], [1.731754822E12, 136.0], [1.731754908E12, 140.0], [1.731754781E12, 138.0], [1.731754777E12, 139.0], [1.731754863E12, 142.0], [1.731754736E12, 136.0], [1.731754859E12, 138.0], [1.731754732E12, 137.0], [1.731754818E12, 143.0], [1.731754904E12, 146.0], [1.731754793E12, 140.0], [1.731754879E12, 142.0], [1.731754752E12, 137.0], [1.731754875E12, 145.0], [1.731754748E12, 132.0], [1.731754834E12, 139.0], [1.73175483E12, 135.0], [1.731754789E12, 142.0], [1.731754785E12, 146.0], [1.731754871E12, 138.0], [1.731754744E12, 141.0], [1.731754803E12, 143.0], [1.731754889E12, 138.0], [1.731754762E12, 140.0], [1.731754848E12, 138.0], [1.731754758E12, 136.0], [1.731754844E12, 136.0], [1.731754799E12, 138.0], [1.731754885E12, 133.0], [1.731754795E12, 140.0], [1.731754881E12, 140.0], [1.731754754E12, 136.0], [1.73175484E12, 138.0], [1.731754815E12, 134.0], [1.731754901E12, 142.0], [1.731754811E12, 139.0], [1.731754897E12, 145.0], [1.73175477E12, 139.0], [1.731754856E12, 135.0], [1.731754766E12, 132.0], [1.731754852E12, 139.0], [1.731754807E12, 140.0], [1.731754893E12, 141.0], [1.731754782E12, 142.0], [1.731754868E12, 145.0], [1.731754741E12, 141.0], [1.731754737E12, 135.0], [1.731754823E12, 136.0], [1.731754909E12, 135.0], [1.731754819E12, 136.0], [1.731754905E12, 135.0], [1.731754778E12, 142.0], [1.731754864E12, 137.0], [1.731754774E12, 145.0], [1.73175486E12, 139.0], [1.731754733E12, 142.0], [1.731754835E12, 141.0], [1.731754794E12, 138.0], [1.73175488E12, 137.0], [1.73175479E12, 137.0], [1.731754876E12, 141.0], [1.731754749E12, 147.0], [1.731754745E12, 139.0], [1.731754831E12, 137.0], [1.731754827E12, 142.0], [1.731754786E12, 134.0], [1.731754872E12, 142.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.73175491E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 21.0, "minX": 1.73175473E12, "maxY": 150.0, "series": [{"data": [[1.731754804E12, 136.0], [1.73175489E12, 144.0], [1.731754886E12, 147.0], [1.731754759E12, 138.0], [1.731754845E12, 141.0], [1.731754755E12, 135.0], [1.731754841E12, 139.0], [1.7317548E12, 142.0], [1.731754796E12, 142.0], [1.731754882E12, 137.0], [1.731754771E12, 143.0], [1.731754857E12, 146.0], [1.73175473E12, 102.0], [1.731754816E12, 141.0], [1.731754812E12, 139.0], [1.731754898E12, 133.0], [1.731754894E12, 140.0], [1.731754767E12, 145.0], [1.731754853E12, 138.0], [1.731754763E12, 137.0], [1.731754849E12, 134.0], [1.731754808E12, 136.0], [1.73175491E12, 21.0], [1.731754783E12, 137.0], [1.731754869E12, 135.0], [1.731754779E12, 134.0], [1.731754865E12, 143.0], [1.731754738E12, 146.0], [1.731754824E12, 140.0], [1.731754734E12, 138.0], [1.73175482E12, 134.0], [1.731754906E12, 141.0], [1.731754902E12, 137.0], [1.731754775E12, 141.0], [1.731754861E12, 141.0], [1.73175475E12, 137.0], [1.731754836E12, 142.0], [1.731754791E12, 134.0], [1.731754877E12, 136.0], [1.731754787E12, 140.0], [1.731754873E12, 136.0], [1.731754746E12, 140.0], [1.731754832E12, 143.0], [1.731754742E12, 142.0], [1.731754828E12, 139.0], [1.731754846E12, 140.0], [1.731754805E12, 141.0], [1.731754801E12, 137.0], [1.731754887E12, 134.0], [1.73175476E12, 142.0], [1.731754883E12, 142.0], [1.731754756E12, 146.0], [1.731754842E12, 138.0], [1.731754838E12, 133.0], [1.731754797E12, 134.0], [1.731754899E12, 142.0], [1.731754772E12, 137.0], [1.731754858E12, 137.0], [1.731754854E12, 141.0], [1.731754813E12, 135.0], [1.731754809E12, 140.0], [1.731754895E12, 139.0], [1.731754768E12, 135.0], [1.731754891E12, 136.0], [1.731754764E12, 143.0], [1.73175485E12, 146.0], [1.731754739E12, 140.0], [1.731754825E12, 142.0], [1.731754784E12, 134.0], [1.731754907E12, 138.0], [1.73175478E12, 142.0], [1.731754866E12, 136.0], [1.731754862E12, 136.0], [1.731754735E12, 143.0], [1.731754821E12, 146.0], [1.731754731E12, 150.0], [1.731754817E12, 137.0], [1.731754903E12, 132.0], [1.731754776E12, 136.0], [1.731754878E12, 139.0], [1.731754751E12, 138.0], [1.731754837E12, 136.0], [1.731754747E12, 138.0], [1.731754833E12, 135.0], [1.731754792E12, 144.0], [1.731754788E12, 139.0], [1.731754874E12, 134.0], [1.73175487E12, 139.0], [1.731754743E12, 135.0], [1.731754829E12, 141.0], [1.731754761E12, 138.0], [1.731754847E12, 140.0], [1.731754843E12, 139.0], [1.731754802E12, 135.0], [1.731754888E12, 139.0], [1.731754798E12, 141.0], [1.731754884E12, 137.0], [1.731754757E12, 139.0], [1.731754753E12, 142.0], [1.731754839E12, 147.0], [1.731754814E12, 146.0], [1.7317549E12, 136.0], [1.731754773E12, 133.0], [1.731754769E12, 139.0], [1.731754855E12, 136.0], [1.731754851E12, 136.0], [1.73175481E12, 140.0], [1.731754896E12, 137.0], [1.731754806E12, 138.0], [1.731754892E12, 136.0], [1.731754765E12, 139.0], [1.731754867E12, 136.0], [1.73175474E12, 138.0], [1.731754826E12, 134.0], [1.731754822E12, 136.0], [1.731754908E12, 140.0], [1.731754781E12, 138.0], [1.731754777E12, 139.0], [1.731754863E12, 142.0], [1.731754736E12, 136.0], [1.731754859E12, 138.0], [1.731754732E12, 137.0], [1.731754818E12, 143.0], [1.731754904E12, 146.0], [1.731754793E12, 140.0], [1.731754879E12, 142.0], [1.731754752E12, 137.0], [1.731754875E12, 145.0], [1.731754748E12, 132.0], [1.731754834E12, 139.0], [1.73175483E12, 135.0], [1.731754789E12, 142.0], [1.731754785E12, 146.0], [1.731754871E12, 138.0], [1.731754744E12, 141.0], [1.731754803E12, 143.0], [1.731754889E12, 138.0], [1.731754762E12, 140.0], [1.731754848E12, 138.0], [1.731754758E12, 136.0], [1.731754844E12, 136.0], [1.731754799E12, 138.0], [1.731754885E12, 133.0], [1.731754795E12, 140.0], [1.731754881E12, 140.0], [1.731754754E12, 136.0], [1.73175484E12, 138.0], [1.731754815E12, 134.0], [1.731754901E12, 142.0], [1.731754811E12, 139.0], [1.731754897E12, 145.0], [1.73175477E12, 139.0], [1.731754856E12, 135.0], [1.731754766E12, 132.0], [1.731754852E12, 139.0], [1.731754807E12, 140.0], [1.731754893E12, 141.0], [1.731754782E12, 142.0], [1.731754868E12, 145.0], [1.731754741E12, 141.0], [1.731754737E12, 135.0], [1.731754823E12, 136.0], [1.731754909E12, 135.0], [1.731754819E12, 136.0], [1.731754905E12, 135.0], [1.731754778E12, 142.0], [1.731754864E12, 137.0], [1.731754774E12, 145.0], [1.73175486E12, 139.0], [1.731754733E12, 142.0], [1.731754835E12, 141.0], [1.731754794E12, 138.0], [1.73175488E12, 137.0], [1.73175479E12, 137.0], [1.731754876E12, 141.0], [1.731754749E12, 147.0], [1.731754745E12, 139.0], [1.731754831E12, 137.0], [1.731754827E12, 142.0], [1.731754786E12, 134.0], [1.731754872E12, 142.0]], "isOverall": false, "label": "Products-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.73175491E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 21.0, "minX": 1.73175473E12, "maxY": 150.0, "series": [{"data": [[1.731754804E12, 136.0], [1.73175489E12, 144.0], [1.731754886E12, 147.0], [1.731754759E12, 138.0], [1.731754845E12, 141.0], [1.731754755E12, 135.0], [1.731754841E12, 139.0], [1.7317548E12, 142.0], [1.731754796E12, 142.0], [1.731754882E12, 137.0], [1.731754771E12, 143.0], [1.731754857E12, 146.0], [1.73175473E12, 102.0], [1.731754816E12, 141.0], [1.731754812E12, 139.0], [1.731754898E12, 133.0], [1.731754894E12, 140.0], [1.731754767E12, 145.0], [1.731754853E12, 138.0], [1.731754763E12, 137.0], [1.731754849E12, 134.0], [1.731754808E12, 136.0], [1.73175491E12, 21.0], [1.731754783E12, 137.0], [1.731754869E12, 135.0], [1.731754779E12, 134.0], [1.731754865E12, 143.0], [1.731754738E12, 146.0], [1.731754824E12, 140.0], [1.731754734E12, 138.0], [1.73175482E12, 134.0], [1.731754906E12, 141.0], [1.731754902E12, 137.0], [1.731754775E12, 141.0], [1.731754861E12, 141.0], [1.73175475E12, 137.0], [1.731754836E12, 142.0], [1.731754791E12, 134.0], [1.731754877E12, 136.0], [1.731754787E12, 140.0], [1.731754873E12, 136.0], [1.731754746E12, 140.0], [1.731754832E12, 143.0], [1.731754742E12, 142.0], [1.731754828E12, 139.0], [1.731754846E12, 140.0], [1.731754805E12, 141.0], [1.731754801E12, 137.0], [1.731754887E12, 134.0], [1.73175476E12, 142.0], [1.731754883E12, 142.0], [1.731754756E12, 146.0], [1.731754842E12, 138.0], [1.731754838E12, 133.0], [1.731754797E12, 134.0], [1.731754899E12, 142.0], [1.731754772E12, 137.0], [1.731754858E12, 137.0], [1.731754854E12, 141.0], [1.731754813E12, 135.0], [1.731754809E12, 140.0], [1.731754895E12, 139.0], [1.731754768E12, 135.0], [1.731754891E12, 136.0], [1.731754764E12, 143.0], [1.73175485E12, 146.0], [1.731754739E12, 140.0], [1.731754825E12, 142.0], [1.731754784E12, 134.0], [1.731754907E12, 138.0], [1.73175478E12, 142.0], [1.731754866E12, 136.0], [1.731754862E12, 136.0], [1.731754735E12, 143.0], [1.731754821E12, 146.0], [1.731754731E12, 150.0], [1.731754817E12, 137.0], [1.731754903E12, 132.0], [1.731754776E12, 136.0], [1.731754878E12, 139.0], [1.731754751E12, 138.0], [1.731754837E12, 136.0], [1.731754747E12, 138.0], [1.731754833E12, 135.0], [1.731754792E12, 144.0], [1.731754788E12, 139.0], [1.731754874E12, 134.0], [1.73175487E12, 139.0], [1.731754743E12, 135.0], [1.731754829E12, 141.0], [1.731754761E12, 138.0], [1.731754847E12, 140.0], [1.731754843E12, 139.0], [1.731754802E12, 135.0], [1.731754888E12, 139.0], [1.731754798E12, 141.0], [1.731754884E12, 137.0], [1.731754757E12, 139.0], [1.731754753E12, 142.0], [1.731754839E12, 147.0], [1.731754814E12, 146.0], [1.7317549E12, 136.0], [1.731754773E12, 133.0], [1.731754769E12, 139.0], [1.731754855E12, 136.0], [1.731754851E12, 136.0], [1.73175481E12, 140.0], [1.731754896E12, 137.0], [1.731754806E12, 138.0], [1.731754892E12, 136.0], [1.731754765E12, 139.0], [1.731754867E12, 136.0], [1.73175474E12, 138.0], [1.731754826E12, 134.0], [1.731754822E12, 136.0], [1.731754908E12, 140.0], [1.731754781E12, 138.0], [1.731754777E12, 139.0], [1.731754863E12, 142.0], [1.731754736E12, 136.0], [1.731754859E12, 138.0], [1.731754732E12, 137.0], [1.731754818E12, 143.0], [1.731754904E12, 146.0], [1.731754793E12, 140.0], [1.731754879E12, 142.0], [1.731754752E12, 137.0], [1.731754875E12, 145.0], [1.731754748E12, 132.0], [1.731754834E12, 139.0], [1.73175483E12, 135.0], [1.731754789E12, 142.0], [1.731754785E12, 146.0], [1.731754871E12, 138.0], [1.731754744E12, 141.0], [1.731754803E12, 143.0], [1.731754889E12, 138.0], [1.731754762E12, 140.0], [1.731754848E12, 138.0], [1.731754758E12, 136.0], [1.731754844E12, 136.0], [1.731754799E12, 138.0], [1.731754885E12, 133.0], [1.731754795E12, 140.0], [1.731754881E12, 140.0], [1.731754754E12, 136.0], [1.73175484E12, 138.0], [1.731754815E12, 134.0], [1.731754901E12, 142.0], [1.731754811E12, 139.0], [1.731754897E12, 145.0], [1.73175477E12, 139.0], [1.731754856E12, 135.0], [1.731754766E12, 132.0], [1.731754852E12, 139.0], [1.731754807E12, 140.0], [1.731754893E12, 141.0], [1.731754782E12, 142.0], [1.731754868E12, 145.0], [1.731754741E12, 141.0], [1.731754737E12, 135.0], [1.731754823E12, 136.0], [1.731754909E12, 135.0], [1.731754819E12, 136.0], [1.731754905E12, 135.0], [1.731754778E12, 142.0], [1.731754864E12, 137.0], [1.731754774E12, 145.0], [1.73175486E12, 139.0], [1.731754733E12, 142.0], [1.731754835E12, 141.0], [1.731754794E12, 138.0], [1.73175488E12, 137.0], [1.73175479E12, 137.0], [1.731754876E12, 141.0], [1.731754749E12, 147.0], [1.731754745E12, 139.0], [1.731754831E12, 137.0], [1.731754827E12, 142.0], [1.731754786E12, 134.0], [1.731754872E12, 142.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.73175491E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

