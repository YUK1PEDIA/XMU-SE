/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 47.0, "series": [{"data": [[0.0, 5.0], [0.1, 5.0], [0.2, 6.0], [0.3, 6.0], [0.4, 6.0], [0.5, 6.0], [0.6, 6.0], [0.7, 6.0], [0.8, 6.0], [0.9, 6.0], [1.0, 6.0], [1.1, 6.0], [1.2, 6.0], [1.3, 6.0], [1.4, 6.0], [1.5, 6.0], [1.6, 6.0], [1.7, 6.0], [1.8, 6.0], [1.9, 6.0], [2.0, 6.0], [2.1, 6.0], [2.2, 6.0], [2.3, 6.0], [2.4, 6.0], [2.5, 6.0], [2.6, 6.0], [2.7, 6.0], [2.8, 6.0], [2.9, 6.0], [3.0, 6.0], [3.1, 6.0], [3.2, 6.0], [3.3, 6.0], [3.4, 6.0], [3.5, 6.0], [3.6, 6.0], [3.7, 6.0], [3.8, 6.0], [3.9, 6.0], [4.0, 6.0], [4.1, 6.0], [4.2, 6.0], [4.3, 6.0], [4.4, 6.0], [4.5, 7.0], [4.6, 7.0], [4.7, 7.0], [4.8, 7.0], [4.9, 7.0], [5.0, 7.0], [5.1, 7.0], [5.2, 7.0], [5.3, 7.0], [5.4, 7.0], [5.5, 7.0], [5.6, 7.0], [5.7, 7.0], [5.8, 7.0], [5.9, 7.0], [6.0, 7.0], [6.1, 7.0], [6.2, 7.0], [6.3, 7.0], [6.4, 7.0], [6.5, 7.0], [6.6, 7.0], [6.7, 7.0], [6.8, 7.0], [6.9, 7.0], [7.0, 7.0], [7.1, 7.0], [7.2, 7.0], [7.3, 7.0], [7.4, 7.0], [7.5, 7.0], [7.6, 7.0], [7.7, 7.0], [7.8, 7.0], [7.9, 7.0], [8.0, 7.0], [8.1, 7.0], [8.2, 7.0], [8.3, 7.0], [8.4, 7.0], [8.5, 7.0], [8.6, 7.0], [8.7, 7.0], [8.8, 7.0], [8.9, 7.0], [9.0, 7.0], [9.1, 7.0], [9.2, 7.0], [9.3, 7.0], [9.4, 7.0], [9.5, 7.0], [9.6, 7.0], [9.7, 7.0], [9.8, 8.0], [9.9, 8.0], [10.0, 8.0], [10.1, 8.0], [10.2, 8.0], [10.3, 8.0], [10.4, 8.0], [10.5, 8.0], [10.6, 8.0], [10.7, 9.0], [10.8, 9.0], [10.9, 9.0], [11.0, 12.0], [11.1, 12.0], [11.2, 12.0], [11.3, 12.0], [11.4, 12.0], [11.5, 12.0], [11.6, 12.0], [11.7, 12.0], [11.8, 12.0], [11.9, 12.0], [12.0, 12.0], [12.1, 12.0], [12.2, 12.0], [12.3, 12.0], [12.4, 12.0], [12.5, 12.0], [12.6, 12.0], [12.7, 12.0], [12.8, 12.0], [12.9, 12.0], [13.0, 12.0], [13.1, 12.0], [13.2, 12.0], [13.3, 12.0], [13.4, 12.0], [13.5, 12.0], [13.6, 12.0], [13.7, 12.0], [13.8, 12.0], [13.9, 12.0], [14.0, 12.0], [14.1, 12.0], [14.2, 12.0], [14.3, 12.0], [14.4, 12.0], [14.5, 12.0], [14.6, 12.0], [14.7, 12.0], [14.8, 12.0], [14.9, 12.0], [15.0, 12.0], [15.1, 12.0], [15.2, 12.0], [15.3, 12.0], [15.4, 12.0], [15.5, 12.0], [15.6, 12.0], [15.7, 12.0], [15.8, 12.0], [15.9, 12.0], [16.0, 12.0], [16.1, 12.0], [16.2, 12.0], [16.3, 12.0], [16.4, 12.0], [16.5, 12.0], [16.6, 12.0], [16.7, 12.0], [16.8, 12.0], [16.9, 12.0], [17.0, 12.0], [17.1, 12.0], [17.2, 12.0], [17.3, 12.0], [17.4, 12.0], [17.5, 12.0], [17.6, 12.0], [17.7, 12.0], [17.8, 12.0], [17.9, 12.0], [18.0, 12.0], [18.1, 12.0], [18.2, 12.0], [18.3, 12.0], [18.4, 12.0], [18.5, 12.0], [18.6, 12.0], [18.7, 12.0], [18.8, 12.0], [18.9, 12.0], [19.0, 12.0], [19.1, 12.0], [19.2, 12.0], [19.3, 12.0], [19.4, 12.0], [19.5, 12.0], [19.6, 12.0], [19.7, 12.0], [19.8, 12.0], [19.9, 12.0], [20.0, 12.0], [20.1, 12.0], [20.2, 12.0], [20.3, 12.0], [20.4, 12.0], [20.5, 12.0], [20.6, 12.0], [20.7, 12.0], [20.8, 12.0], [20.9, 12.0], [21.0, 12.0], [21.1, 12.0], [21.2, 12.0], [21.3, 12.0], [21.4, 12.0], [21.5, 12.0], [21.6, 12.0], [21.7, 12.0], [21.8, 12.0], [21.9, 12.0], [22.0, 12.0], [22.1, 12.0], [22.2, 12.0], [22.3, 12.0], [22.4, 12.0], [22.5, 12.0], [22.6, 12.0], [22.7, 12.0], [22.8, 12.0], [22.9, 12.0], [23.0, 12.0], [23.1, 12.0], [23.2, 12.0], [23.3, 12.0], [23.4, 12.0], [23.5, 12.0], [23.6, 12.0], [23.7, 12.0], [23.8, 12.0], [23.9, 12.0], [24.0, 12.0], [24.1, 12.0], [24.2, 12.0], [24.3, 12.0], [24.4, 12.0], [24.5, 12.0], [24.6, 12.0], [24.7, 12.0], [24.8, 12.0], [24.9, 12.0], [25.0, 12.0], [25.1, 12.0], [25.2, 12.0], [25.3, 12.0], [25.4, 12.0], [25.5, 12.0], [25.6, 12.0], [25.7, 12.0], [25.8, 12.0], [25.9, 12.0], [26.0, 12.0], [26.1, 12.0], [26.2, 12.0], [26.3, 12.0], [26.4, 12.0], [26.5, 12.0], [26.6, 12.0], [26.7, 12.0], [26.8, 12.0], [26.9, 12.0], [27.0, 12.0], [27.1, 12.0], [27.2, 12.0], [27.3, 12.0], [27.4, 12.0], [27.5, 12.0], [27.6, 12.0], [27.7, 12.0], [27.8, 12.0], [27.9, 12.0], [28.0, 12.0], [28.1, 12.0], [28.2, 12.0], [28.3, 12.0], [28.4, 12.0], [28.5, 12.0], [28.6, 12.0], [28.7, 12.0], [28.8, 12.0], [28.9, 12.0], [29.0, 12.0], [29.1, 12.0], [29.2, 12.0], [29.3, 12.0], [29.4, 12.0], [29.5, 12.0], [29.6, 12.0], [29.7, 12.0], [29.8, 12.0], [29.9, 12.0], [30.0, 12.0], [30.1, 12.0], [30.2, 12.0], [30.3, 12.0], [30.4, 12.0], [30.5, 12.0], [30.6, 12.0], [30.7, 12.0], [30.8, 12.0], [30.9, 12.0], [31.0, 12.0], [31.1, 12.0], [31.2, 12.0], [31.3, 12.0], [31.4, 12.0], [31.5, 12.0], [31.6, 12.0], [31.7, 12.0], [31.8, 12.0], [31.9, 12.0], [32.0, 12.0], [32.1, 12.0], [32.2, 12.0], [32.3, 12.0], [32.4, 12.0], [32.5, 12.0], [32.6, 12.0], [32.7, 12.0], [32.8, 12.0], [32.9, 12.0], [33.0, 12.0], [33.1, 12.0], [33.2, 12.0], [33.3, 12.0], [33.4, 12.0], [33.5, 12.0], [33.6, 12.0], [33.7, 12.0], [33.8, 12.0], [33.9, 12.0], [34.0, 12.0], [34.1, 12.0], [34.2, 12.0], [34.3, 12.0], [34.4, 12.0], [34.5, 12.0], [34.6, 12.0], [34.7, 12.0], [34.8, 12.0], [34.9, 12.0], [35.0, 12.0], [35.1, 12.0], [35.2, 12.0], [35.3, 12.0], [35.4, 12.0], [35.5, 12.0], [35.6, 12.0], [35.7, 12.0], [35.8, 12.0], [35.9, 12.0], [36.0, 12.0], [36.1, 12.0], [36.2, 12.0], [36.3, 12.0], [36.4, 12.0], [36.5, 12.0], [36.6, 12.0], [36.7, 12.0], [36.8, 12.0], [36.9, 12.0], [37.0, 12.0], [37.1, 12.0], [37.2, 13.0], [37.3, 13.0], [37.4, 13.0], [37.5, 13.0], [37.6, 13.0], [37.7, 13.0], [37.8, 13.0], [37.9, 13.0], [38.0, 13.0], [38.1, 13.0], [38.2, 13.0], [38.3, 13.0], [38.4, 13.0], [38.5, 13.0], [38.6, 13.0], [38.7, 13.0], [38.8, 13.0], [38.9, 13.0], [39.0, 13.0], [39.1, 13.0], [39.2, 13.0], [39.3, 13.0], [39.4, 13.0], [39.5, 13.0], [39.6, 13.0], [39.7, 13.0], [39.8, 13.0], [39.9, 13.0], [40.0, 13.0], [40.1, 13.0], [40.2, 13.0], [40.3, 13.0], [40.4, 13.0], [40.5, 13.0], [40.6, 13.0], [40.7, 13.0], [40.8, 13.0], [40.9, 13.0], [41.0, 13.0], [41.1, 13.0], [41.2, 13.0], [41.3, 13.0], [41.4, 13.0], [41.5, 13.0], [41.6, 13.0], [41.7, 13.0], [41.8, 13.0], [41.9, 13.0], [42.0, 13.0], [42.1, 13.0], [42.2, 13.0], [42.3, 13.0], [42.4, 13.0], [42.5, 13.0], [42.6, 13.0], [42.7, 13.0], [42.8, 13.0], [42.9, 13.0], [43.0, 13.0], [43.1, 13.0], [43.2, 13.0], [43.3, 13.0], [43.4, 13.0], [43.5, 13.0], [43.6, 13.0], [43.7, 13.0], [43.8, 13.0], [43.9, 13.0], [44.0, 13.0], [44.1, 13.0], [44.2, 13.0], [44.3, 13.0], [44.4, 13.0], [44.5, 13.0], [44.6, 13.0], [44.7, 13.0], [44.8, 13.0], [44.9, 13.0], [45.0, 13.0], [45.1, 13.0], [45.2, 13.0], [45.3, 13.0], [45.4, 13.0], [45.5, 13.0], [45.6, 13.0], [45.7, 13.0], [45.8, 13.0], [45.9, 13.0], [46.0, 13.0], [46.1, 13.0], [46.2, 13.0], [46.3, 13.0], [46.4, 13.0], [46.5, 13.0], [46.6, 13.0], [46.7, 13.0], [46.8, 13.0], [46.9, 13.0], [47.0, 13.0], [47.1, 13.0], [47.2, 13.0], [47.3, 13.0], [47.4, 13.0], [47.5, 13.0], [47.6, 13.0], [47.7, 13.0], [47.8, 13.0], [47.9, 13.0], [48.0, 13.0], [48.1, 13.0], [48.2, 13.0], [48.3, 13.0], [48.4, 13.0], [48.5, 13.0], [48.6, 13.0], [48.7, 13.0], [48.8, 13.0], [48.9, 13.0], [49.0, 13.0], [49.1, 13.0], [49.2, 13.0], [49.3, 13.0], [49.4, 13.0], [49.5, 13.0], [49.6, 13.0], [49.7, 13.0], [49.8, 13.0], [49.9, 13.0], [50.0, 13.0], [50.1, 13.0], [50.2, 13.0], [50.3, 13.0], [50.4, 13.0], [50.5, 13.0], [50.6, 13.0], [50.7, 13.0], [50.8, 13.0], [50.9, 13.0], [51.0, 13.0], [51.1, 13.0], [51.2, 13.0], [51.3, 13.0], [51.4, 13.0], [51.5, 13.0], [51.6, 13.0], [51.7, 13.0], [51.8, 13.0], [51.9, 13.0], [52.0, 13.0], [52.1, 13.0], [52.2, 13.0], [52.3, 13.0], [52.4, 13.0], [52.5, 13.0], [52.6, 13.0], [52.7, 13.0], [52.8, 13.0], [52.9, 13.0], [53.0, 13.0], [53.1, 13.0], [53.2, 13.0], [53.3, 13.0], [53.4, 13.0], [53.5, 13.0], [53.6, 13.0], [53.7, 13.0], [53.8, 13.0], [53.9, 13.0], [54.0, 13.0], [54.1, 13.0], [54.2, 13.0], [54.3, 13.0], [54.4, 13.0], [54.5, 13.0], [54.6, 13.0], [54.7, 13.0], [54.8, 13.0], [54.9, 13.0], [55.0, 13.0], [55.1, 13.0], [55.2, 13.0], [55.3, 13.0], [55.4, 13.0], [55.5, 13.0], [55.6, 13.0], [55.7, 13.0], [55.8, 13.0], [55.9, 13.0], [56.0, 13.0], [56.1, 13.0], [56.2, 13.0], [56.3, 13.0], [56.4, 13.0], [56.5, 13.0], [56.6, 13.0], [56.7, 13.0], [56.8, 13.0], [56.9, 13.0], [57.0, 13.0], [57.1, 13.0], [57.2, 13.0], [57.3, 13.0], [57.4, 13.0], [57.5, 13.0], [57.6, 13.0], [57.7, 13.0], [57.8, 13.0], [57.9, 13.0], [58.0, 13.0], [58.1, 13.0], [58.2, 13.0], [58.3, 13.0], [58.4, 13.0], [58.5, 13.0], [58.6, 13.0], [58.7, 13.0], [58.8, 13.0], [58.9, 13.0], [59.0, 13.0], [59.1, 13.0], [59.2, 13.0], [59.3, 13.0], [59.4, 13.0], [59.5, 13.0], [59.6, 13.0], [59.7, 13.0], [59.8, 13.0], [59.9, 13.0], [60.0, 13.0], [60.1, 13.0], [60.2, 13.0], [60.3, 13.0], [60.4, 13.0], [60.5, 13.0], [60.6, 13.0], [60.7, 13.0], [60.8, 13.0], [60.9, 13.0], [61.0, 13.0], [61.1, 13.0], [61.2, 13.0], [61.3, 13.0], [61.4, 13.0], [61.5, 13.0], [61.6, 13.0], [61.7, 13.0], [61.8, 13.0], [61.9, 13.0], [62.0, 13.0], [62.1, 13.0], [62.2, 13.0], [62.3, 13.0], [62.4, 13.0], [62.5, 13.0], [62.6, 13.0], [62.7, 13.0], [62.8, 13.0], [62.9, 13.0], [63.0, 13.0], [63.1, 13.0], [63.2, 13.0], [63.3, 13.0], [63.4, 13.0], [63.5, 13.0], [63.6, 13.0], [63.7, 13.0], [63.8, 13.0], [63.9, 13.0], [64.0, 13.0], [64.1, 13.0], [64.2, 13.0], [64.3, 13.0], [64.4, 13.0], [64.5, 13.0], [64.6, 13.0], [64.7, 13.0], [64.8, 13.0], [64.9, 13.0], [65.0, 13.0], [65.1, 13.0], [65.2, 13.0], [65.3, 13.0], [65.4, 13.0], [65.5, 13.0], [65.6, 13.0], [65.7, 13.0], [65.8, 13.0], [65.9, 13.0], [66.0, 13.0], [66.1, 13.0], [66.2, 13.0], [66.3, 13.0], [66.4, 13.0], [66.5, 13.0], [66.6, 13.0], [66.7, 13.0], [66.8, 13.0], [66.9, 13.0], [67.0, 13.0], [67.1, 13.0], [67.2, 13.0], [67.3, 13.0], [67.4, 13.0], [67.5, 13.0], [67.6, 13.0], [67.7, 13.0], [67.8, 13.0], [67.9, 13.0], [68.0, 13.0], [68.1, 13.0], [68.2, 13.0], [68.3, 13.0], [68.4, 13.0], [68.5, 13.0], [68.6, 13.0], [68.7, 13.0], [68.8, 13.0], [68.9, 13.0], [69.0, 13.0], [69.1, 13.0], [69.2, 13.0], [69.3, 13.0], [69.4, 13.0], [69.5, 13.0], [69.6, 13.0], [69.7, 13.0], [69.8, 13.0], [69.9, 13.0], [70.0, 13.0], [70.1, 13.0], [70.2, 13.0], [70.3, 13.0], [70.4, 13.0], [70.5, 13.0], [70.6, 13.0], [70.7, 13.0], [70.8, 13.0], [70.9, 13.0], [71.0, 13.0], [71.1, 13.0], [71.2, 13.0], [71.3, 13.0], [71.4, 13.0], [71.5, 13.0], [71.6, 13.0], [71.7, 13.0], [71.8, 13.0], [71.9, 13.0], [72.0, 13.0], [72.1, 13.0], [72.2, 13.0], [72.3, 13.0], [72.4, 13.0], [72.5, 13.0], [72.6, 13.0], [72.7, 13.0], [72.8, 13.0], [72.9, 13.0], [73.0, 13.0], [73.1, 13.0], [73.2, 13.0], [73.3, 13.0], [73.4, 13.0], [73.5, 13.0], [73.6, 13.0], [73.7, 13.0], [73.8, 13.0], [73.9, 13.0], [74.0, 13.0], [74.1, 13.0], [74.2, 13.0], [74.3, 13.0], [74.4, 13.0], [74.5, 13.0], [74.6, 13.0], [74.7, 13.0], [74.8, 13.0], [74.9, 13.0], [75.0, 13.0], [75.1, 13.0], [75.2, 13.0], [75.3, 13.0], [75.4, 13.0], [75.5, 13.0], [75.6, 13.0], [75.7, 13.0], [75.8, 13.0], [75.9, 13.0], [76.0, 13.0], [76.1, 13.0], [76.2, 13.0], [76.3, 13.0], [76.4, 13.0], [76.5, 13.0], [76.6, 13.0], [76.7, 13.0], [76.8, 13.0], [76.9, 13.0], [77.0, 13.0], [77.1, 13.0], [77.2, 13.0], [77.3, 13.0], [77.4, 13.0], [77.5, 13.0], [77.6, 13.0], [77.7, 13.0], [77.8, 13.0], [77.9, 13.0], [78.0, 13.0], [78.1, 13.0], [78.2, 13.0], [78.3, 13.0], [78.4, 13.0], [78.5, 13.0], [78.6, 13.0], [78.7, 13.0], [78.8, 13.0], [78.9, 13.0], [79.0, 13.0], [79.1, 13.0], [79.2, 13.0], [79.3, 13.0], [79.4, 13.0], [79.5, 13.0], [79.6, 13.0], [79.7, 13.0], [79.8, 13.0], [79.9, 13.0], [80.0, 13.0], [80.1, 13.0], [80.2, 13.0], [80.3, 13.0], [80.4, 13.0], [80.5, 13.0], [80.6, 13.0], [80.7, 13.0], [80.8, 13.0], [80.9, 13.0], [81.0, 13.0], [81.1, 13.0], [81.2, 13.0], [81.3, 13.0], [81.4, 13.0], [81.5, 13.0], [81.6, 13.0], [81.7, 13.0], [81.8, 13.0], [81.9, 13.0], [82.0, 13.0], [82.1, 13.0], [82.2, 13.0], [82.3, 13.0], [82.4, 13.0], [82.5, 13.0], [82.6, 13.0], [82.7, 13.0], [82.8, 13.0], [82.9, 13.0], [83.0, 13.0], [83.1, 13.0], [83.2, 13.0], [83.3, 13.0], [83.4, 13.0], [83.5, 13.0], [83.6, 13.0], [83.7, 13.0], [83.8, 13.0], [83.9, 13.0], [84.0, 13.0], [84.1, 13.0], [84.2, 13.0], [84.3, 13.0], [84.4, 13.0], [84.5, 13.0], [84.6, 13.0], [84.7, 13.0], [84.8, 13.0], [84.9, 13.0], [85.0, 13.0], [85.1, 13.0], [85.2, 13.0], [85.3, 13.0], [85.4, 13.0], [85.5, 13.0], [85.6, 13.0], [85.7, 13.0], [85.8, 13.0], [85.9, 13.0], [86.0, 13.0], [86.1, 13.0], [86.2, 13.0], [86.3, 13.0], [86.4, 13.0], [86.5, 13.0], [86.6, 13.0], [86.7, 13.0], [86.8, 13.0], [86.9, 13.0], [87.0, 13.0], [87.1, 13.0], [87.2, 13.0], [87.3, 13.0], [87.4, 13.0], [87.5, 13.0], [87.6, 13.0], [87.7, 13.0], [87.8, 13.0], [87.9, 13.0], [88.0, 13.0], [88.1, 13.0], [88.2, 13.0], [88.3, 13.0], [88.4, 13.0], [88.5, 13.0], [88.6, 13.0], [88.7, 13.0], [88.8, 13.0], [88.9, 13.0], [89.0, 13.0], [89.1, 13.0], [89.2, 13.0], [89.3, 13.0], [89.4, 13.0], [89.5, 13.0], [89.6, 13.0], [89.7, 13.0], [89.8, 13.0], [89.9, 13.0], [90.0, 13.0], [90.1, 13.0], [90.2, 13.0], [90.3, 13.0], [90.4, 13.0], [90.5, 13.0], [90.6, 13.0], [90.7, 13.0], [90.8, 13.0], [90.9, 13.0], [91.0, 13.0], [91.1, 13.0], [91.2, 13.0], [91.3, 13.0], [91.4, 13.0], [91.5, 14.0], [91.6, 14.0], [91.7, 14.0], [91.8, 14.0], [91.9, 14.0], [92.0, 14.0], [92.1, 14.0], [92.2, 14.0], [92.3, 14.0], [92.4, 14.0], [92.5, 14.0], [92.6, 14.0], [92.7, 14.0], [92.8, 14.0], [92.9, 14.0], [93.0, 14.0], [93.1, 14.0], [93.2, 14.0], [93.3, 14.0], [93.4, 14.0], [93.5, 14.0], [93.6, 14.0], [93.7, 14.0], [93.8, 14.0], [93.9, 14.0], [94.0, 14.0], [94.1, 14.0], [94.2, 14.0], [94.3, 14.0], [94.4, 14.0], [94.5, 14.0], [94.6, 14.0], [94.7, 14.0], [94.8, 14.0], [94.9, 14.0], [95.0, 14.0], [95.1, 14.0], [95.2, 14.0], [95.3, 14.0], [95.4, 14.0], [95.5, 14.0], [95.6, 14.0], [95.7, 14.0], [95.8, 14.0], [95.9, 14.0], [96.0, 14.0], [96.1, 14.0], [96.2, 14.0], [96.3, 14.0], [96.4, 14.0], [96.5, 14.0], [96.6, 14.0], [96.7, 14.0], [96.8, 14.0], [96.9, 14.0], [97.0, 14.0], [97.1, 14.0], [97.2, 14.0], [97.3, 14.0], [97.4, 14.0], [97.5, 14.0], [97.6, 14.0], [97.7, 14.0], [97.8, 14.0], [97.9, 14.0], [98.0, 14.0], [98.1, 15.0], [98.2, 15.0], [98.3, 15.0], [98.4, 15.0], [98.5, 15.0], [98.6, 15.0], [98.7, 15.0], [98.8, 15.0], [98.9, 15.0], [99.0, 15.0], [99.1, 15.0], [99.2, 15.0], [99.3, 15.0], [99.4, 16.0], [99.5, 16.0], [99.6, 16.0], [99.7, 17.0], [99.8, 18.0], [99.9, 21.0]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 25000.0, "minX": 0.0, "maxY": 25000.0, "series": [{"data": [[0.0, 25000.0]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4.9E-324, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2743.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 22257.0, "series": [{"data": [[0.0, 22257.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 2743.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.5581395348837206, "minX": 1.731748225E12, "maxY": 2.8249999999999997, "series": [{"data": [[1.731748398E12, 1.81159420289855], [1.731748357E12, 1.825174825174825], [1.731748271E12, 1.826086956521739], [1.731748353E12, 1.8308823529411762], [1.731748267E12, 1.828571428571429], [1.731748312E12, 1.856115107913669], [1.731748226E12, 2.0540540540540517], [1.731748361E12, 1.8071428571428572], [1.731748275E12, 1.8417266187050356], [1.73174832E12, 1.855072463768116], [1.731748234E12, 1.893617021276596], [1.731748316E12, 1.8439716312056726], [1.73174823E12, 1.8581560283687937], [1.731748402E12, 1.789855072463768], [1.731748324E12, 1.7720588235294117], [1.731748238E12, 1.855072463768116], [1.731748365E12, 1.7956204379562037], [1.731748279E12, 1.7928571428571423], [1.731748373E12, 1.821428571428571], [1.731748287E12, 1.82394366197183], [1.731748369E12, 1.8074074074074071], [1.731748283E12, 1.8333333333333328], [1.731748328E12, 1.8214285714285705], [1.731748242E12, 1.8661971830985917], [1.731748377E12, 1.8671328671328666], [1.731748291E12, 1.8550724637681162], [1.731748336E12, 1.8405797101449268], [1.73174825E12, 1.8222222222222215], [1.731748332E12, 1.853146853146853], [1.731748246E12, 1.842857142857143], [1.73174834E12, 1.7737226277372264], [1.731748254E12, 1.8129496402877694], [1.731748381E12, 1.8561151079136686], [1.731748295E12, 1.8333333333333335], [1.731748389E12, 1.8235294117647054], [1.731748303E12, 1.8439716312056738], [1.731748385E12, 1.8235294117647058], [1.731748299E12, 1.8043478260869563], [1.731748344E12, 1.8169014084507038], [1.731748258E12, 1.8705035971223019], [1.731748393E12, 1.8321678321678319], [1.731748307E12, 1.8098591549295782], [1.731748352E12, 1.852112676056338], [1.731748266E12, 1.8768115942028984], [1.731748348E12, 1.8489208633093523], [1.731748262E12, 1.8705035971223012], [1.731748313E12, 1.7810218978102192], [1.731748227E12, 1.957746478873239], [1.731748272E12, 1.8285714285714283], [1.731748399E12, 1.8115942028985508], [1.731748268E12, 1.8088235294117647], [1.731748395E12, 1.85], [1.731748354E12, 1.8499999999999996], [1.731748276E12, 1.857142857142857], [1.731748403E12, 1.8102189781021893], [1.731748362E12, 1.7913669064748199], [1.731748358E12, 1.783582089552239], [1.731748317E12, 1.8405797101449277], [1.731748231E12, 1.85], [1.731748366E12, 1.7841726618705032], [1.731748325E12, 1.8014184397163118], [1.731748239E12, 1.8642857142857145], [1.731748321E12, 1.8489208633093515], [1.731748235E12, 1.8561151079136693], [1.73174828E12, 1.8695652173913038], [1.731748329E12, 1.8248175182481743], [1.731748243E12, 1.8405797101449277], [1.731748288E12, 1.8455882352941175], [1.731748284E12, 1.848920863309352], [1.73174837E12, 1.8581560283687943], [1.731748292E12, 1.8499999999999999], [1.731748378E12, 1.8432835820895521], [1.731748374E12, 1.8540145985401455], [1.731748333E12, 1.8248175182481745], [1.731748247E12, 1.8029197080291963], [1.731748382E12, 1.879432624113475], [1.731748341E12, 1.8749999999999998], [1.731748255E12, 1.8785714285714286], [1.731748337E12, 1.8129496402877696], [1.731748251E12, 1.9020979020979023], [1.731748296E12, 1.8321678321678319], [1.731748345E12, 1.8201438848920857], [1.731748259E12, 1.8613138686131385], [1.731748304E12, 1.7794117647058818], [1.7317483E12, 1.8214285714285707], [1.731748386E12, 1.8194444444444444], [1.731748308E12, 1.7647058823529413], [1.731748394E12, 1.8148148148148142], [1.73174839E12, 1.7857142857142854], [1.731748349E12, 1.8550724637681157], [1.731748263E12, 1.8260869565217388], [1.731748228E12, 1.8936170212765955], [1.731748355E12, 1.8057553956834533], [1.7317484E12, 1.8417266187050356], [1.731748314E12, 1.8085106382978724], [1.731748396E12, 1.8550724637681153], [1.73174831E12, 1.7928571428571434], [1.731748269E12, 1.859154929577465], [1.731748404E12, 1.8111888111888115], [1.731748318E12, 1.848920863309352], [1.731748277E12, 1.8529411764705879], [1.731748273E12, 1.8776978417266188], [1.731748232E12, 1.8248175182481745], [1.731748359E12, 1.8251748251748245], [1.731748281E12, 1.8705035971223019], [1.73174824E12, 1.8705035971223019], [1.731748367E12, 1.8370370370370364], [1.731748236E12, 1.788321167883212], [1.731748363E12, 1.8345323741007185], [1.731748322E12, 1.8333333333333337], [1.731748244E12, 1.8642857142857134], [1.731748371E12, 1.833333333333333], [1.73174833E12, 1.8642857142857139], [1.731748326E12, 1.7769784172661858], [1.731748285E12, 1.82394366197183], [1.731748334E12, 1.8571428571428568], [1.731748293E12, 1.8057553956834524], [1.731748289E12, 1.8297872340425534], [1.731748248E12, 1.8714285714285717], [1.731748375E12, 1.8928571428571423], [1.731748297E12, 1.797101449275362], [1.731748256E12, 1.86231884057971], [1.731748383E12, 1.802919708029197], [1.731748252E12, 1.8602941176470582], [1.731748379E12, 1.8591549295774648], [1.731748338E12, 1.8248175182481747], [1.73174826E12, 1.8521126760563382], [1.731748387E12, 1.7777777777777775], [1.731748346E12, 1.835714285714285], [1.731748342E12, 1.734848484848485], [1.731748301E12, 1.7925925925925923], [1.73174835E12, 1.8297872340425534], [1.731748309E12, 1.8085106382978722], [1.731748305E12, 1.8226950354609923], [1.731748264E12, 1.830985915492957], [1.731748391E12, 1.8043478260869565], [1.731748356E12, 1.826086956521739], [1.73174827E12, 1.8478260869565217], [1.731748229E12, 1.8467153284671523], [1.731748225E12, 2.8249999999999997], [1.731748397E12, 1.8380281690140838], [1.731748311E12, 1.8043478260869565], [1.731748233E12, 1.8455882352941182], [1.731748405E12, 1.5581395348837206], [1.731748319E12, 1.8260869565217388], [1.731748401E12, 1.8115942028985503], [1.731748315E12, 1.8102189781021891], [1.73174836E12, 1.8088235294117643], [1.731748274E12, 1.8345323741007193], [1.731748323E12, 1.811188811188811], [1.731748368E12, 1.8541666666666665], [1.731748282E12, 1.8260869565217384], [1.731748364E12, 1.8439716312056735], [1.731748278E12, 1.8581560283687946], [1.731748237E12, 1.8723404255319145], [1.731748372E12, 1.8345323741007193], [1.731748286E12, 1.785185185185185], [1.731748245E12, 1.8623188405797102], [1.731748241E12, 1.861313868613139], [1.731748327E12, 1.8102189781021898], [1.731748249E12, 1.8857142857142855], [1.731748335E12, 1.8478260869565208], [1.731748331E12, 1.8467153284671534], [1.731748376E12, 1.8260869565217386], [1.73174829E12, 1.7985611510791362], [1.731748339E12, 1.8085106382978724], [1.731748384E12, 1.8333333333333326], [1.731748298E12, 1.8129496402877694], [1.73174838E12, 1.8623188405797098], [1.731748294E12, 1.854014598540146], [1.731748253E12, 1.8633093525179851], [1.731748388E12, 1.8251748251748248], [1.731748302E12, 1.8499999999999994], [1.731748261E12, 1.8417266187050363], [1.731748257E12, 1.8561151079136688], [1.731748343E12, 1.8428571428571425], [1.731748265E12, 1.8088235294117647], [1.731748351E12, 1.8235294117647045], [1.731748347E12, 1.8321167883211673], [1.731748392E12, 1.81159420289855], [1.731748306E12, 1.802919708029197]], "isOverall": false, "label": "线程组", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.731748405E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 12.107461965708785, "minX": 1.0, "maxY": 19.388888888888893, "series": [{"data": [[1.0, 12.107461965708785], [2.0, 12.174176484731893], [4.0, 19.388888888888893], [3.0, 16.586956521739133]], "isOverall": false, "label": "Products", "isController": false}, {"data": [[1.8376400000000097, 12.176439999999944]], "isOverall": false, "label": "Products-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 4.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 10201.0, "minX": 1.731748225E12, "maxY": 218586.0, "series": [{"data": [[1.731748398E12, 193978.0], [1.731748357E12, 206038.0], [1.731748271E12, 196106.0], [1.731748353E12, 211437.0], [1.731748267E12, 200443.0], [1.731748312E12, 199266.0], [1.731748226E12, 218586.0], [1.731748361E12, 199257.0], [1.731748275E12, 199480.0], [1.73174832E12, 212517.0], [1.731748234E12, 215633.0], [1.731748316E12, 201236.0], [1.73174823E12, 214197.0], [1.731748402E12, 193234.0], [1.731748324E12, 211244.0], [1.731748238E12, 198809.0], [1.731748365E12, 199520.0], [1.731748279E12, 197404.0], [1.731748373E12, 197406.0], [1.731748287E12, 200528.0], [1.731748369E12, 195540.0], [1.731748283E12, 191040.0], [1.731748328E12, 209724.0], [1.731748242E12, 203480.0], [1.731748377E12, 199939.0], [1.731748291E12, 208260.0], [1.731748336E12, 202575.0], [1.73174825E12, 197669.0], [1.731748332E12, 207675.0], [1.731748246E12, 202676.0], [1.73174834E12, 193310.0], [1.731748254E12, 194381.0], [1.731748381E12, 204662.0], [1.731748295E12, 207986.0], [1.731748389E12, 212892.0], [1.731748303E12, 200021.0], [1.731748385E12, 209632.0], [1.731748299E12, 212642.0], [1.731748344E12, 200165.0], [1.731748258E12, 194262.0], [1.731748393E12, 208374.0], [1.731748307E12, 200178.0], [1.731748352E12, 199915.0], [1.731748266E12, 213794.0], [1.731748348E12, 194502.0], [1.731748262E12, 204479.0], [1.731748313E12, 206325.0], [1.731748227E12, 211993.0], [1.731748272E12, 197235.0], [1.731748399E12, 200659.0], [1.731748268E12, 196105.0], [1.731748395E12, 199531.0], [1.731748354E12, 198961.0], [1.731748276E12, 195364.0], [1.731748403E12, 212336.0], [1.731748362E12, 196083.0], [1.731748358E12, 191786.0], [1.731748317E12, 210564.0], [1.731748231E12, 202665.0], [1.731748366E12, 195557.0], [1.731748325E12, 198483.0], [1.731748239E12, 198653.0], [1.731748321E12, 200147.0], [1.731748235E12, 202828.0], [1.73174828E12, 203664.0], [1.731748329E12, 196293.0], [1.731748243E12, 193935.0], [1.731748288E12, 214383.0], [1.731748284E12, 214329.0], [1.73174837E12, 197163.0], [1.731748292E12, 202925.0], [1.731748378E12, 207201.0], [1.731748374E12, 207456.0], [1.731748333E12, 194387.0], [1.731748247E12, 191887.0], [1.731748382E12, 211865.0], [1.731748341E12, 204402.0], [1.731748255E12, 213384.0], [1.731748337E12, 194443.0], [1.731748251E12, 201072.0], [1.731748296E12, 206016.0], [1.731748345E12, 205550.0], [1.731748259E12, 211309.0], [1.731748304E12, 194144.0], [1.7317483E12, 201227.0], [1.731748386E12, 204540.0], [1.731748308E12, 192768.0], [1.731748394E12, 193539.0], [1.73174839E12, 196508.0], [1.731748349E12, 208571.0], [1.731748263E12, 206972.0], [1.731748228E12, 204235.0], [1.731748355E12, 194681.0], [1.7317484E12, 213768.0], [1.731748314E12, 204055.0], [1.731748396E12, 208707.0], [1.73174831E12, 203649.0], [1.731748269E12, 198460.0], [1.731748404E12, 202502.0], [1.731748318E12, 200541.0], [1.731748277E12, 210290.0], [1.731748273E12, 210564.0], [1.731748232E12, 195297.0], [1.731748359E12, 201273.0], [1.731748281E12, 208914.0], [1.73174824E12, 196598.0], [1.731748367E12, 208864.0], [1.731748236E12, 190389.0], [1.731748363E12, 204479.0], [1.731748322E12, 194318.0], [1.731748244E12, 206878.0], [1.731748371E12, 214580.0], [1.73174833E12, 196479.0], [1.731748326E12, 198821.0], [1.731748285E12, 201767.0], [1.731748334E12, 203051.0], [1.731748293E12, 200666.0], [1.731748289E12, 196761.0], [1.731748248E12, 211324.0], [1.731748375E12, 202874.0], [1.731748297E12, 193978.0], [1.731748256E12, 198345.0], [1.731748383E12, 201616.0], [1.731748252E12, 211437.0], [1.731748379E12, 203090.0], [1.731748338E12, 208309.0], [1.73174826E12, 203391.0], [1.731748387E12, 193906.0], [1.731748346E12, 208887.0], [1.731748342E12, 205069.0], [1.731748301E12, 188720.0], [1.73174835E12, 205080.0], [1.731748309E12, 210200.0], [1.731748305E12, 202464.0], [1.731748264E12, 204434.0], [1.731748391E12, 194982.0], [1.731748356E12, 210904.0], [1.73174827E12, 214580.0], [1.731748229E12, 191731.0], [1.731748225E12, 108791.0], [1.731748397E12, 204136.0], [1.731748311E12, 198926.0], [1.731748233E12, 194925.0], [1.731748405E12, 62903.0], [1.731748319E12, 194848.0], [1.731748401E12, 197853.0], [1.731748315E12, 195706.0], [1.73174836E12, 210202.0], [1.731748274E12, 201413.0], [1.731748323E12, 203424.0], [1.731748368E12, 205646.0], [1.731748282E12, 202255.0], [1.731748364E12, 209126.0], [1.731748278E12, 201606.0], [1.731748237E12, 214362.0], [1.731748372E12, 197582.0], [1.731748286E12, 193906.0], [1.731748245E12, 204833.0], [1.731748241E12, 212092.0], [1.731748327E12, 201961.0], [1.731748249E12, 203477.0], [1.731748335E12, 207760.0], [1.731748331E12, 207199.0], [1.731748376E12, 197994.0], [1.73174829E12, 196921.0], [1.731748339E12, 203501.0], [1.731748384E12, 190652.0], [1.731748298E12, 201785.0], [1.73174838E12, 194922.0], [1.731748294E12, 194933.0], [1.731748253E12, 198104.0], [1.731748388E12, 202272.0], [1.731748302E12, 215957.0], [1.731748261E12, 196083.0], [1.731748257E12, 199926.0], [1.731748343E12, 200194.0], [1.731748265E12, 191208.0], [1.731748351E12, 198826.0], [1.731748347E12, 197157.0], [1.731748392E12, 208438.0], [1.731748306E12, 211980.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.731748398E12, 32529.0], [1.731748357E12, 33819.0], [1.731748271E12, 32592.0], [1.731748353E12, 32266.0], [1.731748267E12, 32850.0], [1.731748312E12, 32454.0], [1.731748226E12, 34882.0], [1.731748361E12, 33020.0], [1.731748275E12, 33065.0], [1.73174832E12, 32536.0], [1.731748234E12, 33394.0], [1.731748316E12, 33269.0], [1.73174823E12, 33674.0], [1.731748402E12, 32527.0], [1.731748324E12, 32337.0], [1.731748238E12, 32609.0], [1.731748365E12, 32457.0], [1.731748279E12, 33082.0], [1.731748373E12, 33302.0], [1.731748287E12, 33420.0], [1.731748369E12, 32075.0], [1.731748283E12, 32416.0], [1.731748328E12, 33198.0], [1.731748242E12, 33506.0], [1.731748377E12, 33435.0], [1.731748291E12, 32385.0], [1.731748336E12, 32688.0], [1.73174825E12, 32138.0], [1.731748332E12, 33636.0], [1.731748246E12, 33156.0], [1.73174834E12, 32557.0], [1.731748254E12, 33023.0], [1.731748381E12, 32695.0], [1.731748295E12, 32785.0], [1.731748389E12, 32289.0], [1.731748303E12, 33255.0], [1.731748385E12, 32278.0], [1.731748299E12, 32909.0], [1.731748344E12, 33563.0], [1.731748258E12, 32491.0], [1.731748393E12, 33739.0], [1.731748307E12, 33594.0], [1.731748352E12, 33446.0], [1.731748266E12, 32926.0], [1.731748348E12, 32623.0], [1.731748262E12, 32803.0], [1.731748313E12, 32621.0], [1.731748227E12, 33699.0], [1.731748272E12, 33284.0], [1.731748399E12, 32524.0], [1.731748268E12, 32264.0], [1.731748395E12, 32760.0], [1.731748354E12, 33055.0], [1.731748276E12, 32697.0], [1.731748403E12, 32385.0], [1.731748362E12, 32773.0], [1.731748358E12, 31861.0], [1.731748317E12, 32783.0], [1.731748231E12, 32930.0], [1.731748366E12, 32650.0], [1.731748325E12, 33348.0], [1.731748239E12, 33238.0], [1.731748321E12, 32873.0], [1.731748235E12, 32922.0], [1.73174828E12, 32461.0], [1.731748329E12, 32505.0], [1.731748243E12, 32596.0], [1.731748288E12, 32271.0], [1.731748284E12, 33021.0], [1.73174837E12, 33228.0], [1.731748292E12, 33006.0], [1.731748378E12, 31962.0], [1.731748374E12, 32142.0], [1.731748333E12, 32399.0], [1.731748247E12, 32146.0], [1.731748382E12, 33594.0], [1.731748341E12, 33701.0], [1.731748255E12, 32880.0], [1.731748337E12, 32906.0], [1.731748251E12, 33698.0], [1.731748296E12, 33791.0], [1.731748345E12, 32750.0], [1.731748259E12, 32633.0], [1.731748304E12, 32316.0], [1.7317483E12, 33137.0], [1.731748386E12, 33975.0], [1.731748308E12, 32211.0], [1.731748394E12, 32185.0], [1.73174839E12, 33072.0], [1.731748349E12, 32953.0], [1.731748263E12, 32802.0], [1.731748228E12, 33405.0], [1.731748355E12, 32978.0], [1.7317484E12, 33107.0], [1.731748314E12, 33280.0], [1.731748396E12, 32803.0], [1.73174831E12, 33107.0], [1.731748269E12, 33471.0], [1.731748404E12, 33714.0], [1.731748318E12, 32891.0], [1.731748277E12, 32448.0], [1.731748273E12, 32619.0], [1.731748232E12, 32444.0], [1.731748359E12, 33422.0], [1.731748281E12, 33098.0], [1.73174824E12, 32531.0], [1.731748367E12, 32233.0], [1.731748236E12, 32439.0], [1.731748363E12, 32803.0], [1.731748322E12, 32769.0], [1.731748244E12, 32993.0], [1.731748371E12, 32718.0], [1.73174833E12, 32785.0], [1.731748326E12, 32904.0], [1.731748285E12, 33453.0], [1.731748334E12, 33044.0], [1.731748293E12, 33148.0], [1.731748289E12, 33306.0], [1.731748248E12, 33412.0], [1.731748375E12, 33089.0], [1.731748297E12, 32529.0], [1.731748256E12, 32587.0], [1.731748383E12, 32419.0], [1.731748252E12, 32266.0], [1.731748379E12, 33395.0], [1.731748338E12, 32231.0], [1.73174826E12, 33479.0], [1.731748387E12, 32015.0], [1.731748346E12, 33236.0], [1.731748342E12, 31414.0], [1.731748301E12, 31819.0], [1.73174835E12, 33035.0], [1.731748309E12, 33102.0], [1.731748305E12, 33119.0], [1.731748264E12, 33600.0], [1.731748391E12, 32775.0], [1.731748356E12, 32421.0], [1.73174827E12, 32718.0], [1.731748229E12, 32070.0], [1.731748225E12, 18773.0], [1.731748397E12, 33539.0], [1.731748311E12, 32869.0], [1.731748233E12, 32105.0], [1.731748405E12, 10201.0], [1.731748319E12, 32604.0], [1.731748401E12, 32654.0], [1.731748315E12, 32363.0], [1.73174836E12, 32377.0], [1.731748274E12, 32864.0], [1.731748323E12, 33462.0], [1.731748368E12, 33741.0], [1.731748282E12, 32678.0], [1.731748364E12, 33459.0], [1.731748278E12, 33188.0], [1.731748237E12, 33175.0], [1.731748372E12, 32826.0], [1.731748286E12, 32015.0], [1.731748245E12, 32738.0], [1.731748241E12, 32593.0], [1.731748327E12, 32138.0], [1.731748249E12, 32801.0], [1.731748335E12, 32716.0], [1.731748331E12, 32739.0], [1.731748376E12, 32813.0], [1.73174829E12, 33038.0], [1.731748339E12, 33299.0], [1.731748384E12, 32400.0], [1.731748298E12, 32722.0], [1.73174838E12, 32641.0], [1.731748294E12, 32031.0], [1.731748253E12, 32794.0], [1.731748388E12, 33636.0], [1.731748302E12, 33069.0], [1.731748261E12, 32773.0], [1.731748257E12, 33066.0], [1.731748343E12, 33025.0], [1.731748265E12, 31930.0], [1.731748351E12, 32390.0], [1.731748347E12, 32406.0], [1.731748392E12, 32383.0], [1.731748306E12, 32523.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.731748405E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 11.615942028985502, "minX": 1.731748225E12, "maxY": 16.45, "series": [{"data": [[1.731748398E12, 11.811594202898553], [1.731748357E12, 11.790209790209788], [1.731748271E12, 12.31159420289855], [1.731748353E12, 12.558823529411768], [1.731748267E12, 11.892857142857144], [1.731748312E12, 12.165467625899282], [1.731748226E12, 13.256756756756763], [1.731748361E12, 11.821428571428568], [1.731748275E12, 12.25179856115108], [1.73174832E12, 12.60144927536232], [1.731748234E12, 12.531914893617023], [1.731748316E12, 12.333333333333337], [1.73174823E12, 12.425531914893616], [1.731748402E12, 11.782608695652169], [1.731748324E12, 11.985294117647058], [1.731748238E12, 12.268115942028986], [1.731748365E12, 12.175182481751827], [1.731748279E12, 11.971428571428579], [1.731748373E12, 11.821428571428566], [1.731748287E12, 11.943661971830984], [1.731748369E12, 12.088888888888892], [1.731748283E12, 12.188405797101451], [1.731748328E12, 11.978571428571428], [1.731748242E12, 12.225352112676049], [1.731748377E12, 12.076923076923075], [1.731748291E12, 12.434782608695654], [1.731748336E12, 12.42753623188406], [1.73174825E12, 12.511111111111111], [1.731748332E12, 12.062937062937067], [1.731748246E12, 12.24285714285714], [1.73174834E12, 11.875912408759127], [1.731748254E12, 11.8705035971223], [1.731748381E12, 12.323741007194243], [1.731748295E12, 12.224637681159424], [1.731748389E12, 12.294117647058826], [1.731748303E12, 11.978723404255323], [1.731748385E12, 12.139705882352946], [1.731748299E12, 12.108695652173916], [1.731748344E12, 11.873239436619718], [1.731748258E12, 12.151079136690653], [1.731748393E12, 11.853146853146853], [1.731748307E12, 11.85915492957746], [1.731748352E12, 12.126760563380284], [1.731748266E12, 12.521739130434783], [1.731748348E12, 12.424460431654675], [1.731748262E12, 12.431654676258995], [1.731748313E12, 11.94160583941606], [1.731748227E12, 12.83802816901409], [1.731748272E12, 12.057142857142859], [1.731748399E12, 12.086956521739129], [1.731748268E12, 11.992647058823525], [1.731748395E12, 12.200000000000008], [1.731748354E12, 12.271428571428565], [1.731748276E12, 12.17857142857143], [1.731748403E12, 12.182481751824819], [1.731748362E12, 11.70503597122302], [1.731748358E12, 12.037313432835825], [1.731748317E12, 12.282608695652176], [1.731748231E12, 12.050000000000006], [1.731748366E12, 11.971223021582738], [1.731748325E12, 11.695035460992909], [1.731748239E12, 12.342857142857149], [1.731748321E12, 12.323741007194242], [1.731748235E12, 12.251798561151082], [1.73174828E12, 12.471014492753628], [1.731748329E12, 12.058394160583939], [1.731748243E12, 12.16666666666667], [1.731748288E12, 12.500000000000004], [1.731748284E12, 12.294964028776983], [1.73174837E12, 12.134751773049647], [1.731748292E12, 12.071428571428571], [1.731748378E12, 12.589552238805963], [1.731748374E12, 12.452554744525546], [1.731748333E12, 12.153284671532854], [1.731748247E12, 12.175182481751833], [1.731748382E12, 12.226950354609935], [1.731748341E12, 12.138888888888891], [1.731748255E12, 12.507142857142862], [1.731748337E12, 11.863309352517978], [1.731748251E12, 12.38461538461539], [1.731748296E12, 12.034965034965037], [1.731748345E12, 12.179856115107917], [1.731748259E12, 12.554744525547445], [1.731748304E12, 11.882352941176476], [1.7317483E12, 11.921428571428576], [1.731748386E12, 11.666666666666666], [1.731748308E12, 11.735294117647058], [1.731748394E12, 12.214814814814819], [1.73174839E12, 11.821428571428568], [1.731748349E12, 12.297101449275363], [1.731748263E12, 12.224637681159424], [1.731748228E12, 12.496453900709215], [1.731748355E12, 11.863309352517982], [1.7317484E12, 12.338129496402876], [1.731748314E12, 11.921985815602836], [1.731748396E12, 12.376811594202898], [1.73174831E12, 11.678571428571425], [1.731748269E12, 12.176056338028179], [1.731748404E12, 11.706293706293708], [1.731748318E12, 12.287769784172664], [1.731748277E12, 12.595588235294116], [1.731748273E12, 12.561151079136685], [1.731748232E12, 12.277372262773724], [1.731748359E12, 11.888111888111892], [1.731748281E12, 12.294964028776985], [1.73174824E12, 12.338129496402873], [1.731748367E12, 12.40740740740741], [1.731748236E12, 11.948905109489054], [1.731748363E12, 12.201438848920864], [1.731748322E12, 12.304347826086959], [1.731748244E12, 12.435714285714285], [1.731748371E12, 12.384057971014496], [1.73174833E12, 12.200000000000001], [1.731748326E12, 11.676258992805757], [1.731748285E12, 11.795774647887319], [1.731748334E12, 12.214285714285719], [1.731748293E12, 12.208633093525181], [1.731748289E12, 12.02836879432624], [1.731748248E12, 12.400000000000007], [1.731748375E12, 12.35], [1.731748297E12, 11.717391304347826], [1.731748256E12, 12.333333333333334], [1.731748383E12, 12.153284671532848], [1.731748252E12, 12.713235294117645], [1.731748379E12, 12.25352112676057], [1.731748338E12, 12.153284671532852], [1.73174826E12, 12.161971830985916], [1.731748387E12, 11.903703703703702], [1.731748346E12, 12.114285714285714], [1.731748342E12, 12.212121212121215], [1.731748301E12, 11.977777777777776], [1.73174835E12, 12.113475177304963], [1.731748309E12, 12.035460992907803], [1.731748305E12, 11.92198581560284], [1.731748264E12, 11.97887323943662], [1.731748391E12, 11.615942028985502], [1.731748356E12, 12.166666666666664], [1.73174827E12, 12.434782608695652], [1.731748229E12, 12.386861313868616], [1.731748225E12, 16.45], [1.731748397E12, 12.098591549295776], [1.731748311E12, 12.07246376811594], [1.731748233E12, 12.323529411764708], [1.731748405E12, 12.093023255813954], [1.731748319E12, 12.202898550724642], [1.731748401E12, 11.913043478260873], [1.731748315E12, 12.182481751824826], [1.73174836E12, 12.279411764705888], [1.731748274E12, 12.028776978417264], [1.731748323E12, 11.916083916083915], [1.731748368E12, 11.861111111111114], [1.731748282E12, 12.246376811594205], [1.731748364E12, 11.992907801418442], [1.731748278E12, 12.106382978723406], [1.731748237E12, 12.546099290780141], [1.731748372E12, 12.1294964028777], [1.731748286E12, 11.962962962962962], [1.731748245E12, 12.485507246376809], [1.731748241E12, 12.60583941605839], [1.731748327E12, 12.05109489051095], [1.731748249E12, 12.36428571428572], [1.731748335E12, 12.347826086956525], [1.731748331E12, 12.37956204379562], [1.731748376E12, 12.304347826086964], [1.73174829E12, 11.7841726618705], [1.731748339E12, 11.879432624113472], [1.731748384E12, 11.927536231884057], [1.731748298E12, 11.856115107913668], [1.73174838E12, 12.137681159420296], [1.731748294E12, 12.277372262773728], [1.731748253E12, 12.381294964028775], [1.731748388E12, 11.748251748251748], [1.731748302E12, 12.278571428571428], [1.731748261E12, 11.978417266187053], [1.731748257E12, 12.43884892086331], [1.731748343E12, 12.128571428571426], [1.731748265E12, 12.191176470588239], [1.731748351E12, 12.294117647058826], [1.731748347E12, 12.37226277372262], [1.731748392E12, 12.181159420289857], [1.731748306E12, 12.17518248175182]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.731748405E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 11.615942028985502, "minX": 1.731748225E12, "maxY": 16.325000000000003, "series": [{"data": [[1.731748398E12, 11.811594202898553], [1.731748357E12, 11.769230769230768], [1.731748271E12, 12.31159420289855], [1.731748353E12, 12.551470588235299], [1.731748267E12, 11.892857142857144], [1.731748312E12, 12.143884892086335], [1.731748226E12, 13.175675675675677], [1.731748361E12, 11.792857142857141], [1.731748275E12, 12.244604316546765], [1.73174832E12, 12.594202898550718], [1.731748234E12, 12.503546099290789], [1.731748316E12, 12.326241134751779], [1.73174823E12, 12.411347517730501], [1.731748402E12, 11.775362318840578], [1.731748324E12, 11.985294117647058], [1.731748238E12, 12.260869565217392], [1.731748365E12, 12.153284671532852], [1.731748279E12, 11.971428571428579], [1.731748373E12, 11.821428571428566], [1.731748287E12, 11.936619718309862], [1.731748369E12, 12.08148148148148], [1.731748283E12, 12.17391304347827], [1.731748328E12, 11.96428571428571], [1.731748242E12, 12.225352112676049], [1.731748377E12, 12.069930069930074], [1.731748291E12, 12.420289855072468], [1.731748336E12, 12.42753623188406], [1.73174825E12, 12.474074074074071], [1.731748332E12, 12.041958041958043], [1.731748246E12, 12.235714285714286], [1.73174834E12, 11.875912408759127], [1.731748254E12, 11.856115107913666], [1.731748381E12, 12.31654676258993], [1.731748295E12, 12.202898550724637], [1.731748389E12, 12.286764705882353], [1.731748303E12, 11.957446808510637], [1.731748385E12, 12.125], [1.731748299E12, 12.10144927536232], [1.731748344E12, 11.873239436619718], [1.731748258E12, 12.143884892086334], [1.731748393E12, 11.846153846153843], [1.731748307E12, 11.852112676056336], [1.731748352E12, 12.119718309859154], [1.731748266E12, 12.492753623188406], [1.731748348E12, 12.417266187050359], [1.731748262E12, 12.417266187050364], [1.731748313E12, 11.94160583941606], [1.731748227E12, 12.788732394366194], [1.731748272E12, 12.03571428571429], [1.731748399E12, 12.079710144927537], [1.731748268E12, 11.985294117647062], [1.731748395E12, 12.185714285714285], [1.731748354E12, 12.26428571428571], [1.731748276E12, 12.17857142857143], [1.731748403E12, 12.182481751824819], [1.731748362E12, 11.70503597122302], [1.731748358E12, 12.037313432835825], [1.731748317E12, 12.275362318840582], [1.731748231E12, 12.02857142857143], [1.731748366E12, 11.956834532374105], [1.731748325E12, 11.695035460992909], [1.731748239E12, 12.321428571428577], [1.731748321E12, 12.309352517985621], [1.731748235E12, 12.230215827338125], [1.73174828E12, 12.471014492753628], [1.731748329E12, 12.051094890510951], [1.731748243E12, 12.152173913043482], [1.731748288E12, 12.500000000000004], [1.731748284E12, 12.280575539568348], [1.73174837E12, 12.120567375886521], [1.731748292E12, 12.064285714285718], [1.731748378E12, 12.582089552238802], [1.731748374E12, 12.452554744525546], [1.731748333E12, 12.131386861313873], [1.731748247E12, 12.145985401459857], [1.731748382E12, 12.21276595744681], [1.731748341E12, 12.131944444444443], [1.731748255E12, 12.485714285714286], [1.731748337E12, 11.863309352517978], [1.731748251E12, 12.377622377622378], [1.731748296E12, 12.034965034965037], [1.731748345E12, 12.1726618705036], [1.731748259E12, 12.53284671532847], [1.731748304E12, 11.875000000000005], [1.7317483E12, 11.921428571428576], [1.731748386E12, 11.652777777777773], [1.731748308E12, 11.735294117647058], [1.731748394E12, 12.214814814814819], [1.73174839E12, 11.80714285714285], [1.731748349E12, 12.297101449275363], [1.731748263E12, 12.202898550724635], [1.731748228E12, 12.453900709219857], [1.731748355E12, 11.856115107913674], [1.7317484E12, 12.338129496402876], [1.731748314E12, 11.921985815602836], [1.731748396E12, 12.369565217391312], [1.73174831E12, 11.657142857142858], [1.731748269E12, 12.169014084507044], [1.731748404E12, 11.69230769230769], [1.731748318E12, 12.287769784172664], [1.731748277E12, 12.588235294117645], [1.731748273E12, 12.553956834532373], [1.731748232E12, 12.255474452554747], [1.731748359E12, 11.888111888111892], [1.731748281E12, 12.280575539568348], [1.73174824E12, 12.294964028776986], [1.731748367E12, 12.40740740740741], [1.731748236E12, 11.934306569343072], [1.731748363E12, 12.201438848920864], [1.731748322E12, 12.304347826086959], [1.731748244E12, 12.414285714285716], [1.731748371E12, 12.384057971014496], [1.73174833E12, 12.185714285714289], [1.731748326E12, 11.669064748201434], [1.731748285E12, 11.78169014084507], [1.731748334E12, 12.214285714285719], [1.731748293E12, 12.208633093525181], [1.731748289E12, 12.02836879432624], [1.731748248E12, 12.392857142857142], [1.731748375E12, 12.328571428571426], [1.731748297E12, 11.71014492753623], [1.731748256E12, 12.326086956521744], [1.731748383E12, 12.138686131386866], [1.731748252E12, 12.669117647058824], [1.731748379E12, 12.25352112676057], [1.731748338E12, 12.153284671532852], [1.73174826E12, 12.147887323943662], [1.731748387E12, 11.903703703703702], [1.731748346E12, 12.114285714285714], [1.731748342E12, 12.181818181818187], [1.731748301E12, 11.977777777777776], [1.73174835E12, 12.106382978723405], [1.731748309E12, 12.01418439716312], [1.731748305E12, 11.900709219858157], [1.731748264E12, 11.97887323943662], [1.731748391E12, 11.615942028985502], [1.731748356E12, 12.144927536231888], [1.73174827E12, 12.427536231884059], [1.731748229E12, 12.364963503649637], [1.731748225E12, 16.325000000000003], [1.731748397E12, 12.098591549295776], [1.731748311E12, 12.05797101449275], [1.731748233E12, 12.308823529411764], [1.731748405E12, 12.046511627906975], [1.731748319E12, 12.202898550724642], [1.731748401E12, 11.898550724637676], [1.731748315E12, 12.182481751824826], [1.73174836E12, 12.279411764705888], [1.731748274E12, 12.028776978417264], [1.731748323E12, 11.909090909090907], [1.731748368E12, 11.861111111111114], [1.731748282E12, 12.23913043478261], [1.731748364E12, 11.971631205673757], [1.731748278E12, 12.106382978723406], [1.731748237E12, 12.531914893617026], [1.731748372E12, 12.1294964028777], [1.731748286E12, 11.962962962962962], [1.731748245E12, 12.485507246376809], [1.731748241E12, 12.583941605839408], [1.731748327E12, 12.05109489051095], [1.731748249E12, 12.357142857142865], [1.731748335E12, 12.340579710144928], [1.731748331E12, 12.37956204379562], [1.731748376E12, 12.28260869565217], [1.73174829E12, 11.7841726618705], [1.731748339E12, 11.85106382978723], [1.731748384E12, 11.905797101449268], [1.731748298E12, 11.848920863309358], [1.73174838E12, 12.123188405797103], [1.731748294E12, 12.270072992700733], [1.731748253E12, 12.359712230215829], [1.731748388E12, 11.748251748251748], [1.731748302E12, 12.278571428571428], [1.731748261E12, 11.971223021582738], [1.731748257E12, 12.417266187050364], [1.731748343E12, 12.107142857142854], [1.731748265E12, 12.161764705882357], [1.731748351E12, 12.294117647058826], [1.731748347E12, 12.357664233576646], [1.731748392E12, 12.181159420289857], [1.731748306E12, 12.167883211678829]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.731748405E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.007246376811594206, "minX": 1.731748225E12, "maxY": 0.7374999999999996, "series": [{"data": [[1.731748398E12, 0.07971014492753623], [1.731748357E12, 0.04195804195804195], [1.731748271E12, 0.057971014492753624], [1.731748353E12, 0.05882352941176472], [1.731748267E12, 0.06428571428571431], [1.731748312E12, 0.043165467625899276], [1.731748226E12, 0.08783783783783784], [1.731748361E12, 0.1000000000000001], [1.731748275E12, 0.0575539568345324], [1.73174832E12, 0.04347826086956521], [1.731748234E12, 0.042553191489361715], [1.731748316E12, 0.07801418439716312], [1.73174823E12, 0.07801418439716314], [1.731748402E12, 0.09420289855072465], [1.731748324E12, 0.03676470588235295], [1.731748238E12, 0.09420289855072461], [1.731748365E12, 0.17518248175182483], [1.731748279E12, 0.057142857142857134], [1.731748373E12, 0.10000000000000005], [1.731748287E12, 0.07746478873239437], [1.731748369E12, 0.014814814814814824], [1.731748283E12, 0.05072463768115943], [1.731748328E12, 0.03571428571428572], [1.731748242E12, 0.10563380281690142], [1.731748377E12, 0.041958041958041946], [1.731748291E12, 0.05072463768115945], [1.731748336E12, 0.06521739130434785], [1.73174825E12, 0.05185185185185184], [1.731748332E12, 0.06293706293706293], [1.731748246E12, 0.05714285714285716], [1.73174834E12, 0.04379562043795621], [1.731748254E12, 0.09352517985611508], [1.731748381E12, 0.06474820143884896], [1.731748295E12, 0.050724637681159444], [1.731748389E12, 0.05882352941176472], [1.731748303E12, 0.06382978723404258], [1.731748385E12, 0.04411764705882354], [1.731748299E12, 0.05072463768115943], [1.731748344E12, 0.09154929577464789], [1.731748258E12, 0.09352517985611511], [1.731748393E12, 0.03496503496503496], [1.731748307E12, 0.06338028169014083], [1.731748352E12, 0.049295774647887355], [1.731748266E12, 0.02173913043478261], [1.731748348E12, 0.07194244604316546], [1.731748262E12, 0.05755395683453238], [1.731748313E12, 0.03649635036496351], [1.731748227E12, 0.11267605633802816], [1.731748272E12, 0.08571428571428569], [1.731748399E12, 0.07246376811594206], [1.731748268E12, 0.051470588235294136], [1.731748395E12, 0.09285714285714285], [1.731748354E12, 0.050000000000000024], [1.731748276E12, 0.07142857142857142], [1.731748403E12, 0.021897810218978114], [1.731748362E12, 0.09352517985611508], [1.731748358E12, 0.0746268656716418], [1.731748317E12, 0.04347826086956521], [1.731748231E12, 0.08571428571428569], [1.731748366E12, 0.10071942446043164], [1.731748325E12, 0.05673758865248226], [1.731748239E12, 0.09285714285714283], [1.731748321E12, 0.07194244604316545], [1.731748235E12, 0.06474820143884895], [1.73174828E12, 0.028985507246376812], [1.731748329E12, 0.05839416058394162], [1.731748243E12, 0.10144927536231886], [1.731748288E12, 0.05147058823529412], [1.731748284E12, 0.04316546762589929], [1.73174837E12, 0.03546099290780143], [1.731748292E12, 0.10714285714285715], [1.731748378E12, 0.07462686567164178], [1.731748374E12, 0.072992700729927], [1.731748333E12, 0.043795620437956206], [1.731748247E12, 0.06569343065693431], [1.731748382E12, 0.07801418439716312], [1.731748341E12, 0.06250000000000001], [1.731748255E12, 0.07142857142857141], [1.731748337E12, 0.07194244604316548], [1.731748251E12, 0.09790209790209796], [1.731748296E12, 0.06993006993006992], [1.731748345E12, 0.07913669064748201], [1.731748259E12, 0.06569343065693434], [1.731748304E12, 0.06617647058823531], [1.7317483E12, 0.07142857142857145], [1.731748386E12, 0.07638888888888887], [1.731748308E12, 0.08088235294117649], [1.731748394E12, 0.051851851851851885], [1.73174839E12, 0.05714285714285715], [1.731748349E12, 0.028985507246376815], [1.731748263E12, 0.057971014492753645], [1.731748228E12, 0.11347517730496458], [1.731748355E12, 0.06474820143884893], [1.7317484E12, 0.10791366906474821], [1.731748314E12, 0.11347517730496451], [1.731748396E12, 0.04347826086956521], [1.73174831E12, 0.07857142857142857], [1.731748269E12, 0.09859154929577472], [1.731748404E12, 0.04195804195804197], [1.731748318E12, 0.11510791366906475], [1.731748277E12, 0.05882352941176472], [1.731748273E12, 0.05035971223021584], [1.731748232E12, 0.08759124087591243], [1.731748359E12, 0.09090909090909093], [1.731748281E12, 0.07194244604316546], [1.73174824E12, 0.08633093525179854], [1.731748367E12, 0.029629629629629655], [1.731748236E12, 0.124087591240876], [1.731748363E12, 0.07194244604316549], [1.731748322E12, 0.05797101449275364], [1.731748244E12, 0.0785714285714286], [1.731748371E12, 0.05072463768115942], [1.73174833E12, 0.05714285714285714], [1.731748326E12, 0.07194244604316546], [1.731748285E12, 0.08450704225352114], [1.731748334E12, 0.05000000000000002], [1.731748293E12, 0.05755395683453239], [1.731748289E12, 0.08510638297872342], [1.731748248E12, 0.042857142857142844], [1.731748375E12, 0.10000000000000005], [1.731748297E12, 0.03623188405797101], [1.731748256E12, 0.07971014492753621], [1.731748383E12, 0.05839416058394162], [1.731748252E12, 0.05882352941176472], [1.731748379E12, 0.049295774647887335], [1.731748338E12, 0.072992700729927], [1.73174826E12, 0.06338028169014087], [1.731748387E12, 0.0814814814814815], [1.731748346E12, 0.03571428571428571], [1.731748342E12, 0.022727272727272742], [1.731748301E12, 0.05925925925925928], [1.73174835E12, 0.04964539007092198], [1.731748309E12, 0.04964539007092198], [1.731748305E12, 0.04964539007092201], [1.731748264E12, 0.07746478873239437], [1.731748391E12, 0.04347826086956521], [1.731748356E12, 0.02173913043478262], [1.73174827E12, 0.007246376811594206], [1.731748229E12, 0.13868613138686137], [1.731748225E12, 0.7374999999999996], [1.731748397E12, 0.09154929577464786], [1.731748311E12, 0.05797101449275364], [1.731748233E12, 0.10294117647058827], [1.731748405E12, 0.06976744186046513], [1.731748319E12, 0.07246376811594203], [1.731748401E12, 0.08695652173913043], [1.731748315E12, 0.10218978102189784], [1.73174836E12, 0.029411764705882363], [1.731748274E12, 0.09352517985611511], [1.731748323E12, 0.02097902097902099], [1.731748368E12, 0.07638888888888888], [1.731748282E12, 0.07246376811594203], [1.731748364E12, 0.07801418439716312], [1.731748278E12, 0.09219858156028367], [1.731748237E12, 0.04255319148936171], [1.731748372E12, 0.050359712230215854], [1.731748286E12, 0.0888888888888889], [1.731748245E12, 0.07246376811594205], [1.731748241E12, 0.05109489051094893], [1.731748327E12, 0.05109489051094893], [1.731748249E12, 0.07857142857142858], [1.731748335E12, 0.05072463768115944], [1.731748331E12, 0.04379562043795623], [1.731748376E12, 0.06521739130434785], [1.73174829E12, 0.11510791366906485], [1.731748339E12, 0.049645390070922], [1.731748384E12, 0.07971014492753623], [1.731748298E12, 0.04316546762589927], [1.73174838E12, 0.08695652173913042], [1.731748294E12, 0.014598540145985406], [1.731748253E12, 0.06474820143884892], [1.731748388E12, 0.034965034965034975], [1.731748302E12, 0.03571428571428572], [1.731748261E12, 0.10791366906474818], [1.731748257E12, 0.07194244604316542], [1.731748343E12, 0.03571428571428572], [1.731748265E12, 0.0661764705882353], [1.731748351E12, 0.029411764705882353], [1.731748347E12, 0.124087591240876], [1.731748392E12, 0.021739130434782622], [1.731748306E12, 0.03649635036496351]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.731748405E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 11.0, "minX": 1.731748225E12, "maxY": 34.0, "series": [{"data": [[1.731748398E12, 15.0], [1.731748357E12, 15.0], [1.731748271E12, 22.0], [1.731748353E12, 24.0], [1.731748267E12, 14.0], [1.731748312E12, 14.0], [1.731748226E12, 24.0], [1.731748361E12, 17.0], [1.731748275E12, 15.0], [1.73174832E12, 16.0], [1.731748234E12, 16.0], [1.731748316E12, 15.0], [1.73174823E12, 26.0], [1.731748402E12, 14.0], [1.731748324E12, 15.0], [1.731748238E12, 15.0], [1.731748365E12, 15.0], [1.731748279E12, 15.0], [1.731748373E12, 15.0], [1.731748287E12, 15.0], [1.731748369E12, 15.0], [1.731748283E12, 19.0], [1.731748328E12, 15.0], [1.731748242E12, 15.0], [1.731748377E12, 15.0], [1.731748291E12, 15.0], [1.731748336E12, 15.0], [1.73174825E12, 16.0], [1.731748332E12, 15.0], [1.731748246E12, 15.0], [1.73174834E12, 15.0], [1.731748254E12, 15.0], [1.731748381E12, 15.0], [1.731748295E12, 16.0], [1.731748389E12, 14.0], [1.731748303E12, 18.0], [1.731748385E12, 15.0], [1.731748299E12, 15.0], [1.731748344E12, 17.0], [1.731748258E12, 15.0], [1.731748393E12, 15.0], [1.731748307E12, 15.0], [1.731748352E12, 16.0], [1.731748266E12, 17.0], [1.731748348E12, 18.0], [1.731748262E12, 16.0], [1.731748313E12, 15.0], [1.731748227E12, 25.0], [1.731748272E12, 15.0], [1.731748399E12, 14.0], [1.731748268E12, 14.0], [1.731748395E12, 15.0], [1.731748354E12, 17.0], [1.731748276E12, 20.0], [1.731748403E12, 15.0], [1.731748362E12, 14.0], [1.731748358E12, 15.0], [1.731748317E12, 17.0], [1.731748231E12, 15.0], [1.731748366E12, 15.0], [1.731748325E12, 14.0], [1.731748239E12, 17.0], [1.731748321E12, 16.0], [1.731748235E12, 16.0], [1.73174828E12, 15.0], [1.731748329E12, 15.0], [1.731748243E12, 15.0], [1.731748288E12, 15.0], [1.731748284E12, 16.0], [1.73174837E12, 15.0], [1.731748292E12, 16.0], [1.731748378E12, 15.0], [1.731748374E12, 17.0], [1.731748333E12, 15.0], [1.731748247E12, 15.0], [1.731748382E12, 15.0], [1.731748341E12, 15.0], [1.731748255E12, 15.0], [1.731748337E12, 15.0], [1.731748251E12, 20.0], [1.731748296E12, 15.0], [1.731748345E12, 15.0], [1.731748259E12, 15.0], [1.731748304E12, 15.0], [1.7317483E12, 15.0], [1.731748386E12, 14.0], [1.731748308E12, 15.0], [1.731748394E12, 18.0], [1.73174839E12, 18.0], [1.731748349E12, 15.0], [1.731748263E12, 15.0], [1.731748228E12, 16.0], [1.731748355E12, 14.0], [1.7317484E12, 15.0], [1.731748314E12, 16.0], [1.731748396E12, 15.0], [1.73174831E12, 16.0], [1.731748269E12, 17.0], [1.731748404E12, 14.0], [1.731748318E12, 15.0], [1.731748277E12, 16.0], [1.731748273E12, 18.0], [1.731748232E12, 15.0], [1.731748359E12, 15.0], [1.731748281E12, 15.0], [1.73174824E12, 16.0], [1.731748367E12, 16.0], [1.731748236E12, 16.0], [1.731748363E12, 16.0], [1.731748322E12, 19.0], [1.731748244E12, 21.0], [1.731748371E12, 15.0], [1.73174833E12, 15.0], [1.731748326E12, 14.0], [1.731748285E12, 15.0], [1.731748334E12, 15.0], [1.731748293E12, 24.0], [1.731748289E12, 16.0], [1.731748248E12, 16.0], [1.731748375E12, 21.0], [1.731748297E12, 17.0], [1.731748256E12, 15.0], [1.731748383E12, 19.0], [1.731748252E12, 16.0], [1.731748379E12, 15.0], [1.731748338E12, 16.0], [1.73174826E12, 17.0], [1.731748387E12, 15.0], [1.731748346E12, 17.0], [1.731748342E12, 14.0], [1.731748301E12, 21.0], [1.73174835E12, 15.0], [1.731748309E12, 19.0], [1.731748305E12, 15.0], [1.731748264E12, 16.0], [1.731748391E12, 14.0], [1.731748356E12, 14.0], [1.73174827E12, 15.0], [1.731748229E12, 16.0], [1.731748225E12, 34.0], [1.731748397E12, 16.0], [1.731748311E12, 15.0], [1.731748233E12, 16.0], [1.731748405E12, 13.0], [1.731748319E12, 16.0], [1.731748401E12, 15.0], [1.731748315E12, 16.0], [1.73174836E12, 15.0], [1.731748274E12, 15.0], [1.731748323E12, 18.0], [1.731748368E12, 14.0], [1.731748282E12, 15.0], [1.731748364E12, 15.0], [1.731748278E12, 15.0], [1.731748237E12, 17.0], [1.731748372E12, 15.0], [1.731748286E12, 15.0], [1.731748245E12, 15.0], [1.731748241E12, 16.0], [1.731748327E12, 15.0], [1.731748249E12, 15.0], [1.731748335E12, 15.0], [1.731748331E12, 15.0], [1.731748376E12, 15.0], [1.73174829E12, 15.0], [1.731748339E12, 16.0], [1.731748384E12, 14.0], [1.731748298E12, 15.0], [1.73174838E12, 15.0], [1.731748294E12, 16.0], [1.731748253E12, 20.0], [1.731748388E12, 15.0], [1.731748302E12, 16.0], [1.731748261E12, 15.0], [1.731748257E12, 16.0], [1.731748343E12, 19.0], [1.731748265E12, 15.0], [1.731748351E12, 15.0], [1.731748347E12, 26.0], [1.731748392E12, 14.0], [1.731748306E12, 16.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.731748398E12, 13.0], [1.731748357E12, 13.0], [1.731748271E12, 14.0], [1.731748353E12, 14.0], [1.731748267E12, 13.0], [1.731748312E12, 13.0], [1.731748226E12, 15.0], [1.731748361E12, 13.0], [1.731748275E12, 13.0], [1.73174832E12, 14.0], [1.731748234E12, 14.0], [1.731748316E12, 14.0], [1.73174823E12, 14.0], [1.731748402E12, 13.0], [1.731748324E12, 13.0], [1.731748238E12, 14.0], [1.731748365E12, 13.799999999999997], [1.731748279E12, 13.0], [1.731748373E12, 13.0], [1.731748287E12, 13.0], [1.731748369E12, 13.0], [1.731748283E12, 14.0], [1.731748328E12, 13.0], [1.731748242E12, 14.0], [1.731748377E12, 13.0], [1.731748291E12, 13.0], [1.731748336E12, 14.0], [1.73174825E12, 14.0], [1.731748332E12, 13.0], [1.731748246E12, 14.0], [1.73174834E12, 13.0], [1.731748254E12, 13.0], [1.731748381E12, 13.0], [1.731748295E12, 13.0], [1.731748389E12, 13.0], [1.731748303E12, 13.799999999999997], [1.731748385E12, 13.0], [1.731748299E12, 13.0], [1.731748344E12, 13.0], [1.731748258E12, 13.799999999999997], [1.731748393E12, 13.0], [1.731748307E12, 13.0], [1.731748352E12, 13.0], [1.731748266E12, 14.0], [1.731748348E12, 14.0], [1.731748262E12, 13.0], [1.731748313E12, 13.0], [1.731748227E12, 15.0], [1.731748272E12, 14.0], [1.731748399E12, 13.0], [1.731748268E12, 13.0], [1.731748395E12, 13.299999999999997], [1.731748354E12, 14.0], [1.731748276E12, 13.700000000000003], [1.731748403E12, 13.0], [1.731748362E12, 13.0], [1.731748358E12, 13.0], [1.731748317E12, 13.0], [1.731748231E12, 14.0], [1.731748366E12, 13.0], [1.731748325E12, 13.0], [1.731748239E12, 14.0], [1.731748321E12, 14.0], [1.731748235E12, 13.400000000000006], [1.73174828E12, 14.0], [1.731748329E12, 13.0], [1.731748243E12, 14.0], [1.731748288E12, 14.0], [1.731748284E12, 13.0], [1.73174837E12, 13.0], [1.731748292E12, 13.0], [1.731748378E12, 14.0], [1.731748374E12, 14.0], [1.731748333E12, 14.0], [1.731748247E12, 13.799999999999997], [1.731748382E12, 13.0], [1.731748341E12, 13.0], [1.731748255E12, 13.0], [1.731748337E12, 13.100000000000009], [1.731748251E12, 14.0], [1.731748296E12, 13.0], [1.731748345E12, 13.0], [1.731748259E12, 13.0], [1.731748304E12, 13.0], [1.7317483E12, 13.0], [1.731748386E12, 13.0], [1.731748308E12, 13.0], [1.731748394E12, 14.0], [1.73174839E12, 13.0], [1.731748349E12, 14.0], [1.731748263E12, 13.0], [1.731748228E12, 14.0], [1.731748355E12, 13.0], [1.7317484E12, 14.0], [1.731748314E12, 13.0], [1.731748396E12, 13.400000000000006], [1.73174831E12, 13.0], [1.731748269E12, 14.0], [1.731748404E12, 13.0], [1.731748318E12, 14.0], [1.731748277E12, 14.0], [1.731748273E12, 14.0], [1.731748232E12, 14.0], [1.731748359E12, 13.0], [1.731748281E12, 13.0], [1.73174824E12, 14.0], [1.731748367E12, 13.0], [1.731748236E12, 13.0], [1.731748363E12, 14.0], [1.731748322E12, 14.0], [1.731748244E12, 14.0], [1.731748371E12, 13.0], [1.73174833E12, 14.0], [1.731748326E12, 13.0], [1.731748285E12, 13.0], [1.731748334E12, 13.0], [1.731748293E12, 13.0], [1.731748289E12, 14.0], [1.731748248E12, 14.0], [1.731748375E12, 14.0], [1.731748297E12, 13.0], [1.731748256E12, 14.0], [1.731748383E12, 13.0], [1.731748252E12, 14.0], [1.731748379E12, 14.0], [1.731748338E12, 13.0], [1.73174826E12, 14.0], [1.731748387E12, 13.0], [1.731748346E12, 13.0], [1.731748342E12, 13.0], [1.731748301E12, 14.0], [1.73174835E12, 13.0], [1.731748309E12, 13.0], [1.731748305E12, 13.0], [1.731748264E12, 13.0], [1.731748391E12, 13.0], [1.731748356E12, 13.0], [1.73174827E12, 13.0], [1.731748229E12, 14.0], [1.731748225E12, 23.200000000000003], [1.731748397E12, 14.0], [1.731748311E12, 13.0], [1.731748233E12, 14.0], [1.731748405E12, 13.0], [1.731748319E12, 13.900000000000006], [1.731748401E12, 13.0], [1.731748315E12, 14.0], [1.73174836E12, 13.0], [1.731748274E12, 13.799999999999997], [1.731748323E12, 13.0], [1.731748368E12, 13.0], [1.731748282E12, 13.0], [1.731748364E12, 13.0], [1.731748278E12, 14.0], [1.731748237E12, 14.0], [1.731748372E12, 13.600000000000009], [1.731748286E12, 13.0], [1.731748245E12, 14.0], [1.731748241E12, 14.0], [1.731748327E12, 13.0], [1.731748249E12, 14.0], [1.731748335E12, 14.0], [1.731748331E12, 13.0], [1.731748376E12, 14.0], [1.73174829E12, 13.0], [1.731748339E12, 13.0], [1.731748384E12, 13.0], [1.731748298E12, 13.0], [1.73174838E12, 14.0], [1.731748294E12, 13.600000000000009], [1.731748253E12, 14.0], [1.731748388E12, 13.0], [1.731748302E12, 13.0], [1.731748261E12, 14.0], [1.731748257E12, 14.0], [1.731748343E12, 14.0], [1.731748265E12, 13.0], [1.731748351E12, 13.0], [1.731748347E12, 14.0], [1.731748392E12, 13.0], [1.731748306E12, 13.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.731748398E12, 15.0], [1.731748357E12, 14.739999999999995], [1.731748271E12, 21.309999999999988], [1.731748353E12, 21.75999999999999], [1.731748267E12, 14.0], [1.731748312E12, 14.0], [1.731748226E12, 22.149999999999977], [1.731748361E12, 16.769999999999996], [1.731748275E12, 15.0], [1.73174832E12, 15.709999999999994], [1.731748234E12, 16.0], [1.731748316E12, 15.0], [1.73174823E12, 23.67999999999995], [1.731748402E12, 14.0], [1.731748324E12, 14.719999999999999], [1.731748238E12, 15.0], [1.731748365E12, 15.0], [1.731748279E12, 15.0], [1.731748373E12, 14.810000000000002], [1.731748287E12, 14.75], [1.731748369E12, 14.780000000000001], [1.731748283E12, 18.159999999999968], [1.731748328E12, 14.739999999999995], [1.731748242E12, 15.0], [1.731748377E12, 14.739999999999995], [1.731748291E12, 15.0], [1.731748336E12, 15.0], [1.73174825E12, 15.760000000000005], [1.731748332E12, 15.0], [1.731748246E12, 15.0], [1.73174834E12, 14.789999999999992], [1.731748254E12, 15.0], [1.731748381E12, 15.0], [1.731748295E12, 15.739999999999995], [1.731748389E12, 14.0], [1.731748303E12, 17.78], [1.731748385E12, 14.730000000000004], [1.731748299E12, 14.719999999999999], [1.731748344E12, 16.539999999999992], [1.731748258E12, 14.780000000000001], [1.731748393E12, 14.739999999999995], [1.731748307E12, 14.75], [1.731748352E12, 15.75], [1.731748266E12, 16.689999999999998], [1.731748348E12, 17.52000000000001], [1.731748262E12, 15.719999999999999], [1.731748313E12, 15.0], [1.731748227E12, 23.039999999999992], [1.731748272E12, 14.810000000000002], [1.731748399E12, 14.0], [1.731748268E12, 14.0], [1.731748395E12, 14.730000000000004], [1.731748354E12, 16.75], [1.731748276E12, 18.84999999999998], [1.731748403E12, 15.0], [1.731748362E12, 14.0], [1.731748358E12, 15.0], [1.731748317E12, 16.159999999999997], [1.731748231E12, 15.0], [1.731748366E12, 15.0], [1.731748325E12, 14.0], [1.731748239E12, 16.52000000000001], [1.731748321E12, 15.780000000000001], [1.731748235E12, 15.47999999999999], [1.73174828E12, 14.730000000000004], [1.731748329E12, 15.0], [1.731748243E12, 15.0], [1.731748288E12, 14.699999999999989], [1.731748284E12, 15.699999999999989], [1.73174837E12, 15.0], [1.731748292E12, 15.769999999999996], [1.731748378E12, 14.739999999999995], [1.731748374E12, 16.72], [1.731748333E12, 15.0], [1.731748247E12, 14.780000000000001], [1.731748382E12, 15.0], [1.731748341E12, 14.709999999999994], [1.731748255E12, 14.689999999999998], [1.731748337E12, 15.0], [1.731748251E12, 19.47999999999999], [1.731748296E12, 14.739999999999995], [1.731748345E12, 14.719999999999999], [1.731748259E12, 14.709999999999994], [1.731748304E12, 14.780000000000001], [1.7317483E12, 14.75], [1.731748386E12, 14.0], [1.731748308E12, 14.829999999999998], [1.731748394E12, 17.579999999999984], [1.73174839E12, 17.52000000000001], [1.731748349E12, 15.0], [1.731748263E12, 15.0], [1.731748228E12, 15.739999999999995], [1.731748355E12, 14.0], [1.7317484E12, 14.709999999999994], [1.731748314E12, 15.760000000000005], [1.731748396E12, 15.0], [1.73174831E12, 15.769999999999996], [1.731748269E12, 16.5], [1.731748404E12, 14.0], [1.731748318E12, 15.0], [1.731748277E12, 15.719999999999999], [1.731748273E12, 17.399999999999977], [1.731748232E12, 15.0], [1.731748359E12, 14.739999999999995], [1.731748281E12, 15.0], [1.73174824E12, 16.0], [1.731748367E12, 15.439999999999998], [1.731748236E12, 16.0], [1.731748363E12, 16.0], [1.731748322E12, 18.120000000000005], [1.731748244E12, 19.839999999999975], [1.731748371E12, 14.699999999999989], [1.73174833E12, 15.0], [1.731748326E12, 14.0], [1.731748285E12, 14.769999999999996], [1.731748334E12, 15.0], [1.731748293E12, 22.25], [1.731748289E12, 15.760000000000005], [1.731748248E12, 15.439999999999998], [1.731748375E12, 20.309999999999988], [1.731748297E12, 16.599999999999994], [1.731748256E12, 15.0], [1.731748383E12, 18.04000000000002], [1.731748252E12, 15.719999999999999], [1.731748379E12, 15.0], [1.731748338E12, 15.719999999999999], [1.73174826E12, 16.5], [1.731748387E12, 14.789999999999992], [1.731748346E12, 16.219999999999985], [1.731748342E12, 14.0], [1.731748301E12, 20.099999999999966], [1.73174835E12, 15.0], [1.731748309E12, 17.799999999999955], [1.731748305E12, 15.0], [1.731748264E12, 15.5], [1.731748391E12, 14.0], [1.731748356E12, 14.0], [1.73174827E12, 15.0], [1.731748229E12, 15.780000000000001], [1.731748225E12, 34.0], [1.731748397E12, 15.75], [1.731748311E12, 15.0], [1.731748233E12, 16.0], [1.731748405E12, 13.0], [1.731748319E12, 16.0], [1.731748401E12, 14.769999999999996], [1.731748315E12, 16.0], [1.73174836E12, 14.719999999999999], [1.731748274E12, 15.0], [1.731748323E12, 17.72], [1.731748368E12, 14.0], [1.731748282E12, 15.0], [1.731748364E12, 15.0], [1.731748278E12, 15.0], [1.731748237E12, 16.360000000000014], [1.731748372E12, 15.0], [1.731748286E12, 14.789999999999992], [1.731748245E12, 15.0], [1.731748241E12, 16.0], [1.731748327E12, 14.739999999999995], [1.731748249E12, 15.0], [1.731748335E12, 15.0], [1.731748331E12, 14.75], [1.731748376E12, 15.0], [1.73174829E12, 14.819999999999993], [1.731748339E12, 15.52000000000001], [1.731748384E12, 14.0], [1.731748298E12, 14.730000000000004], [1.73174838E12, 15.0], [1.731748294E12, 15.760000000000005], [1.731748253E12, 20.0], [1.731748388E12, 15.0], [1.731748302E12, 15.689999999999998], [1.731748261E12, 14.799999999999997], [1.731748257E12, 16.0], [1.731748343E12, 18.309999999999988], [1.731748265E12, 14.789999999999992], [1.731748351E12, 15.0], [1.731748347E12, 23.80000000000001], [1.731748392E12, 14.0], [1.731748306E12, 15.709999999999994]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.731748398E12, 14.0], [1.731748357E12, 13.0], [1.731748271E12, 14.0], [1.731748353E12, 14.0], [1.731748267E12, 13.949999999999989], [1.731748312E12, 14.0], [1.731748226E12, 16.0], [1.731748361E12, 13.849999999999994], [1.731748275E12, 14.0], [1.73174832E12, 14.0], [1.731748234E12, 14.449999999999989], [1.731748316E12, 14.0], [1.73174823E12, 14.549999999999997], [1.731748402E12, 14.0], [1.731748324E12, 13.0], [1.731748238E12, 14.0], [1.731748365E12, 14.0], [1.731748279E12, 14.0], [1.731748373E12, 14.0], [1.731748287E12, 14.0], [1.731748369E12, 14.0], [1.731748283E12, 15.0], [1.731748328E12, 13.0], [1.731748242E12, 14.0], [1.731748377E12, 14.0], [1.731748291E12, 14.0], [1.731748336E12, 14.0], [1.73174825E12, 14.0], [1.731748332E12, 14.0], [1.731748246E12, 14.0], [1.73174834E12, 14.0], [1.731748254E12, 14.0], [1.731748381E12, 14.0], [1.731748295E12, 14.0], [1.731748389E12, 14.0], [1.731748303E12, 14.0], [1.731748385E12, 13.0], [1.731748299E12, 14.0], [1.731748344E12, 14.0], [1.731748258E12, 14.0], [1.731748393E12, 14.0], [1.731748307E12, 13.75], [1.731748352E12, 14.0], [1.731748266E12, 14.0], [1.731748348E12, 14.0], [1.731748262E12, 14.0], [1.731748313E12, 14.0], [1.731748227E12, 16.0], [1.731748272E12, 14.0], [1.731748399E12, 14.0], [1.731748268E12, 14.0], [1.731748395E12, 14.0], [1.731748354E12, 14.0], [1.731748276E12, 14.0], [1.731748403E12, 13.0], [1.731748362E12, 14.0], [1.731748358E12, 14.0], [1.731748317E12, 13.0], [1.731748231E12, 14.0], [1.731748366E12, 14.0], [1.731748325E12, 13.0], [1.731748239E12, 14.0], [1.731748321E12, 14.0], [1.731748235E12, 14.0], [1.73174828E12, 14.0], [1.731748329E12, 14.0], [1.731748243E12, 14.0], [1.731748288E12, 14.0], [1.731748284E12, 14.0], [1.73174837E12, 13.799999999999997], [1.731748292E12, 14.0], [1.731748378E12, 14.0], [1.731748374E12, 14.0], [1.731748333E12, 14.0], [1.731748247E12, 14.0], [1.731748382E12, 14.0], [1.731748341E12, 14.0], [1.731748255E12, 14.0], [1.731748337E12, 14.0], [1.731748251E12, 14.0], [1.731748296E12, 14.0], [1.731748345E12, 13.599999999999994], [1.731748259E12, 14.0], [1.731748304E12, 14.0], [1.7317483E12, 13.0], [1.731748386E12, 13.0], [1.731748308E12, 14.0], [1.731748394E12, 14.0], [1.73174839E12, 13.0], [1.731748349E12, 14.0], [1.731748263E12, 14.0], [1.731748228E12, 14.0], [1.731748355E12, 14.0], [1.7317484E12, 14.0], [1.731748314E12, 14.0], [1.731748396E12, 14.0], [1.73174831E12, 13.0], [1.731748269E12, 14.0], [1.731748404E12, 14.0], [1.731748318E12, 14.0], [1.731748277E12, 14.0], [1.731748273E12, 14.0], [1.731748232E12, 14.0], [1.731748359E12, 14.0], [1.731748281E12, 14.0], [1.73174824E12, 14.0], [1.731748367E12, 14.0], [1.731748236E12, 14.0], [1.731748363E12, 14.0], [1.731748322E12, 14.0], [1.731748244E12, 14.549999999999997], [1.731748371E12, 14.0], [1.73174833E12, 14.0], [1.731748326E12, 14.0], [1.731748285E12, 14.0], [1.731748334E12, 14.0], [1.731748293E12, 14.0], [1.731748289E12, 14.0], [1.731748248E12, 14.0], [1.731748375E12, 14.0], [1.731748297E12, 13.0], [1.731748256E12, 14.0], [1.731748383E12, 14.0], [1.731748252E12, 14.0], [1.731748379E12, 14.0], [1.731748338E12, 13.0], [1.73174826E12, 14.0], [1.731748387E12, 14.0], [1.731748346E12, 14.0], [1.731748342E12, 13.0], [1.731748301E12, 14.099999999999994], [1.73174835E12, 14.0], [1.731748309E12, 14.0], [1.731748305E12, 13.0], [1.731748264E12, 13.0], [1.731748391E12, 14.0], [1.731748356E12, 13.0], [1.73174827E12, 13.0], [1.731748229E12, 15.0], [1.731748225E12, 28.799999999999983], [1.731748397E12, 14.0], [1.731748311E12, 13.799999999999997], [1.731748233E12, 14.0], [1.731748405E12, 13.0], [1.731748319E12, 14.0], [1.731748401E12, 14.0], [1.731748315E12, 14.0], [1.73174836E12, 13.0], [1.731748274E12, 14.0], [1.731748323E12, 14.0], [1.731748368E12, 14.0], [1.731748282E12, 14.0], [1.731748364E12, 14.0], [1.731748278E12, 14.0], [1.731748237E12, 14.0], [1.731748372E12, 14.0], [1.731748286E12, 13.0], [1.731748245E12, 14.0], [1.731748241E12, 14.0], [1.731748327E12, 13.699999999999989], [1.731748249E12, 14.849999999999994], [1.731748335E12, 14.0], [1.731748331E12, 14.0], [1.731748376E12, 14.0], [1.73174829E12, 14.0], [1.731748339E12, 14.0], [1.731748384E12, 13.0], [1.731748298E12, 13.0], [1.73174838E12, 14.0], [1.731748294E12, 14.0], [1.731748253E12, 15.0], [1.731748388E12, 13.0], [1.731748302E12, 14.0], [1.731748261E12, 14.0], [1.731748257E12, 14.0], [1.731748343E12, 14.0], [1.731748265E12, 14.0], [1.731748351E12, 14.0], [1.731748347E12, 14.0], [1.731748392E12, 13.0], [1.731748306E12, 13.549999999999997]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.731748398E12, 12.0], [1.731748357E12, 12.0], [1.731748271E12, 12.0], [1.731748353E12, 12.0], [1.731748267E12, 12.0], [1.731748312E12, 12.0], [1.731748226E12, 12.0], [1.731748361E12, 12.0], [1.731748275E12, 12.0], [1.73174832E12, 12.0], [1.731748234E12, 12.0], [1.731748316E12, 12.0], [1.73174823E12, 12.0], [1.731748402E12, 12.0], [1.731748324E12, 12.0], [1.731748238E12, 12.0], [1.731748365E12, 12.0], [1.731748279E12, 12.0], [1.731748373E12, 12.0], [1.731748287E12, 12.0], [1.731748369E12, 12.0], [1.731748283E12, 12.0], [1.731748328E12, 12.0], [1.731748242E12, 12.0], [1.731748377E12, 12.0], [1.731748291E12, 12.0], [1.731748336E12, 12.0], [1.73174825E12, 12.0], [1.731748332E12, 12.0], [1.731748246E12, 12.0], [1.73174834E12, 12.0], [1.731748254E12, 12.0], [1.731748381E12, 12.0], [1.731748295E12, 12.0], [1.731748389E12, 12.0], [1.731748303E12, 12.0], [1.731748385E12, 12.0], [1.731748299E12, 12.0], [1.731748344E12, 12.0], [1.731748258E12, 12.0], [1.731748393E12, 12.0], [1.731748307E12, 12.0], [1.731748352E12, 12.0], [1.731748266E12, 12.0], [1.731748348E12, 12.0], [1.731748262E12, 12.0], [1.731748313E12, 12.0], [1.731748227E12, 12.0], [1.731748272E12, 12.0], [1.731748399E12, 12.0], [1.731748268E12, 12.0], [1.731748395E12, 12.0], [1.731748354E12, 12.0], [1.731748276E12, 12.0], [1.731748403E12, 12.0], [1.731748362E12, 12.0], [1.731748358E12, 12.0], [1.731748317E12, 12.0], [1.731748231E12, 12.0], [1.731748366E12, 12.0], [1.731748325E12, 12.0], [1.731748239E12, 12.0], [1.731748321E12, 12.0], [1.731748235E12, 12.0], [1.73174828E12, 12.0], [1.731748329E12, 12.0], [1.731748243E12, 12.0], [1.731748288E12, 12.0], [1.731748284E12, 12.0], [1.73174837E12, 12.0], [1.731748292E12, 12.0], [1.731748378E12, 12.0], [1.731748374E12, 12.0], [1.731748333E12, 12.0], [1.731748247E12, 12.0], [1.731748382E12, 12.0], [1.731748341E12, 12.0], [1.731748255E12, 12.0], [1.731748337E12, 12.0], [1.731748251E12, 12.0], [1.731748296E12, 12.0], [1.731748345E12, 12.0], [1.731748259E12, 12.0], [1.731748304E12, 12.0], [1.7317483E12, 12.0], [1.731748386E12, 12.0], [1.731748308E12, 12.0], [1.731748394E12, 12.0], [1.73174839E12, 12.0], [1.731748349E12, 12.0], [1.731748263E12, 12.0], [1.731748228E12, 12.0], [1.731748355E12, 12.0], [1.7317484E12, 12.0], [1.731748314E12, 12.0], [1.731748396E12, 12.0], [1.73174831E12, 12.0], [1.731748269E12, 12.0], [1.731748404E12, 12.0], [1.731748318E12, 12.0], [1.731748277E12, 12.0], [1.731748273E12, 12.0], [1.731748232E12, 12.0], [1.731748359E12, 12.0], [1.731748281E12, 12.0], [1.73174824E12, 12.0], [1.731748367E12, 12.0], [1.731748236E12, 12.0], [1.731748363E12, 12.0], [1.731748322E12, 12.0], [1.731748244E12, 12.0], [1.731748371E12, 12.0], [1.73174833E12, 12.0], [1.731748326E12, 12.0], [1.731748285E12, 12.0], [1.731748334E12, 12.0], [1.731748293E12, 12.0], [1.731748289E12, 12.0], [1.731748248E12, 12.0], [1.731748375E12, 12.0], [1.731748297E12, 12.0], [1.731748256E12, 12.0], [1.731748383E12, 12.0], [1.731748252E12, 12.0], [1.731748379E12, 12.0], [1.731748338E12, 12.0], [1.73174826E12, 12.0], [1.731748387E12, 12.0], [1.731748346E12, 12.0], [1.731748342E12, 12.0], [1.731748301E12, 12.0], [1.73174835E12, 12.0], [1.731748309E12, 12.0], [1.731748305E12, 12.0], [1.731748264E12, 12.0], [1.731748391E12, 12.0], [1.731748356E12, 12.0], [1.73174827E12, 12.0], [1.731748229E12, 12.0], [1.731748225E12, 13.0], [1.731748397E12, 12.0], [1.731748311E12, 12.0], [1.731748233E12, 12.0], [1.731748405E12, 12.0], [1.731748319E12, 12.0], [1.731748401E12, 12.0], [1.731748315E12, 12.0], [1.73174836E12, 12.0], [1.731748274E12, 12.0], [1.731748323E12, 11.0], [1.731748368E12, 12.0], [1.731748282E12, 12.0], [1.731748364E12, 12.0], [1.731748278E12, 12.0], [1.731748237E12, 12.0], [1.731748372E12, 12.0], [1.731748286E12, 12.0], [1.731748245E12, 12.0], [1.731748241E12, 12.0], [1.731748327E12, 12.0], [1.731748249E12, 12.0], [1.731748335E12, 12.0], [1.731748331E12, 12.0], [1.731748376E12, 12.0], [1.73174829E12, 12.0], [1.731748339E12, 12.0], [1.731748384E12, 12.0], [1.731748298E12, 12.0], [1.73174838E12, 12.0], [1.731748294E12, 12.0], [1.731748253E12, 12.0], [1.731748388E12, 12.0], [1.731748302E12, 12.0], [1.731748261E12, 12.0], [1.731748257E12, 12.0], [1.731748343E12, 12.0], [1.731748265E12, 12.0], [1.731748351E12, 12.0], [1.731748347E12, 12.0], [1.731748392E12, 12.0], [1.731748306E12, 12.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.731748398E12, 13.0], [1.731748357E12, 13.0], [1.731748271E12, 13.0], [1.731748353E12, 13.0], [1.731748267E12, 13.0], [1.731748312E12, 13.0], [1.731748226E12, 13.0], [1.731748361E12, 13.0], [1.731748275E12, 13.0], [1.73174832E12, 13.0], [1.731748234E12, 13.0], [1.731748316E12, 13.0], [1.73174823E12, 13.0], [1.731748402E12, 12.0], [1.731748324E12, 12.0], [1.731748238E12, 13.0], [1.731748365E12, 13.0], [1.731748279E12, 13.0], [1.731748373E12, 13.0], [1.731748287E12, 13.0], [1.731748369E12, 13.0], [1.731748283E12, 13.0], [1.731748328E12, 13.0], [1.731748242E12, 13.0], [1.731748377E12, 13.0], [1.731748291E12, 13.0], [1.731748336E12, 13.0], [1.73174825E12, 13.0], [1.731748332E12, 13.0], [1.731748246E12, 13.0], [1.73174834E12, 13.0], [1.731748254E12, 13.0], [1.731748381E12, 13.0], [1.731748295E12, 13.0], [1.731748389E12, 13.0], [1.731748303E12, 13.0], [1.731748385E12, 13.0], [1.731748299E12, 12.0], [1.731748344E12, 13.0], [1.731748258E12, 13.0], [1.731748393E12, 13.0], [1.731748307E12, 13.0], [1.731748352E12, 13.0], [1.731748266E12, 13.0], [1.731748348E12, 13.0], [1.731748262E12, 13.0], [1.731748313E12, 12.0], [1.731748227E12, 13.0], [1.731748272E12, 13.0], [1.731748399E12, 13.0], [1.731748268E12, 13.0], [1.731748395E12, 13.0], [1.731748354E12, 13.0], [1.731748276E12, 13.0], [1.731748403E12, 13.0], [1.731748362E12, 13.0], [1.731748358E12, 13.0], [1.731748317E12, 13.0], [1.731748231E12, 13.0], [1.731748366E12, 13.0], [1.731748325E12, 12.0], [1.731748239E12, 13.0], [1.731748321E12, 13.0], [1.731748235E12, 13.0], [1.73174828E12, 13.0], [1.731748329E12, 13.0], [1.731748243E12, 13.0], [1.731748288E12, 13.0], [1.731748284E12, 13.0], [1.73174837E12, 13.0], [1.731748292E12, 13.0], [1.731748378E12, 13.0], [1.731748374E12, 13.0], [1.731748333E12, 13.0], [1.731748247E12, 13.0], [1.731748382E12, 13.0], [1.731748341E12, 13.0], [1.731748255E12, 13.0], [1.731748337E12, 13.0], [1.731748251E12, 13.0], [1.731748296E12, 13.0], [1.731748345E12, 13.0], [1.731748259E12, 13.0], [1.731748304E12, 12.0], [1.7317483E12, 13.0], [1.731748386E12, 12.0], [1.731748308E12, 13.0], [1.731748394E12, 13.0], [1.73174839E12, 12.0], [1.731748349E12, 13.0], [1.731748263E12, 13.0], [1.731748228E12, 13.0], [1.731748355E12, 13.0], [1.7317484E12, 13.0], [1.731748314E12, 13.0], [1.731748396E12, 13.0], [1.73174831E12, 12.0], [1.731748269E12, 13.0], [1.731748404E12, 12.0], [1.731748318E12, 13.0], [1.731748277E12, 13.0], [1.731748273E12, 13.0], [1.731748232E12, 13.0], [1.731748359E12, 13.0], [1.731748281E12, 13.0], [1.73174824E12, 13.0], [1.731748367E12, 13.0], [1.731748236E12, 13.0], [1.731748363E12, 13.0], [1.731748322E12, 13.0], [1.731748244E12, 13.0], [1.731748371E12, 13.0], [1.73174833E12, 13.0], [1.731748326E12, 13.0], [1.731748285E12, 13.0], [1.731748334E12, 13.0], [1.731748293E12, 13.0], [1.731748289E12, 13.0], [1.731748248E12, 13.0], [1.731748375E12, 13.0], [1.731748297E12, 13.0], [1.731748256E12, 13.0], [1.731748383E12, 13.0], [1.731748252E12, 13.0], [1.731748379E12, 13.0], [1.731748338E12, 13.0], [1.73174826E12, 13.0], [1.731748387E12, 12.5], [1.731748346E12, 13.0], [1.731748342E12, 13.0], [1.731748301E12, 13.0], [1.73174835E12, 13.0], [1.731748309E12, 12.0], [1.731748305E12, 13.0], [1.731748264E12, 13.0], [1.731748391E12, 13.0], [1.731748356E12, 13.0], [1.73174827E12, 13.0], [1.731748229E12, 13.0], [1.731748225E12, 16.0], [1.731748397E12, 13.0], [1.731748311E12, 13.0], [1.731748233E12, 13.0], [1.731748405E12, 12.5], [1.731748319E12, 13.0], [1.731748401E12, 13.0], [1.731748315E12, 13.0], [1.73174836E12, 13.0], [1.731748274E12, 13.0], [1.731748323E12, 12.0], [1.731748368E12, 13.0], [1.731748282E12, 13.0], [1.731748364E12, 13.0], [1.731748278E12, 13.0], [1.731748237E12, 13.0], [1.731748372E12, 13.0], [1.731748286E12, 13.0], [1.731748245E12, 13.0], [1.731748241E12, 13.0], [1.731748327E12, 13.0], [1.731748249E12, 13.0], [1.731748335E12, 13.0], [1.731748331E12, 13.0], [1.731748376E12, 13.0], [1.73174829E12, 13.0], [1.731748339E12, 13.0], [1.731748384E12, 13.0], [1.731748298E12, 12.0], [1.73174838E12, 13.0], [1.731748294E12, 13.0], [1.731748253E12, 13.0], [1.731748388E12, 12.0], [1.731748302E12, 13.0], [1.731748261E12, 13.0], [1.731748257E12, 13.0], [1.731748343E12, 13.0], [1.731748265E12, 13.0], [1.731748351E12, 13.0], [1.731748347E12, 13.0], [1.731748392E12, 13.0], [1.731748306E12, 13.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.731748405E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 6.0, "minX": 43.0, "maxY": 16.0, "series": [{"data": [[135.0, 13.0], [132.0, 13.0], [134.0, 13.0], [142.0, 13.0], [141.0, 13.0], [137.0, 13.0], [140.0, 13.0], [136.0, 13.0], [139.0, 13.0], [138.0, 13.0], [143.0, 13.0], [148.0, 13.0], [144.0, 13.0], [43.0, 12.5], [80.0, 16.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[135.0, 7.0], [132.0, 6.0], [134.0, 7.0], [142.0, 7.0], [141.0, 7.0], [137.0, 7.0], [140.0, 7.0], [136.0, 7.0], [139.0, 7.0], [138.0, 7.0], [143.0, 6.5], [148.0, 7.0], [144.0, 7.0], [43.0, 7.0], [80.0, 9.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 148.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 6.0, "minX": 43.0, "maxY": 16.0, "series": [{"data": [[135.0, 13.0], [132.0, 13.0], [134.0, 13.0], [142.0, 13.0], [141.0, 13.0], [137.0, 13.0], [140.0, 13.0], [136.0, 13.0], [139.0, 13.0], [138.0, 13.0], [143.0, 13.0], [148.0, 13.0], [144.0, 13.0], [43.0, 12.0], [80.0, 16.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[135.0, 7.0], [132.0, 6.0], [134.0, 7.0], [142.0, 7.0], [141.0, 7.0], [137.0, 7.0], [140.0, 7.0], [136.0, 7.0], [139.0, 7.0], [138.0, 7.0], [143.0, 6.0], [148.0, 7.0], [144.0, 7.0], [43.0, 7.0], [80.0, 8.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 148.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 41.0, "minX": 1.731748225E12, "maxY": 148.0, "series": [{"data": [[1.731748398E12, 139.0], [1.731748357E12, 144.0], [1.731748271E12, 138.0], [1.731748353E12, 137.0], [1.731748267E12, 141.0], [1.731748312E12, 140.0], [1.731748226E12, 148.0], [1.731748361E12, 139.0], [1.731748275E12, 138.0], [1.73174832E12, 137.0], [1.731748234E12, 141.0], [1.731748316E12, 140.0], [1.73174823E12, 140.0], [1.731748402E12, 139.0], [1.731748324E12, 137.0], [1.731748238E12, 139.0], [1.731748365E12, 136.0], [1.731748279E12, 140.0], [1.731748373E12, 141.0], [1.731748287E12, 142.0], [1.731748369E12, 135.0], [1.731748283E12, 139.0], [1.731748328E12, 141.0], [1.731748242E12, 142.0], [1.731748377E12, 143.0], [1.731748291E12, 137.0], [1.731748336E12, 137.0], [1.73174825E12, 135.0], [1.731748332E12, 143.0], [1.731748246E12, 139.0], [1.73174834E12, 137.0], [1.731748254E12, 139.0], [1.731748381E12, 138.0], [1.731748295E12, 138.0], [1.731748389E12, 137.0], [1.731748303E12, 142.0], [1.731748385E12, 136.0], [1.731748299E12, 139.0], [1.731748344E12, 142.0], [1.731748258E12, 141.0], [1.731748393E12, 144.0], [1.731748307E12, 141.0], [1.731748352E12, 141.0], [1.731748266E12, 137.0], [1.731748348E12, 140.0], [1.731748262E12, 139.0], [1.731748313E12, 137.0], [1.731748227E12, 142.0], [1.731748272E12, 140.0], [1.731748399E12, 137.0], [1.731748268E12, 136.0], [1.731748395E12, 140.0], [1.731748354E12, 139.0], [1.731748276E12, 141.0], [1.731748403E12, 137.0], [1.731748362E12, 140.0], [1.731748358E12, 134.0], [1.731748317E12, 139.0], [1.731748231E12, 141.0], [1.731748366E12, 140.0], [1.731748325E12, 140.0], [1.731748239E12, 139.0], [1.731748321E12, 140.0], [1.731748235E12, 139.0], [1.73174828E12, 138.0], [1.731748329E12, 136.0], [1.731748243E12, 138.0], [1.731748288E12, 136.0], [1.731748284E12, 138.0], [1.73174837E12, 140.0], [1.731748292E12, 141.0], [1.731748378E12, 134.0], [1.731748374E12, 136.0], [1.731748333E12, 137.0], [1.731748247E12, 138.0], [1.731748382E12, 142.0], [1.731748341E12, 144.0], [1.731748255E12, 139.0], [1.731748337E12, 140.0], [1.731748251E12, 143.0], [1.731748296E12, 142.0], [1.731748345E12, 138.0], [1.731748259E12, 137.0], [1.731748304E12, 136.0], [1.7317483E12, 139.0], [1.731748386E12, 144.0], [1.731748308E12, 137.0], [1.731748394E12, 135.0], [1.73174839E12, 139.0], [1.731748349E12, 138.0], [1.731748263E12, 138.0], [1.731748228E12, 140.0], [1.731748355E12, 140.0], [1.7317484E12, 140.0], [1.731748314E12, 141.0], [1.731748396E12, 138.0], [1.73174831E12, 141.0], [1.731748269E12, 142.0], [1.731748404E12, 143.0], [1.731748318E12, 138.0], [1.731748277E12, 136.0], [1.731748273E12, 138.0], [1.731748232E12, 137.0], [1.731748359E12, 143.0], [1.731748281E12, 139.0], [1.73174824E12, 140.0], [1.731748367E12, 135.0], [1.731748236E12, 137.0], [1.731748363E12, 138.0], [1.731748322E12, 138.0], [1.731748244E12, 139.0], [1.731748371E12, 139.0], [1.73174833E12, 141.0], [1.731748326E12, 140.0], [1.731748285E12, 143.0], [1.731748334E12, 139.0], [1.731748293E12, 138.0], [1.731748289E12, 141.0], [1.731748248E12, 139.0], [1.731748375E12, 141.0], [1.731748297E12, 139.0], [1.731748256E12, 139.0], [1.731748383E12, 136.0], [1.731748252E12, 136.0], [1.731748379E12, 141.0], [1.731748338E12, 136.0], [1.73174826E12, 142.0], [1.731748387E12, 135.0], [1.731748346E12, 141.0], [1.731748342E12, 132.0], [1.731748301E12, 136.0], [1.73174835E12, 141.0], [1.731748309E12, 140.0], [1.731748305E12, 141.0], [1.731748264E12, 141.0], [1.731748391E12, 139.0], [1.731748356E12, 137.0], [1.73174827E12, 138.0], [1.731748229E12, 138.0], [1.731748225E12, 82.0], [1.731748397E12, 141.0], [1.731748311E12, 137.0], [1.731748233E12, 136.0], [1.731748405E12, 41.0], [1.731748319E12, 139.0], [1.731748401E12, 137.0], [1.731748315E12, 137.0], [1.73174836E12, 136.0], [1.731748274E12, 140.0], [1.731748323E12, 142.0], [1.731748368E12, 144.0], [1.731748282E12, 137.0], [1.731748364E12, 142.0], [1.731748278E12, 141.0], [1.731748237E12, 140.0], [1.731748372E12, 138.0], [1.731748286E12, 135.0], [1.731748245E12, 139.0], [1.731748241E12, 137.0], [1.731748327E12, 136.0], [1.731748249E12, 141.0], [1.731748335E12, 139.0], [1.731748331E12, 137.0], [1.731748376E12, 138.0], [1.73174829E12, 139.0], [1.731748339E12, 142.0], [1.731748384E12, 139.0], [1.731748298E12, 138.0], [1.73174838E12, 139.0], [1.731748294E12, 138.0], [1.731748253E12, 139.0], [1.731748388E12, 142.0], [1.731748302E12, 139.0], [1.731748261E12, 139.0], [1.731748257E12, 137.0], [1.731748343E12, 140.0], [1.731748265E12, 137.0], [1.731748351E12, 136.0], [1.731748347E12, 136.0], [1.731748392E12, 137.0], [1.731748306E12, 137.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.731748405E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.731748225E12, "maxY": 136.0, "series": [{"data": [[1.731748398E12, 119.0], [1.731748357E12, 125.0], [1.731748271E12, 122.0], [1.731748353E12, 127.0], [1.731748267E12, 120.0], [1.731748312E12, 125.0], [1.731748226E12, 136.0], [1.731748361E12, 122.0], [1.731748275E12, 124.0], [1.73174832E12, 128.0], [1.731748234E12, 130.0], [1.731748316E12, 125.0], [1.73174823E12, 128.0], [1.731748402E12, 120.0], [1.731748324E12, 127.0], [1.731748238E12, 120.0], [1.731748365E12, 121.0], [1.731748279E12, 120.0], [1.731748373E12, 118.0], [1.731748287E12, 124.0], [1.731748369E12, 121.0], [1.731748283E12, 120.0], [1.731748328E12, 125.0], [1.731748242E12, 124.0], [1.731748377E12, 125.0], [1.731748291E12, 128.0], [1.731748336E12, 125.0], [1.73174825E12, 123.0], [1.731748332E12, 125.0], [1.731748246E12, 124.0], [1.73174834E12, 120.0], [1.731748254E12, 117.0], [1.731748381E12, 127.0], [1.731748295E12, 125.0], [1.731748389E12, 128.0], [1.731748303E12, 121.0], [1.731748385E12, 126.0], [1.731748299E12, 127.0], [1.731748344E12, 122.0], [1.731748258E12, 121.0], [1.731748393E12, 125.0], [1.731748307E12, 124.0], [1.731748352E12, 124.0], [1.731748266E12, 130.0], [1.731748348E12, 123.0], [1.731748262E12, 127.0], [1.731748313E12, 124.0], [1.731748227E12, 127.0], [1.731748272E12, 118.0], [1.731748399E12, 125.0], [1.731748268E12, 121.0], [1.731748395E12, 126.0], [1.731748354E12, 124.0], [1.731748276E12, 122.0], [1.731748403E12, 127.0], [1.731748362E12, 119.0], [1.731748358E12, 119.0], [1.731748317E12, 127.0], [1.731748231E12, 122.0], [1.731748366E12, 123.0], [1.731748325E12, 123.0], [1.731748239E12, 123.0], [1.731748321E12, 121.0], [1.731748235E12, 125.0], [1.73174828E12, 126.0], [1.731748329E12, 121.0], [1.731748243E12, 118.0], [1.731748288E12, 129.0], [1.731748284E12, 129.0], [1.73174837E12, 123.0], [1.731748292E12, 122.0], [1.731748378E12, 125.0], [1.731748374E12, 127.0], [1.731748333E12, 121.0], [1.731748247E12, 121.0], [1.731748382E12, 128.0], [1.731748341E12, 128.0], [1.731748255E12, 130.0], [1.731748337E12, 118.0], [1.731748251E12, 125.0], [1.731748296E12, 125.0], [1.731748345E12, 127.0], [1.731748259E12, 128.0], [1.731748304E12, 121.0], [1.7317483E12, 124.0], [1.731748386E12, 124.0], [1.731748308E12, 116.0], [1.731748394E12, 120.0], [1.73174839E12, 123.0], [1.731748349E12, 125.0], [1.731748263E12, 125.0], [1.731748228E12, 125.0], [1.731748355E12, 117.0], [1.7317484E12, 128.0], [1.731748314E12, 123.0], [1.731748396E12, 125.0], [1.73174831E12, 122.0], [1.731748269E12, 124.0], [1.731748404E12, 123.0], [1.731748318E12, 123.0], [1.731748277E12, 127.0], [1.731748273E12, 129.0], [1.731748232E12, 122.0], [1.731748359E12, 125.0], [1.731748281E12, 126.0], [1.73174824E12, 123.0], [1.731748367E12, 127.0], [1.731748236E12, 115.0], [1.731748363E12, 127.0], [1.731748322E12, 121.0], [1.731748244E12, 128.0], [1.731748371E12, 129.0], [1.73174833E12, 124.0], [1.731748326E12, 119.0], [1.731748285E12, 122.0], [1.731748334E12, 126.0], [1.731748293E12, 124.0], [1.731748289E12, 123.0], [1.731748248E12, 127.0], [1.731748375E12, 122.0], [1.731748297E12, 119.0], [1.731748256E12, 120.0], [1.731748383E12, 123.0], [1.731748252E12, 127.0], [1.731748379E12, 124.0], [1.731748338E12, 127.0], [1.73174826E12, 124.0], [1.731748387E12, 120.0], [1.731748346E12, 125.0], [1.731748342E12, 123.0], [1.731748301E12, 117.0], [1.73174835E12, 123.0], [1.731748309E12, 129.0], [1.731748305E12, 125.0], [1.731748264E12, 124.0], [1.731748391E12, 116.0], [1.731748356E12, 128.0], [1.73174827E12, 129.0], [1.731748229E12, 121.0], [1.731748225E12, 67.0], [1.731748397E12, 124.0], [1.731748311E12, 123.0], [1.731748233E12, 121.0], [1.731748405E12, 40.0], [1.731748319E12, 120.0], [1.731748401E12, 122.0], [1.731748315E12, 121.0], [1.73174836E12, 127.0], [1.731748274E12, 121.0], [1.731748323E12, 127.0], [1.731748368E12, 123.0], [1.731748282E12, 124.0], [1.731748364E12, 126.0], [1.731748278E12, 123.0], [1.731748237E12, 131.0], [1.731748372E12, 123.0], [1.731748286E12, 120.0], [1.731748245E12, 123.0], [1.731748241E12, 128.0], [1.731748327E12, 125.0], [1.731748249E12, 122.0], [1.731748335E12, 125.0], [1.731748331E12, 124.0], [1.731748376E12, 123.0], [1.73174829E12, 117.0], [1.731748339E12, 123.0], [1.731748384E12, 120.0], [1.731748298E12, 126.0], [1.73174838E12, 118.0], [1.731748294E12, 123.0], [1.731748253E12, 123.0], [1.731748388E12, 125.0], [1.731748302E12, 130.0], [1.731748261E12, 119.0], [1.731748257E12, 124.0], [1.731748343E12, 122.0], [1.731748265E12, 120.0], [1.731748351E12, 124.0], [1.731748347E12, 121.0], [1.731748392E12, 128.0], [1.731748306E12, 128.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.731748398E12, 19.0], [1.731748357E12, 18.0], [1.731748271E12, 16.0], [1.731748353E12, 9.0], [1.731748267E12, 20.0], [1.731748312E12, 14.0], [1.731748226E12, 12.0], [1.731748361E12, 18.0], [1.731748275E12, 15.0], [1.73174832E12, 10.0], [1.731748234E12, 11.0], [1.731748316E12, 16.0], [1.73174823E12, 13.0], [1.731748402E12, 18.0], [1.731748324E12, 9.0], [1.731748238E12, 18.0], [1.731748365E12, 16.0], [1.731748279E12, 20.0], [1.731748373E12, 22.0], [1.731748287E12, 18.0], [1.731748369E12, 14.0], [1.731748283E12, 18.0], [1.731748328E12, 15.0], [1.731748242E12, 18.0], [1.731748377E12, 18.0], [1.731748291E12, 10.0], [1.731748336E12, 13.0], [1.73174825E12, 12.0], [1.731748332E12, 18.0], [1.731748246E12, 16.0], [1.73174834E12, 17.0], [1.731748254E12, 22.0], [1.731748381E12, 12.0], [1.731748295E12, 13.0], [1.731748389E12, 8.0], [1.731748303E12, 20.0], [1.731748385E12, 10.0], [1.731748299E12, 11.0], [1.731748344E12, 20.0], [1.731748258E12, 18.0], [1.731748393E12, 18.0], [1.731748307E12, 18.0], [1.731748352E12, 18.0], [1.731748266E12, 8.0], [1.731748348E12, 16.0], [1.731748262E12, 12.0], [1.731748313E12, 13.0], [1.731748227E12, 15.0], [1.731748272E12, 22.0], [1.731748399E12, 13.0], [1.731748268E12, 15.0], [1.731748395E12, 14.0], [1.731748354E12, 16.0], [1.731748276E12, 18.0], [1.731748403E12, 10.0], [1.731748362E12, 20.0], [1.731748358E12, 15.0], [1.731748317E12, 11.0], [1.731748231E12, 18.0], [1.731748366E12, 16.0], [1.731748325E12, 18.0], [1.731748239E12, 17.0], [1.731748321E12, 18.0], [1.731748235E12, 14.0], [1.73174828E12, 12.0], [1.731748329E12, 16.0], [1.731748243E12, 20.0], [1.731748288E12, 7.0], [1.731748284E12, 10.0], [1.73174837E12, 18.0], [1.731748292E12, 18.0], [1.731748378E12, 9.0], [1.731748374E12, 10.0], [1.731748333E12, 16.0], [1.731748247E12, 16.0], [1.731748382E12, 13.0], [1.731748341E12, 16.0], [1.731748255E12, 10.0], [1.731748337E12, 21.0], [1.731748251E12, 18.0], [1.731748296E12, 18.0], [1.731748345E12, 12.0], [1.731748259E12, 9.0], [1.731748304E12, 15.0], [1.7317483E12, 16.0], [1.731748386E12, 20.0], [1.731748308E12, 20.0], [1.731748394E12, 15.0], [1.73174839E12, 17.0], [1.731748349E12, 13.0], [1.731748263E12, 13.0], [1.731748228E12, 16.0], [1.731748355E12, 22.0], [1.7317484E12, 11.0], [1.731748314E12, 18.0], [1.731748396E12, 13.0], [1.73174831E12, 18.0], [1.731748269E12, 18.0], [1.731748404E12, 20.0], [1.731748318E12, 16.0], [1.731748277E12, 9.0], [1.731748273E12, 10.0], [1.731748232E12, 15.0], [1.731748359E12, 18.0], [1.731748281E12, 13.0], [1.73174824E12, 16.0], [1.731748367E12, 8.0], [1.731748236E12, 22.0], [1.731748363E12, 12.0], [1.731748322E12, 17.0], [1.731748244E12, 12.0], [1.731748371E12, 9.0], [1.73174833E12, 16.0], [1.731748326E12, 20.0], [1.731748285E12, 20.0], [1.731748334E12, 14.0], [1.731748293E12, 15.0], [1.731748289E12, 18.0], [1.731748248E12, 13.0], [1.731748375E12, 18.0], [1.731748297E12, 19.0], [1.731748256E12, 18.0], [1.731748383E12, 14.0], [1.731748252E12, 9.0], [1.731748379E12, 18.0], [1.731748338E12, 10.0], [1.73174826E12, 18.0], [1.731748387E12, 15.0], [1.731748346E12, 15.0], [1.731748342E12, 9.0], [1.731748301E12, 18.0], [1.73174835E12, 18.0], [1.731748309E12, 12.0], [1.731748305E12, 16.0], [1.731748264E12, 18.0], [1.731748391E12, 22.0], [1.731748356E12, 10.0], [1.73174827E12, 9.0], [1.731748229E12, 16.0], [1.731748225E12, 13.0], [1.731748397E12, 18.0], [1.731748311E12, 15.0], [1.731748233E12, 15.0], [1.731748405E12, 3.0], [1.731748319E12, 18.0], [1.731748401E12, 16.0], [1.731748315E12, 16.0], [1.73174836E12, 9.0], [1.731748274E12, 18.0], [1.731748323E12, 16.0], [1.731748368E12, 21.0], [1.731748282E12, 14.0], [1.731748364E12, 15.0], [1.731748278E12, 18.0], [1.731748237E12, 10.0], [1.731748372E12, 16.0], [1.731748286E12, 15.0], [1.731748245E12, 15.0], [1.731748241E12, 9.0], [1.731748327E12, 12.0], [1.731748249E12, 18.0], [1.731748335E12, 13.0], [1.731748331E12, 13.0], [1.731748376E12, 15.0], [1.73174829E12, 22.0], [1.731748339E12, 18.0], [1.731748384E12, 18.0], [1.731748298E12, 13.0], [1.73174838E12, 20.0], [1.731748294E12, 14.0], [1.731748253E12, 16.0], [1.731748388E12, 18.0], [1.731748302E12, 10.0], [1.731748261E12, 20.0], [1.731748257E12, 15.0], [1.731748343E12, 18.0], [1.731748265E12, 16.0], [1.731748351E12, 12.0], [1.731748347E12, 16.0], [1.731748392E12, 10.0], [1.731748306E12, 9.0]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.731748405E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.731748225E12, "maxY": 136.0, "series": [{"data": [[1.731748398E12, 19.0], [1.731748357E12, 18.0], [1.731748271E12, 16.0], [1.731748353E12, 9.0], [1.731748267E12, 20.0], [1.731748312E12, 14.0], [1.731748226E12, 12.0], [1.731748361E12, 18.0], [1.731748275E12, 15.0], [1.73174832E12, 10.0], [1.731748234E12, 11.0], [1.731748316E12, 16.0], [1.73174823E12, 13.0], [1.731748402E12, 18.0], [1.731748324E12, 9.0], [1.731748238E12, 18.0], [1.731748365E12, 16.0], [1.731748279E12, 20.0], [1.731748373E12, 22.0], [1.731748287E12, 18.0], [1.731748369E12, 14.0], [1.731748283E12, 18.0], [1.731748328E12, 15.0], [1.731748242E12, 18.0], [1.731748377E12, 18.0], [1.731748291E12, 10.0], [1.731748336E12, 13.0], [1.73174825E12, 12.0], [1.731748332E12, 18.0], [1.731748246E12, 16.0], [1.73174834E12, 17.0], [1.731748254E12, 22.0], [1.731748381E12, 12.0], [1.731748295E12, 13.0], [1.731748389E12, 8.0], [1.731748303E12, 20.0], [1.731748385E12, 10.0], [1.731748299E12, 11.0], [1.731748344E12, 20.0], [1.731748258E12, 18.0], [1.731748393E12, 18.0], [1.731748307E12, 18.0], [1.731748352E12, 18.0], [1.731748266E12, 8.0], [1.731748348E12, 16.0], [1.731748262E12, 12.0], [1.731748313E12, 13.0], [1.731748227E12, 15.0], [1.731748272E12, 22.0], [1.731748399E12, 13.0], [1.731748268E12, 15.0], [1.731748395E12, 14.0], [1.731748354E12, 16.0], [1.731748276E12, 18.0], [1.731748403E12, 10.0], [1.731748362E12, 20.0], [1.731748358E12, 15.0], [1.731748317E12, 11.0], [1.731748231E12, 18.0], [1.731748366E12, 16.0], [1.731748325E12, 18.0], [1.731748239E12, 17.0], [1.731748321E12, 18.0], [1.731748235E12, 14.0], [1.73174828E12, 12.0], [1.731748329E12, 16.0], [1.731748243E12, 20.0], [1.731748288E12, 7.0], [1.731748284E12, 10.0], [1.73174837E12, 18.0], [1.731748292E12, 18.0], [1.731748378E12, 9.0], [1.731748374E12, 10.0], [1.731748333E12, 16.0], [1.731748247E12, 16.0], [1.731748382E12, 13.0], [1.731748341E12, 16.0], [1.731748255E12, 10.0], [1.731748337E12, 21.0], [1.731748251E12, 18.0], [1.731748296E12, 18.0], [1.731748345E12, 12.0], [1.731748259E12, 9.0], [1.731748304E12, 15.0], [1.7317483E12, 16.0], [1.731748386E12, 20.0], [1.731748308E12, 20.0], [1.731748394E12, 15.0], [1.73174839E12, 17.0], [1.731748349E12, 13.0], [1.731748263E12, 13.0], [1.731748228E12, 16.0], [1.731748355E12, 22.0], [1.7317484E12, 11.0], [1.731748314E12, 18.0], [1.731748396E12, 13.0], [1.73174831E12, 18.0], [1.731748269E12, 18.0], [1.731748404E12, 20.0], [1.731748318E12, 16.0], [1.731748277E12, 9.0], [1.731748273E12, 10.0], [1.731748232E12, 15.0], [1.731748359E12, 18.0], [1.731748281E12, 13.0], [1.73174824E12, 16.0], [1.731748367E12, 8.0], [1.731748236E12, 22.0], [1.731748363E12, 12.0], [1.731748322E12, 17.0], [1.731748244E12, 12.0], [1.731748371E12, 9.0], [1.73174833E12, 16.0], [1.731748326E12, 20.0], [1.731748285E12, 20.0], [1.731748334E12, 14.0], [1.731748293E12, 15.0], [1.731748289E12, 18.0], [1.731748248E12, 13.0], [1.731748375E12, 18.0], [1.731748297E12, 19.0], [1.731748256E12, 18.0], [1.731748383E12, 14.0], [1.731748252E12, 9.0], [1.731748379E12, 18.0], [1.731748338E12, 10.0], [1.73174826E12, 18.0], [1.731748387E12, 15.0], [1.731748346E12, 15.0], [1.731748342E12, 9.0], [1.731748301E12, 18.0], [1.73174835E12, 18.0], [1.731748309E12, 12.0], [1.731748305E12, 16.0], [1.731748264E12, 18.0], [1.731748391E12, 22.0], [1.731748356E12, 10.0], [1.73174827E12, 9.0], [1.731748229E12, 16.0], [1.731748225E12, 13.0], [1.731748397E12, 18.0], [1.731748311E12, 15.0], [1.731748233E12, 15.0], [1.731748405E12, 3.0], [1.731748319E12, 18.0], [1.731748401E12, 16.0], [1.731748315E12, 16.0], [1.73174836E12, 9.0], [1.731748274E12, 18.0], [1.731748323E12, 16.0], [1.731748368E12, 21.0], [1.731748282E12, 14.0], [1.731748364E12, 15.0], [1.731748278E12, 18.0], [1.731748237E12, 10.0], [1.731748372E12, 16.0], [1.731748286E12, 15.0], [1.731748245E12, 15.0], [1.731748241E12, 9.0], [1.731748327E12, 12.0], [1.731748249E12, 18.0], [1.731748335E12, 13.0], [1.731748331E12, 13.0], [1.731748376E12, 15.0], [1.73174829E12, 22.0], [1.731748339E12, 18.0], [1.731748384E12, 18.0], [1.731748298E12, 13.0], [1.73174838E12, 20.0], [1.731748294E12, 14.0], [1.731748253E12, 16.0], [1.731748388E12, 18.0], [1.731748302E12, 10.0], [1.731748261E12, 20.0], [1.731748257E12, 15.0], [1.731748343E12, 18.0], [1.731748265E12, 16.0], [1.731748351E12, 12.0], [1.731748347E12, 16.0], [1.731748392E12, 10.0], [1.731748306E12, 9.0]], "isOverall": false, "label": "Products-failure", "isController": false}, {"data": [[1.731748398E12, 119.0], [1.731748357E12, 125.0], [1.731748271E12, 122.0], [1.731748353E12, 127.0], [1.731748267E12, 120.0], [1.731748312E12, 125.0], [1.731748226E12, 136.0], [1.731748361E12, 122.0], [1.731748275E12, 124.0], [1.73174832E12, 128.0], [1.731748234E12, 130.0], [1.731748316E12, 125.0], [1.73174823E12, 128.0], [1.731748402E12, 120.0], [1.731748324E12, 127.0], [1.731748238E12, 120.0], [1.731748365E12, 121.0], [1.731748279E12, 120.0], [1.731748373E12, 118.0], [1.731748287E12, 124.0], [1.731748369E12, 121.0], [1.731748283E12, 120.0], [1.731748328E12, 125.0], [1.731748242E12, 124.0], [1.731748377E12, 125.0], [1.731748291E12, 128.0], [1.731748336E12, 125.0], [1.73174825E12, 123.0], [1.731748332E12, 125.0], [1.731748246E12, 124.0], [1.73174834E12, 120.0], [1.731748254E12, 117.0], [1.731748381E12, 127.0], [1.731748295E12, 125.0], [1.731748389E12, 128.0], [1.731748303E12, 121.0], [1.731748385E12, 126.0], [1.731748299E12, 127.0], [1.731748344E12, 122.0], [1.731748258E12, 121.0], [1.731748393E12, 125.0], [1.731748307E12, 124.0], [1.731748352E12, 124.0], [1.731748266E12, 130.0], [1.731748348E12, 123.0], [1.731748262E12, 127.0], [1.731748313E12, 124.0], [1.731748227E12, 127.0], [1.731748272E12, 118.0], [1.731748399E12, 125.0], [1.731748268E12, 121.0], [1.731748395E12, 126.0], [1.731748354E12, 124.0], [1.731748276E12, 122.0], [1.731748403E12, 127.0], [1.731748362E12, 119.0], [1.731748358E12, 119.0], [1.731748317E12, 127.0], [1.731748231E12, 122.0], [1.731748366E12, 123.0], [1.731748325E12, 123.0], [1.731748239E12, 123.0], [1.731748321E12, 121.0], [1.731748235E12, 125.0], [1.73174828E12, 126.0], [1.731748329E12, 121.0], [1.731748243E12, 118.0], [1.731748288E12, 129.0], [1.731748284E12, 129.0], [1.73174837E12, 123.0], [1.731748292E12, 122.0], [1.731748378E12, 125.0], [1.731748374E12, 127.0], [1.731748333E12, 121.0], [1.731748247E12, 121.0], [1.731748382E12, 128.0], [1.731748341E12, 128.0], [1.731748255E12, 130.0], [1.731748337E12, 118.0], [1.731748251E12, 125.0], [1.731748296E12, 125.0], [1.731748345E12, 127.0], [1.731748259E12, 128.0], [1.731748304E12, 121.0], [1.7317483E12, 124.0], [1.731748386E12, 124.0], [1.731748308E12, 116.0], [1.731748394E12, 120.0], [1.73174839E12, 123.0], [1.731748349E12, 125.0], [1.731748263E12, 125.0], [1.731748228E12, 125.0], [1.731748355E12, 117.0], [1.7317484E12, 128.0], [1.731748314E12, 123.0], [1.731748396E12, 125.0], [1.73174831E12, 122.0], [1.731748269E12, 124.0], [1.731748404E12, 123.0], [1.731748318E12, 123.0], [1.731748277E12, 127.0], [1.731748273E12, 129.0], [1.731748232E12, 122.0], [1.731748359E12, 125.0], [1.731748281E12, 126.0], [1.73174824E12, 123.0], [1.731748367E12, 127.0], [1.731748236E12, 115.0], [1.731748363E12, 127.0], [1.731748322E12, 121.0], [1.731748244E12, 128.0], [1.731748371E12, 129.0], [1.73174833E12, 124.0], [1.731748326E12, 119.0], [1.731748285E12, 122.0], [1.731748334E12, 126.0], [1.731748293E12, 124.0], [1.731748289E12, 123.0], [1.731748248E12, 127.0], [1.731748375E12, 122.0], [1.731748297E12, 119.0], [1.731748256E12, 120.0], [1.731748383E12, 123.0], [1.731748252E12, 127.0], [1.731748379E12, 124.0], [1.731748338E12, 127.0], [1.73174826E12, 124.0], [1.731748387E12, 120.0], [1.731748346E12, 125.0], [1.731748342E12, 123.0], [1.731748301E12, 117.0], [1.73174835E12, 123.0], [1.731748309E12, 129.0], [1.731748305E12, 125.0], [1.731748264E12, 124.0], [1.731748391E12, 116.0], [1.731748356E12, 128.0], [1.73174827E12, 129.0], [1.731748229E12, 121.0], [1.731748225E12, 67.0], [1.731748397E12, 124.0], [1.731748311E12, 123.0], [1.731748233E12, 121.0], [1.731748405E12, 40.0], [1.731748319E12, 120.0], [1.731748401E12, 122.0], [1.731748315E12, 121.0], [1.73174836E12, 127.0], [1.731748274E12, 121.0], [1.731748323E12, 127.0], [1.731748368E12, 123.0], [1.731748282E12, 124.0], [1.731748364E12, 126.0], [1.731748278E12, 123.0], [1.731748237E12, 131.0], [1.731748372E12, 123.0], [1.731748286E12, 120.0], [1.731748245E12, 123.0], [1.731748241E12, 128.0], [1.731748327E12, 125.0], [1.731748249E12, 122.0], [1.731748335E12, 125.0], [1.731748331E12, 124.0], [1.731748376E12, 123.0], [1.73174829E12, 117.0], [1.731748339E12, 123.0], [1.731748384E12, 120.0], [1.731748298E12, 126.0], [1.73174838E12, 118.0], [1.731748294E12, 123.0], [1.731748253E12, 123.0], [1.731748388E12, 125.0], [1.731748302E12, 130.0], [1.731748261E12, 119.0], [1.731748257E12, 124.0], [1.731748343E12, 122.0], [1.731748265E12, 120.0], [1.731748351E12, 124.0], [1.731748347E12, 121.0], [1.731748392E12, 128.0], [1.731748306E12, 128.0]], "isOverall": false, "label": "Products-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.731748405E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.731748225E12, "maxY": 136.0, "series": [{"data": [[1.731748398E12, 119.0], [1.731748357E12, 125.0], [1.731748271E12, 122.0], [1.731748353E12, 127.0], [1.731748267E12, 120.0], [1.731748312E12, 125.0], [1.731748226E12, 136.0], [1.731748361E12, 122.0], [1.731748275E12, 124.0], [1.73174832E12, 128.0], [1.731748234E12, 130.0], [1.731748316E12, 125.0], [1.73174823E12, 128.0], [1.731748402E12, 120.0], [1.731748324E12, 127.0], [1.731748238E12, 120.0], [1.731748365E12, 121.0], [1.731748279E12, 120.0], [1.731748373E12, 118.0], [1.731748287E12, 124.0], [1.731748369E12, 121.0], [1.731748283E12, 120.0], [1.731748328E12, 125.0], [1.731748242E12, 124.0], [1.731748377E12, 125.0], [1.731748291E12, 128.0], [1.731748336E12, 125.0], [1.73174825E12, 123.0], [1.731748332E12, 125.0], [1.731748246E12, 124.0], [1.73174834E12, 120.0], [1.731748254E12, 117.0], [1.731748381E12, 127.0], [1.731748295E12, 125.0], [1.731748389E12, 128.0], [1.731748303E12, 121.0], [1.731748385E12, 126.0], [1.731748299E12, 127.0], [1.731748344E12, 122.0], [1.731748258E12, 121.0], [1.731748393E12, 125.0], [1.731748307E12, 124.0], [1.731748352E12, 124.0], [1.731748266E12, 130.0], [1.731748348E12, 123.0], [1.731748262E12, 127.0], [1.731748313E12, 124.0], [1.731748227E12, 127.0], [1.731748272E12, 118.0], [1.731748399E12, 125.0], [1.731748268E12, 121.0], [1.731748395E12, 126.0], [1.731748354E12, 124.0], [1.731748276E12, 122.0], [1.731748403E12, 127.0], [1.731748362E12, 119.0], [1.731748358E12, 119.0], [1.731748317E12, 127.0], [1.731748231E12, 122.0], [1.731748366E12, 123.0], [1.731748325E12, 123.0], [1.731748239E12, 123.0], [1.731748321E12, 121.0], [1.731748235E12, 125.0], [1.73174828E12, 126.0], [1.731748329E12, 121.0], [1.731748243E12, 118.0], [1.731748288E12, 129.0], [1.731748284E12, 129.0], [1.73174837E12, 123.0], [1.731748292E12, 122.0], [1.731748378E12, 125.0], [1.731748374E12, 127.0], [1.731748333E12, 121.0], [1.731748247E12, 121.0], [1.731748382E12, 128.0], [1.731748341E12, 128.0], [1.731748255E12, 130.0], [1.731748337E12, 118.0], [1.731748251E12, 125.0], [1.731748296E12, 125.0], [1.731748345E12, 127.0], [1.731748259E12, 128.0], [1.731748304E12, 121.0], [1.7317483E12, 124.0], [1.731748386E12, 124.0], [1.731748308E12, 116.0], [1.731748394E12, 120.0], [1.73174839E12, 123.0], [1.731748349E12, 125.0], [1.731748263E12, 125.0], [1.731748228E12, 125.0], [1.731748355E12, 117.0], [1.7317484E12, 128.0], [1.731748314E12, 123.0], [1.731748396E12, 125.0], [1.73174831E12, 122.0], [1.731748269E12, 124.0], [1.731748404E12, 123.0], [1.731748318E12, 123.0], [1.731748277E12, 127.0], [1.731748273E12, 129.0], [1.731748232E12, 122.0], [1.731748359E12, 125.0], [1.731748281E12, 126.0], [1.73174824E12, 123.0], [1.731748367E12, 127.0], [1.731748236E12, 115.0], [1.731748363E12, 127.0], [1.731748322E12, 121.0], [1.731748244E12, 128.0], [1.731748371E12, 129.0], [1.73174833E12, 124.0], [1.731748326E12, 119.0], [1.731748285E12, 122.0], [1.731748334E12, 126.0], [1.731748293E12, 124.0], [1.731748289E12, 123.0], [1.731748248E12, 127.0], [1.731748375E12, 122.0], [1.731748297E12, 119.0], [1.731748256E12, 120.0], [1.731748383E12, 123.0], [1.731748252E12, 127.0], [1.731748379E12, 124.0], [1.731748338E12, 127.0], [1.73174826E12, 124.0], [1.731748387E12, 120.0], [1.731748346E12, 125.0], [1.731748342E12, 123.0], [1.731748301E12, 117.0], [1.73174835E12, 123.0], [1.731748309E12, 129.0], [1.731748305E12, 125.0], [1.731748264E12, 124.0], [1.731748391E12, 116.0], [1.731748356E12, 128.0], [1.73174827E12, 129.0], [1.731748229E12, 121.0], [1.731748225E12, 67.0], [1.731748397E12, 124.0], [1.731748311E12, 123.0], [1.731748233E12, 121.0], [1.731748405E12, 40.0], [1.731748319E12, 120.0], [1.731748401E12, 122.0], [1.731748315E12, 121.0], [1.73174836E12, 127.0], [1.731748274E12, 121.0], [1.731748323E12, 127.0], [1.731748368E12, 123.0], [1.731748282E12, 124.0], [1.731748364E12, 126.0], [1.731748278E12, 123.0], [1.731748237E12, 131.0], [1.731748372E12, 123.0], [1.731748286E12, 120.0], [1.731748245E12, 123.0], [1.731748241E12, 128.0], [1.731748327E12, 125.0], [1.731748249E12, 122.0], [1.731748335E12, 125.0], [1.731748331E12, 124.0], [1.731748376E12, 123.0], [1.73174829E12, 117.0], [1.731748339E12, 123.0], [1.731748384E12, 120.0], [1.731748298E12, 126.0], [1.73174838E12, 118.0], [1.731748294E12, 123.0], [1.731748253E12, 123.0], [1.731748388E12, 125.0], [1.731748302E12, 130.0], [1.731748261E12, 119.0], [1.731748257E12, 124.0], [1.731748343E12, 122.0], [1.731748265E12, 120.0], [1.731748351E12, 124.0], [1.731748347E12, 121.0], [1.731748392E12, 128.0], [1.731748306E12, 128.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.731748398E12, 19.0], [1.731748357E12, 18.0], [1.731748271E12, 16.0], [1.731748353E12, 9.0], [1.731748267E12, 20.0], [1.731748312E12, 14.0], [1.731748226E12, 12.0], [1.731748361E12, 18.0], [1.731748275E12, 15.0], [1.73174832E12, 10.0], [1.731748234E12, 11.0], [1.731748316E12, 16.0], [1.73174823E12, 13.0], [1.731748402E12, 18.0], [1.731748324E12, 9.0], [1.731748238E12, 18.0], [1.731748365E12, 16.0], [1.731748279E12, 20.0], [1.731748373E12, 22.0], [1.731748287E12, 18.0], [1.731748369E12, 14.0], [1.731748283E12, 18.0], [1.731748328E12, 15.0], [1.731748242E12, 18.0], [1.731748377E12, 18.0], [1.731748291E12, 10.0], [1.731748336E12, 13.0], [1.73174825E12, 12.0], [1.731748332E12, 18.0], [1.731748246E12, 16.0], [1.73174834E12, 17.0], [1.731748254E12, 22.0], [1.731748381E12, 12.0], [1.731748295E12, 13.0], [1.731748389E12, 8.0], [1.731748303E12, 20.0], [1.731748385E12, 10.0], [1.731748299E12, 11.0], [1.731748344E12, 20.0], [1.731748258E12, 18.0], [1.731748393E12, 18.0], [1.731748307E12, 18.0], [1.731748352E12, 18.0], [1.731748266E12, 8.0], [1.731748348E12, 16.0], [1.731748262E12, 12.0], [1.731748313E12, 13.0], [1.731748227E12, 15.0], [1.731748272E12, 22.0], [1.731748399E12, 13.0], [1.731748268E12, 15.0], [1.731748395E12, 14.0], [1.731748354E12, 16.0], [1.731748276E12, 18.0], [1.731748403E12, 10.0], [1.731748362E12, 20.0], [1.731748358E12, 15.0], [1.731748317E12, 11.0], [1.731748231E12, 18.0], [1.731748366E12, 16.0], [1.731748325E12, 18.0], [1.731748239E12, 17.0], [1.731748321E12, 18.0], [1.731748235E12, 14.0], [1.73174828E12, 12.0], [1.731748329E12, 16.0], [1.731748243E12, 20.0], [1.731748288E12, 7.0], [1.731748284E12, 10.0], [1.73174837E12, 18.0], [1.731748292E12, 18.0], [1.731748378E12, 9.0], [1.731748374E12, 10.0], [1.731748333E12, 16.0], [1.731748247E12, 16.0], [1.731748382E12, 13.0], [1.731748341E12, 16.0], [1.731748255E12, 10.0], [1.731748337E12, 21.0], [1.731748251E12, 18.0], [1.731748296E12, 18.0], [1.731748345E12, 12.0], [1.731748259E12, 9.0], [1.731748304E12, 15.0], [1.7317483E12, 16.0], [1.731748386E12, 20.0], [1.731748308E12, 20.0], [1.731748394E12, 15.0], [1.73174839E12, 17.0], [1.731748349E12, 13.0], [1.731748263E12, 13.0], [1.731748228E12, 16.0], [1.731748355E12, 22.0], [1.7317484E12, 11.0], [1.731748314E12, 18.0], [1.731748396E12, 13.0], [1.73174831E12, 18.0], [1.731748269E12, 18.0], [1.731748404E12, 20.0], [1.731748318E12, 16.0], [1.731748277E12, 9.0], [1.731748273E12, 10.0], [1.731748232E12, 15.0], [1.731748359E12, 18.0], [1.731748281E12, 13.0], [1.73174824E12, 16.0], [1.731748367E12, 8.0], [1.731748236E12, 22.0], [1.731748363E12, 12.0], [1.731748322E12, 17.0], [1.731748244E12, 12.0], [1.731748371E12, 9.0], [1.73174833E12, 16.0], [1.731748326E12, 20.0], [1.731748285E12, 20.0], [1.731748334E12, 14.0], [1.731748293E12, 15.0], [1.731748289E12, 18.0], [1.731748248E12, 13.0], [1.731748375E12, 18.0], [1.731748297E12, 19.0], [1.731748256E12, 18.0], [1.731748383E12, 14.0], [1.731748252E12, 9.0], [1.731748379E12, 18.0], [1.731748338E12, 10.0], [1.73174826E12, 18.0], [1.731748387E12, 15.0], [1.731748346E12, 15.0], [1.731748342E12, 9.0], [1.731748301E12, 18.0], [1.73174835E12, 18.0], [1.731748309E12, 12.0], [1.731748305E12, 16.0], [1.731748264E12, 18.0], [1.731748391E12, 22.0], [1.731748356E12, 10.0], [1.73174827E12, 9.0], [1.731748229E12, 16.0], [1.731748225E12, 13.0], [1.731748397E12, 18.0], [1.731748311E12, 15.0], [1.731748233E12, 15.0], [1.731748405E12, 3.0], [1.731748319E12, 18.0], [1.731748401E12, 16.0], [1.731748315E12, 16.0], [1.73174836E12, 9.0], [1.731748274E12, 18.0], [1.731748323E12, 16.0], [1.731748368E12, 21.0], [1.731748282E12, 14.0], [1.731748364E12, 15.0], [1.731748278E12, 18.0], [1.731748237E12, 10.0], [1.731748372E12, 16.0], [1.731748286E12, 15.0], [1.731748245E12, 15.0], [1.731748241E12, 9.0], [1.731748327E12, 12.0], [1.731748249E12, 18.0], [1.731748335E12, 13.0], [1.731748331E12, 13.0], [1.731748376E12, 15.0], [1.73174829E12, 22.0], [1.731748339E12, 18.0], [1.731748384E12, 18.0], [1.731748298E12, 13.0], [1.73174838E12, 20.0], [1.731748294E12, 14.0], [1.731748253E12, 16.0], [1.731748388E12, 18.0], [1.731748302E12, 10.0], [1.731748261E12, 20.0], [1.731748257E12, 15.0], [1.731748343E12, 18.0], [1.731748265E12, 16.0], [1.731748351E12, 12.0], [1.731748347E12, 16.0], [1.731748392E12, 10.0], [1.731748306E12, 9.0]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.731748405E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

