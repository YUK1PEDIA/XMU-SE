/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 46.0, "series": [{"data": [[0.0, 5.0], [0.1, 5.0], [0.2, 6.0], [0.3, 6.0], [0.4, 6.0], [0.5, 6.0], [0.6, 6.0], [0.7, 6.0], [0.8, 6.0], [0.9, 6.0], [1.0, 6.0], [1.1, 6.0], [1.2, 6.0], [1.3, 6.0], [1.4, 6.0], [1.5, 6.0], [1.6, 6.0], [1.7, 6.0], [1.8, 6.0], [1.9, 6.0], [2.0, 6.0], [2.1, 6.0], [2.2, 6.0], [2.3, 6.0], [2.4, 6.0], [2.5, 6.0], [2.6, 6.0], [2.7, 6.0], [2.8, 6.0], [2.9, 6.0], [3.0, 6.0], [3.1, 6.0], [3.2, 6.0], [3.3, 6.0], [3.4, 6.0], [3.5, 7.0], [3.6, 7.0], [3.7, 7.0], [3.8, 7.0], [3.9, 7.0], [4.0, 7.0], [4.1, 7.0], [4.2, 7.0], [4.3, 7.0], [4.4, 7.0], [4.5, 7.0], [4.6, 7.0], [4.7, 7.0], [4.8, 7.0], [4.9, 7.0], [5.0, 7.0], [5.1, 7.0], [5.2, 7.0], [5.3, 7.0], [5.4, 7.0], [5.5, 7.0], [5.6, 7.0], [5.7, 7.0], [5.8, 7.0], [5.9, 7.0], [6.0, 7.0], [6.1, 7.0], [6.2, 7.0], [6.3, 7.0], [6.4, 7.0], [6.5, 7.0], [6.6, 8.0], [6.7, 8.0], [6.8, 8.0], [6.9, 8.0], [7.0, 8.0], [7.1, 8.0], [7.2, 8.0], [7.3, 8.0], [7.4, 8.0], [7.5, 8.0], [7.6, 8.0], [7.7, 8.0], [7.8, 8.0], [7.9, 8.0], [8.0, 8.0], [8.1, 8.0], [8.2, 9.0], [8.3, 9.0], [8.4, 9.0], [8.5, 9.0], [8.6, 9.0], [8.7, 9.0], [8.8, 9.0], [8.9, 9.0], [9.0, 9.0], [9.1, 9.0], [9.2, 9.0], [9.3, 9.0], [9.4, 9.0], [9.5, 10.0], [9.6, 10.0], [9.7, 10.0], [9.8, 10.0], [9.9, 10.0], [10.0, 10.0], [10.1, 11.0], [10.2, 11.0], [10.3, 11.0], [10.4, 11.0], [10.5, 12.0], [10.6, 12.0], [10.7, 12.0], [10.8, 12.0], [10.9, 12.0], [11.0, 12.0], [11.1, 12.0], [11.2, 12.0], [11.3, 12.0], [11.4, 12.0], [11.5, 12.0], [11.6, 12.0], [11.7, 12.0], [11.8, 12.0], [11.9, 12.0], [12.0, 12.0], [12.1, 12.0], [12.2, 12.0], [12.3, 12.0], [12.4, 12.0], [12.5, 12.0], [12.6, 12.0], [12.7, 12.0], [12.8, 12.0], [12.9, 12.0], [13.0, 12.0], [13.1, 12.0], [13.2, 12.0], [13.3, 12.0], [13.4, 12.0], [13.5, 12.0], [13.6, 12.0], [13.7, 12.0], [13.8, 12.0], [13.9, 12.0], [14.0, 12.0], [14.1, 12.0], [14.2, 12.0], [14.3, 12.0], [14.4, 12.0], [14.5, 12.0], [14.6, 12.0], [14.7, 12.0], [14.8, 12.0], [14.9, 12.0], [15.0, 12.0], [15.1, 12.0], [15.2, 12.0], [15.3, 12.0], [15.4, 12.0], [15.5, 12.0], [15.6, 12.0], [15.7, 12.0], [15.8, 12.0], [15.9, 12.0], [16.0, 12.0], [16.1, 12.0], [16.2, 12.0], [16.3, 12.0], [16.4, 12.0], [16.5, 12.0], [16.6, 12.0], [16.7, 12.0], [16.8, 12.0], [16.9, 12.0], [17.0, 13.0], [17.1, 13.0], [17.2, 13.0], [17.3, 13.0], [17.4, 13.0], [17.5, 13.0], [17.6, 13.0], [17.7, 13.0], [17.8, 13.0], [17.9, 13.0], [18.0, 13.0], [18.1, 13.0], [18.2, 13.0], [18.3, 13.0], [18.4, 13.0], [18.5, 13.0], [18.6, 13.0], [18.7, 13.0], [18.8, 13.0], [18.9, 13.0], [19.0, 13.0], [19.1, 13.0], [19.2, 13.0], [19.3, 13.0], [19.4, 13.0], [19.5, 13.0], [19.6, 13.0], [19.7, 13.0], [19.8, 13.0], [19.9, 13.0], [20.0, 13.0], [20.1, 13.0], [20.2, 13.0], [20.3, 13.0], [20.4, 13.0], [20.5, 13.0], [20.6, 13.0], [20.7, 13.0], [20.8, 13.0], [20.9, 13.0], [21.0, 13.0], [21.1, 13.0], [21.2, 13.0], [21.3, 13.0], [21.4, 13.0], [21.5, 13.0], [21.6, 13.0], [21.7, 13.0], [21.8, 13.0], [21.9, 13.0], [22.0, 13.0], [22.1, 13.0], [22.2, 13.0], [22.3, 13.0], [22.4, 13.0], [22.5, 13.0], [22.6, 13.0], [22.7, 13.0], [22.8, 13.0], [22.9, 13.0], [23.0, 13.0], [23.1, 13.0], [23.2, 13.0], [23.3, 13.0], [23.4, 13.0], [23.5, 13.0], [23.6, 13.0], [23.7, 13.0], [23.8, 13.0], [23.9, 13.0], [24.0, 13.0], [24.1, 13.0], [24.2, 13.0], [24.3, 13.0], [24.4, 13.0], [24.5, 13.0], [24.6, 13.0], [24.7, 13.0], [24.8, 13.0], [24.9, 13.0], [25.0, 13.0], [25.1, 13.0], [25.2, 13.0], [25.3, 13.0], [25.4, 13.0], [25.5, 13.0], [25.6, 13.0], [25.7, 13.0], [25.8, 14.0], [25.9, 14.0], [26.0, 14.0], [26.1, 14.0], [26.2, 14.0], [26.3, 14.0], [26.4, 14.0], [26.5, 14.0], [26.6, 14.0], [26.7, 14.0], [26.8, 14.0], [26.9, 14.0], [27.0, 14.0], [27.1, 14.0], [27.2, 14.0], [27.3, 14.0], [27.4, 14.0], [27.5, 14.0], [27.6, 14.0], [27.7, 14.0], [27.8, 14.0], [27.9, 14.0], [28.0, 14.0], [28.1, 14.0], [28.2, 14.0], [28.3, 14.0], [28.4, 14.0], [28.5, 14.0], [28.6, 14.0], [28.7, 14.0], [28.8, 14.0], [28.9, 14.0], [29.0, 14.0], [29.1, 14.0], [29.2, 14.0], [29.3, 14.0], [29.4, 14.0], [29.5, 14.0], [29.6, 14.0], [29.7, 14.0], [29.8, 14.0], [29.9, 14.0], [30.0, 14.0], [30.1, 14.0], [30.2, 14.0], [30.3, 14.0], [30.4, 14.0], [30.5, 14.0], [30.6, 14.0], [30.7, 14.0], [30.8, 14.0], [30.9, 14.0], [31.0, 14.0], [31.1, 14.0], [31.2, 14.0], [31.3, 14.0], [31.4, 14.0], [31.5, 14.0], [31.6, 14.0], [31.7, 14.0], [31.8, 14.0], [31.9, 14.0], [32.0, 14.0], [32.1, 14.0], [32.2, 14.0], [32.3, 14.0], [32.4, 14.0], [32.5, 14.0], [32.6, 14.0], [32.7, 14.0], [32.8, 14.0], [32.9, 15.0], [33.0, 15.0], [33.1, 15.0], [33.2, 15.0], [33.3, 15.0], [33.4, 15.0], [33.5, 15.0], [33.6, 15.0], [33.7, 15.0], [33.8, 15.0], [33.9, 15.0], [34.0, 15.0], [34.1, 15.0], [34.2, 15.0], [34.3, 15.0], [34.4, 15.0], [34.5, 15.0], [34.6, 15.0], [34.7, 15.0], [34.8, 15.0], [34.9, 15.0], [35.0, 15.0], [35.1, 15.0], [35.2, 15.0], [35.3, 15.0], [35.4, 15.0], [35.5, 15.0], [35.6, 15.0], [35.7, 15.0], [35.8, 15.0], [35.9, 15.0], [36.0, 15.0], [36.1, 15.0], [36.2, 15.0], [36.3, 15.0], [36.4, 15.0], [36.5, 15.0], [36.6, 15.0], [36.7, 15.0], [36.8, 15.0], [36.9, 15.0], [37.0, 15.0], [37.1, 15.0], [37.2, 15.0], [37.3, 15.0], [37.4, 15.0], [37.5, 15.0], [37.6, 15.0], [37.7, 15.0], [37.8, 15.0], [37.9, 15.0], [38.0, 15.0], [38.1, 15.0], [38.2, 15.0], [38.3, 15.0], [38.4, 15.0], [38.5, 15.0], [38.6, 15.0], [38.7, 15.0], [38.8, 15.0], [38.9, 15.0], [39.0, 15.0], [39.1, 15.0], [39.2, 15.0], [39.3, 15.0], [39.4, 15.0], [39.5, 15.0], [39.6, 15.0], [39.7, 15.0], [39.8, 15.0], [39.9, 15.0], [40.0, 15.0], [40.1, 15.0], [40.2, 15.0], [40.3, 15.0], [40.4, 15.0], [40.5, 15.0], [40.6, 15.0], [40.7, 15.0], [40.8, 15.0], [40.9, 15.0], [41.0, 15.0], [41.1, 15.0], [41.2, 15.0], [41.3, 15.0], [41.4, 16.0], [41.5, 16.0], [41.6, 16.0], [41.7, 16.0], [41.8, 16.0], [41.9, 16.0], [42.0, 16.0], [42.1, 16.0], [42.2, 16.0], [42.3, 16.0], [42.4, 16.0], [42.5, 16.0], [42.6, 16.0], [42.7, 16.0], [42.8, 16.0], [42.9, 16.0], [43.0, 16.0], [43.1, 16.0], [43.2, 16.0], [43.3, 16.0], [43.4, 16.0], [43.5, 16.0], [43.6, 16.0], [43.7, 16.0], [43.8, 16.0], [43.9, 16.0], [44.0, 16.0], [44.1, 16.0], [44.2, 16.0], [44.3, 16.0], [44.4, 16.0], [44.5, 16.0], [44.6, 16.0], [44.7, 16.0], [44.8, 16.0], [44.9, 16.0], [45.0, 16.0], [45.1, 16.0], [45.2, 16.0], [45.3, 16.0], [45.4, 16.0], [45.5, 16.0], [45.6, 16.0], [45.7, 16.0], [45.8, 16.0], [45.9, 16.0], [46.0, 16.0], [46.1, 16.0], [46.2, 16.0], [46.3, 16.0], [46.4, 16.0], [46.5, 16.0], [46.6, 16.0], [46.7, 16.0], [46.8, 16.0], [46.9, 16.0], [47.0, 16.0], [47.1, 16.0], [47.2, 16.0], [47.3, 16.0], [47.4, 16.0], [47.5, 16.0], [47.6, 16.0], [47.7, 16.0], [47.8, 16.0], [47.9, 16.0], [48.0, 16.0], [48.1, 16.0], [48.2, 16.0], [48.3, 16.0], [48.4, 16.0], [48.5, 16.0], [48.6, 16.0], [48.7, 16.0], [48.8, 16.0], [48.9, 16.0], [49.0, 16.0], [49.1, 16.0], [49.2, 16.0], [49.3, 16.0], [49.4, 16.0], [49.5, 16.0], [49.6, 16.0], [49.7, 16.0], [49.8, 16.0], [49.9, 16.0], [50.0, 16.0], [50.1, 16.0], [50.2, 16.0], [50.3, 16.0], [50.4, 16.0], [50.5, 16.0], [50.6, 16.0], [50.7, 16.0], [50.8, 16.0], [50.9, 16.0], [51.0, 16.0], [51.1, 16.0], [51.2, 16.0], [51.3, 16.0], [51.4, 17.0], [51.5, 17.0], [51.6, 17.0], [51.7, 17.0], [51.8, 17.0], [51.9, 17.0], [52.0, 17.0], [52.1, 17.0], [52.2, 17.0], [52.3, 17.0], [52.4, 17.0], [52.5, 17.0], [52.6, 17.0], [52.7, 17.0], [52.8, 17.0], [52.9, 17.0], [53.0, 17.0], [53.1, 17.0], [53.2, 17.0], [53.3, 17.0], [53.4, 17.0], [53.5, 17.0], [53.6, 17.0], [53.7, 17.0], [53.8, 17.0], [53.9, 17.0], [54.0, 17.0], [54.1, 17.0], [54.2, 17.0], [54.3, 17.0], [54.4, 17.0], [54.5, 17.0], [54.6, 17.0], [54.7, 17.0], [54.8, 17.0], [54.9, 17.0], [55.0, 17.0], [55.1, 17.0], [55.2, 17.0], [55.3, 17.0], [55.4, 17.0], [55.5, 17.0], [55.6, 17.0], [55.7, 17.0], [55.8, 17.0], [55.9, 17.0], [56.0, 17.0], [56.1, 17.0], [56.2, 17.0], [56.3, 17.0], [56.4, 17.0], [56.5, 17.0], [56.6, 17.0], [56.7, 17.0], [56.8, 17.0], [56.9, 17.0], [57.0, 17.0], [57.1, 17.0], [57.2, 17.0], [57.3, 17.0], [57.4, 17.0], [57.5, 17.0], [57.6, 17.0], [57.7, 17.0], [57.8, 17.0], [57.9, 17.0], [58.0, 17.0], [58.1, 17.0], [58.2, 17.0], [58.3, 17.0], [58.4, 17.0], [58.5, 17.0], [58.6, 17.0], [58.7, 17.0], [58.8, 17.0], [58.9, 17.0], [59.0, 17.0], [59.1, 17.0], [59.2, 17.0], [59.3, 17.0], [59.4, 17.0], [59.5, 17.0], [59.6, 17.0], [59.7, 17.0], [59.8, 17.0], [59.9, 17.0], [60.0, 17.0], [60.1, 17.0], [60.2, 17.0], [60.3, 17.0], [60.4, 17.0], [60.5, 17.0], [60.6, 17.0], [60.7, 17.0], [60.8, 17.0], [60.9, 17.0], [61.0, 17.0], [61.1, 17.0], [61.2, 18.0], [61.3, 18.0], [61.4, 18.0], [61.5, 18.0], [61.6, 18.0], [61.7, 18.0], [61.8, 18.0], [61.9, 18.0], [62.0, 18.0], [62.1, 18.0], [62.2, 18.0], [62.3, 18.0], [62.4, 18.0], [62.5, 18.0], [62.6, 18.0], [62.7, 18.0], [62.8, 18.0], [62.9, 18.0], [63.0, 18.0], [63.1, 18.0], [63.2, 18.0], [63.3, 18.0], [63.4, 18.0], [63.5, 18.0], [63.6, 18.0], [63.7, 18.0], [63.8, 18.0], [63.9, 18.0], [64.0, 18.0], [64.1, 18.0], [64.2, 18.0], [64.3, 18.0], [64.4, 18.0], [64.5, 18.0], [64.6, 18.0], [64.7, 18.0], [64.8, 18.0], [64.9, 18.0], [65.0, 18.0], [65.1, 18.0], [65.2, 18.0], [65.3, 18.0], [65.4, 18.0], [65.5, 18.0], [65.6, 18.0], [65.7, 18.0], [65.8, 18.0], [65.9, 18.0], [66.0, 18.0], [66.1, 18.0], [66.2, 18.0], [66.3, 18.0], [66.4, 18.0], [66.5, 18.0], [66.6, 18.0], [66.7, 18.0], [66.8, 18.0], [66.9, 18.0], [67.0, 18.0], [67.1, 18.0], [67.2, 18.0], [67.3, 18.0], [67.4, 18.0], [67.5, 18.0], [67.6, 18.0], [67.7, 18.0], [67.8, 18.0], [67.9, 18.0], [68.0, 18.0], [68.1, 18.0], [68.2, 18.0], [68.3, 18.0], [68.4, 18.0], [68.5, 18.0], [68.6, 18.0], [68.7, 18.0], [68.8, 18.0], [68.9, 18.0], [69.0, 18.0], [69.1, 18.0], [69.2, 18.0], [69.3, 18.0], [69.4, 18.0], [69.5, 18.0], [69.6, 18.0], [69.7, 18.0], [69.8, 18.0], [69.9, 18.0], [70.0, 18.0], [70.1, 19.0], [70.2, 19.0], [70.3, 19.0], [70.4, 19.0], [70.5, 19.0], [70.6, 19.0], [70.7, 19.0], [70.8, 19.0], [70.9, 19.0], [71.0, 19.0], [71.1, 19.0], [71.2, 19.0], [71.3, 19.0], [71.4, 19.0], [71.5, 19.0], [71.6, 19.0], [71.7, 19.0], [71.8, 19.0], [71.9, 19.0], [72.0, 19.0], [72.1, 19.0], [72.2, 19.0], [72.3, 19.0], [72.4, 19.0], [72.5, 19.0], [72.6, 19.0], [72.7, 19.0], [72.8, 19.0], [72.9, 19.0], [73.0, 19.0], [73.1, 19.0], [73.2, 19.0], [73.3, 19.0], [73.4, 19.0], [73.5, 19.0], [73.6, 19.0], [73.7, 19.0], [73.8, 19.0], [73.9, 19.0], [74.0, 19.0], [74.1, 19.0], [74.2, 19.0], [74.3, 19.0], [74.4, 19.0], [74.5, 19.0], [74.6, 19.0], [74.7, 19.0], [74.8, 19.0], [74.9, 19.0], [75.0, 19.0], [75.1, 19.0], [75.2, 19.0], [75.3, 19.0], [75.4, 19.0], [75.5, 19.0], [75.6, 19.0], [75.7, 19.0], [75.8, 19.0], [75.9, 19.0], [76.0, 19.0], [76.1, 19.0], [76.2, 19.0], [76.3, 19.0], [76.4, 19.0], [76.5, 19.0], [76.6, 19.0], [76.7, 19.0], [76.8, 19.0], [76.9, 19.0], [77.0, 19.0], [77.1, 19.0], [77.2, 19.0], [77.3, 19.0], [77.4, 19.0], [77.5, 19.0], [77.6, 20.0], [77.7, 20.0], [77.8, 20.0], [77.9, 20.0], [78.0, 20.0], [78.1, 20.0], [78.2, 20.0], [78.3, 20.0], [78.4, 20.0], [78.5, 20.0], [78.6, 20.0], [78.7, 20.0], [78.8, 20.0], [78.9, 20.0], [79.0, 20.0], [79.1, 20.0], [79.2, 20.0], [79.3, 20.0], [79.4, 20.0], [79.5, 20.0], [79.6, 20.0], [79.7, 20.0], [79.8, 20.0], [79.9, 20.0], [80.0, 20.0], [80.1, 20.0], [80.2, 20.0], [80.3, 20.0], [80.4, 20.0], [80.5, 20.0], [80.6, 20.0], [80.7, 20.0], [80.8, 20.0], [80.9, 20.0], [81.0, 20.0], [81.1, 20.0], [81.2, 20.0], [81.3, 20.0], [81.4, 20.0], [81.5, 20.0], [81.6, 20.0], [81.7, 20.0], [81.8, 20.0], [81.9, 20.0], [82.0, 20.0], [82.1, 20.0], [82.2, 20.0], [82.3, 20.0], [82.4, 20.0], [82.5, 20.0], [82.6, 20.0], [82.7, 20.0], [82.8, 20.0], [82.9, 20.0], [83.0, 20.0], [83.1, 20.0], [83.2, 20.0], [83.3, 20.0], [83.4, 20.0], [83.5, 21.0], [83.6, 21.0], [83.7, 21.0], [83.8, 21.0], [83.9, 21.0], [84.0, 21.0], [84.1, 21.0], [84.2, 21.0], [84.3, 21.0], [84.4, 21.0], [84.5, 21.0], [84.6, 21.0], [84.7, 21.0], [84.8, 21.0], [84.9, 21.0], [85.0, 21.0], [85.1, 21.0], [85.2, 21.0], [85.3, 21.0], [85.4, 21.0], [85.5, 21.0], [85.6, 21.0], [85.7, 21.0], [85.8, 21.0], [85.9, 21.0], [86.0, 21.0], [86.1, 21.0], [86.2, 21.0], [86.3, 21.0], [86.4, 21.0], [86.5, 21.0], [86.6, 21.0], [86.7, 21.0], [86.8, 21.0], [86.9, 21.0], [87.0, 21.0], [87.1, 21.0], [87.2, 21.0], [87.3, 21.0], [87.4, 21.0], [87.5, 21.0], [87.6, 21.0], [87.7, 21.0], [87.8, 21.0], [87.9, 21.0], [88.0, 21.0], [88.1, 21.0], [88.2, 21.0], [88.3, 21.0], [88.4, 21.0], [88.5, 21.0], [88.6, 21.0], [88.7, 21.0], [88.8, 21.0], [88.9, 22.0], [89.0, 22.0], [89.1, 22.0], [89.2, 22.0], [89.3, 22.0], [89.4, 22.0], [89.5, 22.0], [89.6, 22.0], [89.7, 22.0], [89.8, 22.0], [89.9, 22.0], [90.0, 22.0], [90.1, 22.0], [90.2, 22.0], [90.3, 22.0], [90.4, 22.0], [90.5, 22.0], [90.6, 22.0], [90.7, 22.0], [90.8, 22.0], [90.9, 22.0], [91.0, 22.0], [91.1, 22.0], [91.2, 22.0], [91.3, 22.0], [91.4, 22.0], [91.5, 22.0], [91.6, 22.0], [91.7, 22.0], [91.8, 22.0], [91.9, 22.0], [92.0, 22.0], [92.1, 22.0], [92.2, 22.0], [92.3, 22.0], [92.4, 22.0], [92.5, 22.0], [92.6, 22.0], [92.7, 22.0], [92.8, 23.0], [92.9, 23.0], [93.0, 23.0], [93.1, 23.0], [93.2, 23.0], [93.3, 23.0], [93.4, 23.0], [93.5, 23.0], [93.6, 23.0], [93.7, 23.0], [93.8, 23.0], [93.9, 23.0], [94.0, 23.0], [94.1, 23.0], [94.2, 23.0], [94.3, 23.0], [94.4, 23.0], [94.5, 23.0], [94.6, 23.0], [94.7, 23.0], [94.8, 23.0], [94.9, 23.0], [95.0, 24.0], [95.1, 24.0], [95.2, 24.0], [95.3, 24.0], [95.4, 24.0], [95.5, 24.0], [95.6, 24.0], [95.7, 24.0], [95.8, 24.0], [95.9, 24.0], [96.0, 24.0], [96.1, 24.0], [96.2, 24.0], [96.3, 24.0], [96.4, 24.0], [96.5, 24.0], [96.6, 24.0], [96.7, 25.0], [96.8, 25.0], [96.9, 25.0], [97.0, 25.0], [97.1, 25.0], [97.2, 25.0], [97.3, 25.0], [97.4, 25.0], [97.5, 25.0], [97.6, 25.0], [97.7, 25.0], [97.8, 25.0], [97.9, 26.0], [98.0, 26.0], [98.1, 26.0], [98.2, 26.0], [98.3, 26.0], [98.4, 26.0], [98.5, 26.0], [98.6, 26.0], [98.7, 27.0], [98.8, 27.0], [98.9, 27.0], [99.0, 27.0], [99.1, 28.0], [99.2, 28.0], [99.3, 28.0], [99.4, 29.0], [99.5, 29.0], [99.6, 30.0], [99.7, 30.0], [99.8, 32.0], [99.9, 34.0], [100.0, 46.0]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 45000.0, "minX": 0.0, "maxY": 45000.0, "series": [{"data": [[0.0, 45000.0]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4.9E-324, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 4940.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 40060.0, "series": [{"data": [[0.0, 40060.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 4940.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.230769230769231, "minX": 1.731748535E12, "maxY": 3.7461928934010156, "series": [{"data": [[1.731748738E12, 3.080645161290323], [1.731748566E12, 2.9206349206349205], [1.731748656E12, 3.0756756756756736], [1.731748697E12, 2.963157894736842], [1.731748615E12, 3.064171122994653], [1.731748746E12, 3.112299465240643], [1.731748574E12, 3.356020942408377], [1.731748664E12, 2.983606557377051], [1.731748705E12, 3.0000000000000018], [1.731748623E12, 3.1315789473684212], [1.731748754E12, 2.9148936170212747], [1.731748541E12, 3.0164835164835155], [1.731748582E12, 2.994708994708994], [1.731748672E12, 3.097826086956522], [1.731748713E12, 2.9946524064171136], [1.731748631E12, 3.0319148936170204], [1.731748762E12, 3.13903743315508], [1.731748549E12, 2.8791208791208804], [1.73174859E12, 3.208556149732621], [1.73174868E12, 3.103825136612022], [1.731748721E12, 3.0000000000000004], [1.731748639E12, 3.077720207253884], [1.73174877E12, 3.16042780748663], [1.731748557E12, 3.129729729729731], [1.731748598E12, 3.15873015873016], [1.731748688E12, 2.9171270718232036], [1.731748729E12, 3.212765957446808], [1.731748647E12, 3.09090909090909], [1.731748565E12, 2.9239130434782594], [1.731748606E12, 3.048128342245989], [1.731748567E12, 2.9090909090909096], [1.731748698E12, 2.9421052631578943], [1.731748739E12, 3.224043715846995], [1.731748616E12, 3.0648648648648655], [1.731748657E12, 3.180851063829787], [1.731748575E12, 3.042328042328043], [1.731748706E12, 2.8941798941798935], [1.731748747E12, 3.096774193548389], [1.731748624E12, 3.0327868852459], [1.731748665E12, 3.0478723404255317], [1.731748583E12, 2.9521276595744683], [1.731748714E12, 3.010526315789473], [1.731748542E12, 3.072916666666665], [1.731748755E12, 2.9670329670329676], [1.731748632E12, 3.070270270270271], [1.731748673E12, 2.9684210526315784], [1.731748591E12, 3.164893617021277], [1.731748722E12, 2.8617021276595738], [1.73174855E12, 3.0680628272251314], [1.731748763E12, 3.2622950819672134], [1.73174864E12, 3.027624309392267], [1.731748681E12, 3.173684210526315], [1.731748599E12, 3.0052631578947357], [1.73174873E12, 3.225130890052357], [1.731748558E12, 3.24607329842932], [1.731748771E12, 3.3097826086956506], [1.731748648E12, 3.13586956521739], [1.731748689E12, 3.0631578947368427], [1.731748607E12, 3.043010752688173], [1.731748568E12, 3.027624309392266], [1.731748609E12, 3.2620320855614984], [1.73174874E12, 3.3092783505154633], [1.731748658E12, 3.0157894736842112], [1.731748699E12, 2.983606557377049], [1.731748576E12, 3.0591397849462365], [1.731748617E12, 3.18181818181818], [1.731748535E12, 3.4782608695652164], [1.731748748E12, 3.047120418848167], [1.731748666E12, 2.9206349206349205], [1.731748707E12, 2.939560439560438], [1.731748584E12, 2.9782608695652146], [1.731748625E12, 3.1099476439790554], [1.731748543E12, 3.000000000000001], [1.731748756E12, 3.1010638297872344], [1.731748674E12, 2.920212765957447], [1.731748715E12, 3.032608695652174], [1.731748592E12, 3.1891891891891895], [1.731748633E12, 3.197860962566846], [1.731748551E12, 2.9421052631578934], [1.731748764E12, 3.3631578947368435], [1.731748682E12, 3.010471204188481], [1.731748723E12, 2.994535519125684], [1.7317486E12, 2.994565217391304], [1.731748641E12, 3.169312169312169], [1.731748559E12, 3.122994652406418], [1.731748772E12, 3.3510638297872344], [1.73174869E12, 2.93121693121693], [1.731748731E12, 3.2108108108108113], [1.731748608E12, 3.264864864864863], [1.731748649E12, 3.27807486631016], [1.73174861E12, 3.2857142857142856], [1.731748651E12, 3.213903743315507], [1.731748741E12, 3.177419354838709], [1.731748569E12, 3.2566844919786098], [1.7317487E12, 2.9842931937172783], [1.731748618E12, 3.099476439790577], [1.731748659E12, 3.0320855614973268], [1.731748536E12, 3.7225130890052345], [1.731748749E12, 2.9259259259259274], [1.731748577E12, 3.0157068062827244], [1.731748708E12, 2.9792746113989628], [1.731748626E12, 2.897849462365592], [1.731748667E12, 3.0267379679144377], [1.731748544E12, 3.0109289617486357], [1.731748757E12, 3.1122994652406417], [1.731748585E12, 3.0317460317460325], [1.731748716E12, 2.9585492227979264], [1.731748634E12, 2.9841269841269833], [1.731748675E12, 3.102150537634409], [1.731748552E12, 2.9890710382513657], [1.731748765E12, 3.2684210526315782], [1.731748593E12, 3.209677419354837], [1.731748724E12, 2.9947643979057568], [1.731748642E12, 2.8994708994709], [1.731748683E12, 3.0273224043715863], [1.73174856E12, 3.219780219780219], [1.731748773E12, 3.206349206349207], [1.731748601E12, 3.0370370370370385], [1.731748732E12, 3.120418848167539], [1.73174865E12, 3.1428571428571432], [1.731748691E12, 2.9836956521739153], [1.731748652E12, 3.205263157894738], [1.73174857E12, 3.303664921465972], [1.731748611E12, 3.3796791443850287], [1.731748701E12, 2.8449197860962574], [1.731748742E12, 3.3494623655913993], [1.73174866E12, 2.8994708994708978], [1.731748578E12, 2.967914438502673], [1.731748619E12, 3.096774193548387], [1.731748709E12, 2.8870967741935485], [1.73174875E12, 3.037837837837836], [1.731748537E12, 3.5515463917525767], [1.731748668E12, 3.0053191489361706], [1.731748586E12, 2.952631578947368], [1.731748627E12, 3.150537634408604], [1.731748717E12, 2.886486486486485], [1.731748758E12, 3.3191489361702127], [1.731748545E12, 2.9157894736842107], [1.731748676E12, 2.9263157894736818], [1.731748594E12, 3.2222222222222228], [1.731748635E12, 3.166666666666667], [1.731748725E12, 3.0053475935828886], [1.731748766E12, 3.281914893617021], [1.731748553E12, 3.026455026455027], [1.731748684E12, 3.072916666666667], [1.731748602E12, 2.8770053475935815], [1.731748643E12, 3.0537634408602155], [1.731748733E12, 3.021505376344089], [1.731748774E12, 3.279569892473119], [1.731748561E12, 3.2953367875647683], [1.731748692E12, 3.057894736842104], [1.731748653E12, 3.172972972972972], [1.731748694E12, 3.079787234042553], [1.731748612E12, 3.1428571428571423], [1.731748743E12, 3.232804232804234], [1.731748571E12, 3.392473118279571], [1.731748661E12, 2.9572192513368982], [1.731748702E12, 3.063829787234043], [1.73174862E12, 2.999999999999998], [1.731748538E12, 3.7461928934010156], [1.731748751E12, 3.058201058201059], [1.731748579E12, 3.0641711229946518], [1.731748669E12, 3.06878306878307], [1.73174871E12, 3.106951871657754], [1.731748628E12, 3.02116402116402], [1.731748546E12, 3.0212765957446823], [1.731748759E12, 3.1236559139784923], [1.731748587E12, 2.9945945945945964], [1.731748677E12, 2.9308510638297856], [1.731748718E12, 3.0687830687830684], [1.731748636E12, 3.0684210526315776], [1.731748554E12, 3.0161290322580636], [1.731748767E12, 3.182795698924733], [1.731748595E12, 3.242105263157894], [1.731748685E12, 2.941489361702127], [1.731748726E12, 3.122994652406417], [1.731748644E12, 2.9578947368421042], [1.731748562E12, 3.06842105263158], [1.731748775E12, 2.230769230769231], [1.731748603E12, 3.0802139037433167], [1.731748693E12, 2.941176470588236], [1.731748734E12, 3.3422459893048138], [1.731748695E12, 2.98952879581152], [1.731748613E12, 3.005376344086019], [1.731748654E12, 3.3138297872340416], [1.731748744E12, 3.053475935828877], [1.731748572E12, 3.2192513368983953], [1.731748703E12, 3.020942408376963], [1.731748621E12, 3.0109289617486326], [1.731748662E12, 3.032258064516129], [1.731748752E12, 2.8870967741935485], [1.73174858E12, 2.957446808510638], [1.731748711E12, 2.9583333333333335], [1.731748539E12, 3.3684210526315774], [1.731748629E12, 2.9677419354838683], [1.73174867E12, 3.047872340425531], [1.73174876E12, 3.0160427807486636], [1.731748588E12, 2.9682539682539675], [1.731748719E12, 2.9842931937172783], [1.731748547E12, 3.0740740740740744], [1.731748637E12, 2.9891891891891884], [1.731748678E12, 3.1358695652173916], [1.731748768E12, 3.1604278074866294], [1.731748596E12, 3.1269841269841274], [1.731748727E12, 3.0374331550802145], [1.731748555E12, 3.315508021390375], [1.731748645E12, 2.946236559139785], [1.731748686E12, 3.064171122994653], [1.731748604E12, 3.1382978723404253], [1.731748735E12, 3.1256544502617802], [1.731748563E12, 3.0744680851063815], [1.731748696E12, 2.9395604395604384], [1.731748737E12, 3.2], [1.731748655E12, 3.2041884816753923], [1.731748573E12, 3.208556149732621], [1.731748614E12, 3.208333333333333], [1.731748704E12, 2.8342541436464086], [1.731748745E12, 3.227513227513226], [1.731748663E12, 2.994736842105266], [1.731748581E12, 2.9462365591397854], [1.731748622E12, 3.1937172774869094], [1.731748712E12, 2.9447513812154686], [1.73174854E12, 3.223958333333332], [1.731748753E12, 3.0000000000000013], [1.731748671E12, 2.9892473118279574], [1.731748589E12, 3.032432432432431], [1.73174863E12, 3.16842105263158], [1.73174872E12, 2.861878453038675], [1.731748548E12, 2.9680851063829783], [1.731748761E12, 3.391534391534392], [1.731748679E12, 3.137566137566137], [1.731748597E12, 3.0053763440860197], [1.731748638E12, 3.122994652406416], [1.731748728E12, 3.0655737704918047], [1.731748556E12, 3.2606382978723403], [1.731748769E12, 3.2894736842105274], [1.731748687E12, 2.9894736842105285], [1.731748605E12, 2.9468085106382977], [1.731748646E12, 3.1489361702127647], [1.731748736E12, 2.9562841530054644], [1.731748564E12, 2.9417989417989427]], "isOverall": false, "label": "线程组", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.731748775E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 11.750000000000002, "minX": 1.0, "maxY": 24.6, "series": [{"data": [[2.0, 13.330183988065627], [4.0, 19.13366336633664], [1.0, 11.750000000000002], [5.0, 24.6], [3.0, 15.947646377280162]], "isOverall": false, "label": "Products", "isController": false}, {"data": [[3.0855777777777798, 16.246599999999887]], "isOverall": false, "label": "Products-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 5.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 12173.0, "minX": 1.731748535E12, "maxY": 286582.0, "series": [{"data": [[1.731748738E12, 265710.0], [1.731748566E12, 269450.0], [1.731748656E12, 274997.0], [1.731748697E12, 270110.0], [1.731748615E12, 266274.0], [1.731748746E12, 267354.0], [1.731748574E12, 274584.0], [1.731748664E12, 275448.0], [1.731748705E12, 270080.0], [1.731748623E12, 272446.0], [1.731748754E12, 268363.0], [1.731748541E12, 278536.0], [1.731748582E12, 271800.0], [1.731748672E12, 278489.0], [1.731748713E12, 266994.0], [1.731748631E12, 267264.0], [1.731748762E12, 267148.0], [1.731748549E12, 275502.0], [1.73174859E12, 270455.0], [1.73174868E12, 278954.0], [1.731748721E12, 271851.0], [1.731748639E12, 274046.0], [1.73174877E12, 266419.0], [1.731748557E12, 277521.0], [1.731748598E12, 274309.0], [1.731748688E12, 275370.0], [1.731748729E12, 269277.0], [1.731748647E12, 265283.0], [1.731748565E12, 276607.0], [1.731748606E12, 272634.0], [1.731748567E12, 266613.0], [1.731748698E12, 269153.0], [1.731748739E12, 276104.0], [1.731748616E12, 276625.0], [1.731748657E12, 272970.0], [1.731748575E12, 269967.0], [1.731748706E12, 267570.0], [1.731748747E12, 280187.0], [1.731748624E12, 272439.0], [1.731748665E12, 268326.0], [1.731748583E12, 268363.0], [1.731748714E12, 270987.0], [1.731748542E12, 275147.0], [1.731748755E12, 274739.0], [1.731748632E12, 275992.0], [1.731748673E12, 270734.0], [1.731748591E12, 268328.0], [1.731748722E12, 268213.0], [1.73174855E12, 273618.0], [1.731748763E12, 273228.0], [1.73174864E12, 270067.0], [1.731748681E12, 269254.0], [1.731748599E12, 271563.0], [1.73174873E12, 272353.0], [1.731748558E12, 273508.0], [1.731748771E12, 275246.0], [1.731748648E12, 272925.0], [1.731748689E12, 269756.0], [1.731748607E12, 264636.0], [1.731748568E12, 273835.0], [1.731748609E12, 269624.0], [1.73174874E12, 278150.0], [1.731748658E12, 271087.0], [1.731748699E12, 280261.0], [1.731748576E12, 280615.0], [1.731748617E12, 271251.0], [1.731748535E12, 161871.0], [1.731748748E12, 276174.0], [1.731748666E12, 269908.0], [1.731748707E12, 280911.0], [1.731748584E12, 277708.0], [1.731748625E12, 278369.0], [1.731748543E12, 267178.0], [1.731748756E12, 272028.0], [1.731748674E12, 267165.0], [1.731748715E12, 279767.0], [1.731748592E12, 276429.0], [1.731748633E12, 272285.0], [1.731748551E12, 271741.0], [1.731748764E12, 274239.0], [1.731748682E12, 272285.0], [1.731748723E12, 277462.0], [1.7317486E12, 275260.0], [1.731748641E12, 276956.0], [1.731748559E12, 266487.0], [1.731748772E12, 271383.0], [1.73174869E12, 268606.0], [1.731748731E12, 280165.0], [1.731748608E12, 277029.0], [1.731748649E12, 272717.0], [1.73174861E12, 266601.0], [1.731748651E12, 279245.0], [1.731748741E12, 263853.0], [1.731748569E12, 272617.0], [1.7317487E12, 270498.0], [1.731748618E12, 269033.0], [1.731748659E12, 279961.0], [1.731748536E12, 286582.0], [1.731748749E12, 264612.0], [1.731748577E12, 273639.0], [1.731748708E12, 269967.0], [1.731748626E12, 261138.0], [1.731748667E12, 281450.0], [1.731748544E12, 280738.0], [1.731748757E12, 262007.0], [1.731748585E12, 275512.0], [1.731748716E12, 273193.0], [1.731748634E12, 263912.0], [1.731748675E12, 284322.0], [1.731748552E12, 277865.0], [1.731748765E12, 267804.0], [1.731748593E12, 267959.0], [1.731748724E12, 273155.0], [1.731748642E12, 261932.0], [1.731748683E12, 279501.0], [1.73174856E12, 274693.0], [1.731748773E12, 267322.0], [1.731748601E12, 273931.0], [1.731748732E12, 273458.0], [1.73174865E12, 269314.0], [1.731748691E12, 281073.0], [1.731748652E12, 271503.0], [1.73174857E12, 266491.0], [1.731748611E12, 283155.0], [1.731748701E12, 268539.0], [1.731748742E12, 281609.0], [1.73174866E12, 269014.0], [1.731748578E12, 264106.0], [1.731748619E12, 281277.0], [1.731748709E12, 266903.0], [1.73174875E12, 281356.0], [1.731748537E12, 280613.0], [1.731748668E12, 269637.0], [1.731748586E12, 266238.0], [1.731748627E12, 282161.0], [1.731748717E12, 263774.0], [1.731748758E12, 282147.0], [1.731748545E12, 269112.0], [1.731748676E12, 268672.0], [1.731748594E12, 266327.0], [1.731748635E12, 283442.0], [1.731748725E12, 263728.0], [1.731748766E12, 282229.0], [1.731748553E12, 269224.0], [1.731748684E12, 272963.0], [1.731748602E12, 261846.0], [1.731748643E12, 283312.0], [1.731748733E12, 262768.0], [1.731748774E12, 280675.0], [1.731748561E12, 276967.0], [1.731748692E12, 269824.0], [1.731748653E12, 267390.0], [1.731748694E12, 281352.0], [1.731748612E12, 270908.0], [1.731748743E12, 270314.0], [1.731748571E12, 281609.0], [1.731748661E12, 271628.0], [1.731748702E12, 282001.0], [1.73174862E12, 270607.0], [1.731748538E12, 276619.0], [1.731748751E12, 270314.0], [1.731748579E12, 282724.0], [1.731748669E12, 270229.0], [1.73174871E12, 280490.0], [1.731748628E12, 268862.0], [1.731748546E12, 267543.0], [1.731748759E12, 270544.0], [1.731748587E12, 277863.0], [1.731748677E12, 266982.0], [1.731748718E12, 283907.0], [1.731748636E12, 269929.0], [1.731748554E12, 262219.0], [1.731748767E12, 269642.0], [1.731748595E12, 286417.0], [1.731748685E12, 266313.0], [1.731748726E12, 280485.0], [1.731748644E12, 271448.0], [1.731748562E12, 268918.0], [1.731748775E12, 74166.0], [1.731748603E12, 280738.0], [1.731748693E12, 268414.0], [1.731748734E12, 282144.0], [1.731748695E12, 269287.0], [1.731748613E12, 270836.0], [1.731748654E12, 280019.0], [1.731748744E12, 276160.0], [1.731748572E12, 269070.0], [1.731748703E12, 268949.0], [1.731748621E12, 266424.0], [1.731748662E12, 275781.0], [1.731748752E12, 274699.0], [1.73174858E12, 270587.0], [1.731748711E12, 270906.0], [1.731748539E12, 286416.0], [1.731748629E12, 271198.0], [1.73174867E12, 281397.0], [1.73174876E12, 272110.0], [1.731748588E12, 273069.0], [1.731748719E12, 267715.0], [1.731748547E12, 283295.0], [1.731748637E12, 269235.0], [1.731748678E12, 278770.0], [1.731748768E12, 272438.0], [1.731748596E12, 274848.0], [1.731748727E12, 267869.0], [1.731748555E12, 279913.0], [1.731748645E12, 269549.0], [1.731748686E12, 283412.0], [1.731748604E12, 274511.0], [1.731748735E12, 272403.0], [1.731748563E12, 281972.0], [1.731748696E12, 277111.0], [1.731748737E12, 272666.0], [1.731748655E12, 272519.0], [1.731748573E12, 274620.0], [1.731748614E12, 282054.0], [1.731748704E12, 276129.0], [1.731748745E12, 271800.0], [1.731748663E12, 271309.0], [1.731748581E12, 274519.0], [1.731748622E12, 279121.0], [1.731748712E12, 275508.0], [1.73174854E12, 269216.0], [1.731748753E12, 273261.0], [1.731748671E12, 263899.0], [1.731748589E12, 271497.0], [1.73174863E12, 280838.0], [1.73174872E12, 276763.0], [1.731748548E12, 265902.0], [1.731748761E12, 275391.0], [1.731748679E12, 265275.0], [1.731748597E12, 271274.0], [1.731748638E12, 277151.0], [1.731748728E12, 273923.0], [1.731748556E12, 269950.0], [1.731748769E12, 278472.0], [1.731748687E12, 267068.0], [1.731748605E12, 273407.0], [1.731748646E12, 279465.0], [1.731748736E12, 273479.0], [1.731748564E12, 270774.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.731748738E12, 44030.0], [1.731748566E12, 44630.0], [1.731748656E12, 43785.0], [1.731748697E12, 44950.0], [1.731748615E12, 44539.0], [1.731748746E12, 44269.0], [1.731748574E12, 45174.0], [1.731748664E12, 43389.0], [1.731748705E12, 44914.0], [1.731748623E12, 45300.0], [1.731748754E12, 44494.0], [1.731748541E12, 43106.0], [1.731748582E12, 44715.0], [1.731748672E12, 43616.0], [1.731748713E12, 44187.0], [1.731748631E12, 44798.0], [1.731748762E12, 44404.0], [1.731748549E12, 43121.0], [1.73174859E12, 44166.0], [1.73174868E12, 43394.0], [1.731748721E12, 44880.0], [1.731748639E12, 45876.0], [1.73174877E12, 44458.0], [1.731748557E12, 43760.0], [1.731748598E12, 44692.0], [1.731748688E12, 42878.0], [1.731748729E12, 44423.0], [1.731748647E12, 44392.0], [1.731748565E12, 43513.0], [1.731748606E12, 44224.0], [1.731748567E12, 44235.0], [1.731748698E12, 44654.0], [1.731748739E12, 43242.0], [1.731748616E12, 43498.0], [1.731748657E12, 44299.0], [1.731748575E12, 44710.0], [1.731748706E12, 44474.0], [1.731748747E12, 43908.0], [1.731748624E12, 43012.0], [1.731748665E12, 44311.0], [1.731748583E12, 44494.0], [1.731748714E12, 44805.0], [1.731748542E12, 45355.0], [1.731748755E12, 42999.0], [1.731748632E12, 43537.0], [1.731748673E12, 44833.0], [1.731748591E12, 44652.0], [1.731748722E12, 44346.0], [1.73174855E12, 45108.0], [1.731748763E12, 43130.0], [1.73174864E12, 42699.0], [1.731748681E12, 44941.0], [1.731748599E12, 45115.0], [1.73174873E12, 45144.0], [1.731748558E12, 45098.0], [1.731748771E12, 43309.0], [1.731748648E12, 43497.0], [1.731748689E12, 44941.0], [1.731748607E12, 44242.0], [1.731748568E12, 42830.0], [1.731748609E12, 44277.0], [1.73174874E12, 45861.0], [1.731748658E12, 44735.0], [1.731748699E12, 43517.0], [1.731748576E12, 43935.0], [1.731748617E12, 44295.0], [1.731748535E12, 27255.0], [1.731748748E12, 45211.0], [1.731748666E12, 44381.0], [1.731748707E12, 43265.0], [1.731748584E12, 43458.0], [1.731748625E12, 45267.0], [1.731748543E12, 44555.0], [1.731748756E12, 44479.0], [1.731748674E12, 44138.0], [1.731748715E12, 43652.0], [1.731748592E12, 43642.0], [1.731748633E12, 44186.0], [1.731748551E12, 44805.0], [1.731748764E12, 44945.0], [1.731748682E12, 44809.0], [1.731748723E12, 43379.0], [1.7317486E12, 43422.0], [1.731748641E12, 44576.0], [1.731748559E12, 44221.0], [1.731748772E12, 44520.0], [1.73174869E12, 44411.0], [1.731748731E12, 43757.0], [1.731748608E12, 43525.0], [1.731748649E12, 44074.0], [1.73174861E12, 44396.0], [1.731748651E12, 44428.0], [1.731748741E12, 43878.0], [1.731748569E12, 44284.0], [1.7317487E12, 45278.0], [1.731748618E12, 44873.0], [1.731748659E12, 44439.0], [1.731748536E12, 45033.0], [1.731748749E12, 44555.0], [1.731748577E12, 45168.0], [1.731748708E12, 45728.0], [1.731748626E12, 43654.0], [1.731748667E12, 44470.0], [1.731748544E12, 43454.0], [1.731748757E12, 43946.0], [1.731748585E12, 44734.0], [1.731748716E12, 45706.0], [1.731748634E12, 44438.0], [1.731748675E12, 44281.0], [1.731748552E12, 43400.0], [1.731748765E12, 44645.0], [1.731748593E12, 43951.0], [1.731748724E12, 45187.0], [1.731748642E12, 44429.0], [1.731748683E12, 43587.0], [1.73174856E12, 43078.0], [1.731748773E12, 44396.0], [1.731748601E12, 44722.0], [1.731748732E12, 45177.0], [1.73174865E12, 44474.0], [1.731748691E12, 43760.0], [1.731748652E12, 45021.0], [1.73174857E12, 45005.0], [1.731748611E12, 44445.0], [1.731748701E12, 43959.0], [1.731748742E12, 43951.0], [1.73174866E12, 44749.0], [1.731748578E12, 44130.0], [1.731748619E12, 44182.0], [1.731748709E12, 43743.0], [1.73174875E12, 43699.0], [1.731748537E12, 45895.0], [1.731748668E12, 44610.0], [1.731748586E12, 44753.0], [1.731748627E12, 44209.0], [1.731748717E12, 43570.0], [1.731748758E12, 44560.0], [1.731748545E12, 44968.0], [1.731748676E12, 45031.0], [1.731748594E12, 44420.0], [1.731748635E12, 44249.0], [1.731748725E12, 44093.0], [1.731748766E12, 44593.0], [1.731748553E12, 44707.0], [1.731748684E12, 45512.0], [1.731748602E12, 43865.0], [1.731748643E12, 44216.0], [1.731748733E12, 43851.0], [1.731748774E12, 44202.0], [1.731748561E12, 45627.0], [1.731748692E12, 45026.0], [1.731748653E12, 43377.0], [1.731748694E12, 44502.0], [1.731748612E12, 44687.0], [1.731748743E12, 44792.0], [1.731748571E12, 43951.0], [1.731748661E12, 43845.0], [1.731748702E12, 44480.0], [1.73174862E12, 44707.0], [1.731748538E12, 46435.0], [1.731748751E12, 44792.0], [1.731748579E12, 44167.0], [1.731748669E12, 44268.0], [1.73174871E12, 44230.0], [1.731748628E12, 44729.0], [1.731748546E12, 44311.0], [1.731748759E12, 44034.0], [1.731748587E12, 43762.0], [1.731748677E12, 44000.0], [1.731748718E12, 44693.0], [1.731748636E12, 44944.0], [1.731748554E12, 43854.0], [1.731748767E12, 44018.0], [1.731748595E12, 45073.0], [1.731748685E12, 44118.0], [1.731748726E12, 44168.0], [1.731748644E12, 45031.0], [1.731748562E12, 44817.0], [1.731748775E12, 12173.0], [1.731748603E12, 44377.0], [1.731748693E12, 43968.0], [1.731748734E12, 44203.0], [1.731748695E12, 45060.0], [1.731748613E12, 43747.0], [1.731748654E12, 44575.0], [1.731748744E12, 44102.0], [1.731748572E12, 44351.0], [1.731748703E12, 45100.0], [1.731748621E12, 43037.0], [1.731748662E12, 44107.0], [1.731748752E12, 43877.0], [1.73174858E12, 44531.0], [1.731748711E12, 45359.0], [1.731748539E12, 44836.0], [1.731748629E12, 43726.0], [1.73174867E12, 44620.0], [1.73174876E12, 44076.0], [1.731748588E12, 44792.0], [1.731748719E12, 45064.0], [1.731748547E12, 44674.0], [1.731748637E12, 43462.0], [1.731748678E12, 43728.0], [1.731748768E12, 44055.0], [1.731748596E12, 44732.0], [1.731748727E12, 44243.0], [1.731748555E12, 44182.0], [1.731748645E12, 43642.0], [1.731748686E12, 44349.0], [1.731748604E12, 44496.0], [1.731748735E12, 45161.0], [1.731748563E12, 44389.0], [1.731748696E12, 43097.0], [1.731748737E12, 44918.0], [1.731748655E12, 45292.0], [1.731748573E12, 44084.0], [1.731748614E12, 45410.0], [1.731748704E12, 42854.0], [1.731748745E12, 44715.0], [1.731748663E12, 44995.0], [1.731748581E12, 43895.0], [1.731748622E12, 45116.0], [1.731748712E12, 42809.0], [1.73174854E12, 45388.0], [1.731748753E12, 44940.0], [1.731748671E12, 44003.0], [1.731748589E12, 43607.0], [1.73174863E12, 44922.0], [1.73174872E12, 42881.0], [1.731748548E12, 44360.0], [1.731748761E12, 44719.0], [1.731748679E12, 44541.0], [1.731748597E12, 43846.0], [1.731748638E12, 44296.0], [1.731748728E12, 43283.0], [1.731748556E12, 44468.0], [1.731748769E12, 44966.0], [1.731748687E12, 44814.0], [1.731748605E12, 44319.0], [1.731748646E12, 44530.0], [1.731748736E12, 43292.0], [1.731748564E12, 44733.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.731748775E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 13.461538461538458, "minX": 1.731748535E12, "maxY": 18.81675392670156, "series": [{"data": [[1.731748738E12, 16.306451612903224], [1.731748566E12, 15.248677248677248], [1.731748656E12, 16.421621621621618], [1.731748697E12, 15.447368421052621], [1.731748615E12, 16.080213903743314], [1.731748746E12, 16.481283422459903], [1.731748574E12, 17.42931937172775], [1.731748664E12, 16.153005464480874], [1.731748705E12, 15.578947368421055], [1.731748623E12, 16.41052631578947], [1.731748754E12, 15.271276595744679], [1.731748541E12, 16.13736263736264], [1.731748582E12, 15.613756613756616], [1.731748672E12, 16.619565217391308], [1.731748713E12, 15.647058823529408], [1.731748631E12, 15.845744680851059], [1.731748762E12, 16.679144385026728], [1.731748549E12, 15.280219780219777], [1.73174859E12, 16.9090909090909], [1.73174868E12, 16.710382513661216], [1.731748721E12, 15.478947368421052], [1.731748639E12, 15.968911917098445], [1.73174877E12, 16.764705882352946], [1.731748557E12, 16.659459459459452], [1.731748598E12, 16.492063492063494], [1.731748688E12, 15.939226519337023], [1.731748729E12, 16.824468085106393], [1.731748647E12, 16.358288770053484], [1.731748565E12, 15.467391304347828], [1.731748606E12, 15.95721925133691], [1.731748567E12, 15.310160427807482], [1.731748698E12, 15.363157894736839], [1.731748739E12, 17.6120218579235], [1.731748616E12, 16.464864864864857], [1.731748657E12, 16.851063829787233], [1.731748575E12, 15.925925925925922], [1.731748706E12, 15.269841269841269], [1.731748747E12, 16.50537634408602], [1.731748624E12, 16.256830601092904], [1.731748665E12, 15.803191489361694], [1.731748583E12, 15.585106382978731], [1.731748714E12, 15.71052631578947], [1.731748542E12, 15.796874999999996], [1.731748755E12, 16.098901098901106], [1.731748632E12, 16.481081081081093], [1.731748673E12, 15.473684210526319], [1.731748591E12, 16.776595744680854], [1.731748722E12, 15.14893617021277], [1.73174855E12, 15.806282722513089], [1.731748763E12, 17.650273224043723], [1.73174864E12, 16.491712707182323], [1.731748681E12, 16.389473684210525], [1.731748599E12, 15.721052631578951], [1.73174873E12, 16.931937172774862], [1.731748558E12, 16.602094240837715], [1.731748771E12, 17.728260869565204], [1.731748648E12, 16.815217391304344], [1.731748689E12, 15.884210526315783], [1.731748607E12, 16.166666666666664], [1.731748568E12, 16.58563535911602], [1.731748609E12, 17.13368983957221], [1.73174874E12, 16.989690721649495], [1.731748658E12, 15.526315789473685], [1.731748699E12, 15.841530054644814], [1.731748576E12, 16.284946236559136], [1.731748617E12, 16.86096256684492], [1.731748535E12, 18.28695652173913], [1.731748748E12, 15.979057591623036], [1.731748666E12, 15.238095238095234], [1.731748707E12, 15.939560439560447], [1.731748584E12, 16.070652173913047], [1.731748625E12, 16.099476439790585], [1.731748543E12, 15.656084656084658], [1.731748756E12, 16.35106382978724], [1.731748674E12, 15.324468085106382], [1.731748715E12, 16.282608695652172], [1.731748592E12, 17.04864864864864], [1.731748633E12, 16.609625668449183], [1.731748551E12, 15.310526315789476], [1.731748764E12, 17.547368421052646], [1.731748682E12, 15.685863874345554], [1.731748723E12, 16.03825136612022], [1.7317486E12, 16.103260869565215], [1.731748641E12, 16.59788359788359], [1.731748559E12, 16.465240641711215], [1.731748772E12, 17.53191489361703], [1.73174869E12, 15.338624338624337], [1.731748731E12, 17.15675675675676], [1.731748608E12, 17.54594594594594], [1.731748649E12, 17.540106951871646], [1.73174861E12, 17.158730158730165], [1.731748651E12, 16.850267379679146], [1.731748741E12, 16.688172043010752], [1.731748569E12, 17.368983957219243], [1.7317487E12, 15.560209424083768], [1.731748618E12, 15.947643979057593], [1.731748659E12, 15.80748663101605], [1.731748536E12, 18.81675392670156], [1.731748749E12, 15.216931216931217], [1.731748577E12, 15.701570680628272], [1.731748708E12, 15.150259067357508], [1.731748626E12, 15.290322580645157], [1.731748667E12, 16.117647058823533], [1.731748544E12, 16.01092896174863], [1.731748757E12, 16.240641711229948], [1.731748585E12, 15.936507936507939], [1.731748716E12, 15.290155440414503], [1.731748634E12, 15.67724867724868], [1.731748675E12, 16.55376344086022], [1.731748552E12, 15.786885245901638], [1.731748765E12, 16.95263157894737], [1.731748593E12, 16.999999999999993], [1.731748724E12, 15.738219895287953], [1.731748642E12, 15.100529100529098], [1.731748683E12, 16.278688524590162], [1.73174856E12, 17.593406593406595], [1.731748773E12, 16.793650793650798], [1.731748601E12, 15.899470899470895], [1.731748732E12, 16.000000000000004], [1.73174865E12, 16.502645502645503], [1.731748691E12, 16.141304347826093], [1.731748652E12, 16.678947368421056], [1.73174857E12, 17.282722513089013], [1.731748611E12, 17.8288770053476], [1.731748701E12, 15.096256684491982], [1.731748742E12, 17.67204301075268], [1.73174866E12, 15.185185185185185], [1.731748578E12, 15.652406417112303], [1.731748619E12, 16.354838709677423], [1.731748709E12, 15.301075268817206], [1.73174875E12, 16.275675675675682], [1.731748537E12, 17.82474226804124], [1.731748668E12, 15.840425531914892], [1.731748586E12, 15.415789473684203], [1.731748627E12, 16.87096774193548], [1.731748717E12, 15.410810810810814], [1.731748758E12, 17.54255319148936], [1.731748545E12, 15.031578947368422], [1.731748676E12, 15.284210526315794], [1.731748594E12, 16.86772486772486], [1.731748635E12, 16.930107526881713], [1.731748725E12, 15.727272727272732], [1.731748766E12, 17.43617021276597], [1.731748553E12, 15.624338624338623], [1.731748684E12, 15.984374999999984], [1.731748602E12, 15.235294117647062], [1.731748643E12, 16.494623655913973], [1.731748733E12, 15.935483870967746], [1.731748774E12, 17.55913978494623], [1.731748561E12, 16.854922279792742], [1.731748692E12, 15.915789473684205], [1.731748653E12, 16.8918918918919], [1.731748694E12, 16.207446808510635], [1.731748612E12, 16.47089947089947], [1.731748743E12, 16.899470899470895], [1.731748571E12, 17.87634408602149], [1.731748661E12, 15.625668449197864], [1.731748702E12, 15.957446808510637], [1.73174862E12, 15.846560846560848], [1.731748538E12, 18.431472081218267], [1.731748751E12, 15.936507936507935], [1.731748579E12, 16.224598930481285], [1.731748669E12, 16.000000000000004], [1.73174871E12, 16.43315508021392], [1.731748628E12, 15.936507936507939], [1.731748546E12, 15.851063829787224], [1.731748759E12, 16.559139784946247], [1.731748587E12, 15.778378378378369], [1.731748677E12, 15.351063829787234], [1.731748718E12, 16.089947089947103], [1.731748636E12, 15.994736842105267], [1.731748554E12, 15.887096774193543], [1.731748767E12, 16.935483870967733], [1.731748595E12, 17.010526315789477], [1.731748685E12, 15.35638297872341], [1.731748726E12, 16.42245989304813], [1.731748644E12, 15.39473684210526], [1.731748562E12, 15.899999999999995], [1.731748775E12, 13.461538461538458], [1.731748603E12, 16.385026737967916], [1.731748693E12, 15.524064171122994], [1.731748734E12, 17.727272727272734], [1.731748695E12, 15.507853403141356], [1.731748613E12, 16.155913978494624], [1.731748654E12, 17.473404255319153], [1.731748744E12, 16.28877005347594], [1.731748572E12, 17.12834224598931], [1.731748703E12, 15.64921465968587], [1.731748621E12, 16.11475409836065], [1.731748662E12, 15.838709677419345], [1.731748752E12, 15.349462365591402], [1.73174858E12, 15.643617021276597], [1.731748711E12, 15.307291666666679], [1.731748539E12, 17.268421052631567], [1.731748629E12, 15.62903225806452], [1.73174867E12, 16.03191489361702], [1.73174876E12, 16.112299465240643], [1.731748588E12, 15.73015873015873], [1.731748719E12, 15.450261780104707], [1.731748547E12, 15.899470899470893], [1.731748637E12, 15.935135135135134], [1.731748678E12, 16.41304347826087], [1.731748768E12, 16.81283422459894], [1.731748596E12, 16.51322751322751], [1.731748727E12, 16.133689839572185], [1.731748555E12, 17.561497326203213], [1.731748645E12, 15.736559139784951], [1.731748686E12, 16.197860962566846], [1.731748604E12, 16.313829787234027], [1.731748735E12, 16.261780104712035], [1.731748563E12, 16.101063829787226], [1.731748696E12, 15.895604395604401], [1.731748737E12, 16.805263157894736], [1.731748655E12, 16.60209424083771], [1.731748573E12, 16.98930481283421], [1.731748614E12, 16.734374999999996], [1.731748704E12, 15.447513812154693], [1.731748745E12, 16.656084656084655], [1.731748663E12, 15.721052631578953], [1.731748581E12, 15.553763440860218], [1.731748622E12, 16.780104712041883], [1.731748712E12, 16.049723756906076], [1.73174854E12, 16.510416666666664], [1.731748753E12, 15.547368421052626], [1.731748671E12, 15.672043010752684], [1.731748589E12, 16.194594594594598], [1.73174863E12, 16.64736842105263], [1.73174872E12, 15.475138121546953], [1.731748548E12, 15.675531914893618], [1.731748761E12, 17.613756613756625], [1.731748679E12, 16.32804232804233], [1.731748597E12, 15.919354838709676], [1.731748638E12, 16.50267379679144], [1.731748728E12, 16.4535519125683], [1.731748556E12, 17.13829787234043], [1.731748769E12, 17.184210526315777], [1.731748687E12, 15.65789473684211], [1.731748605E12, 15.574468085106382], [1.731748646E12, 16.55319148936172], [1.731748736E12, 15.983606557377046], [1.731748564E12, 15.455026455026458]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.731748775E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 13.461538461538458, "minX": 1.731748535E12, "maxY": 18.748691099476442, "series": [{"data": [[1.731748738E12, 16.301075268817193], [1.731748566E12, 15.243386243386242], [1.731748656E12, 16.41081081081081], [1.731748697E12, 15.436842105263162], [1.731748615E12, 16.064171122994658], [1.731748746E12, 16.47058823529413], [1.731748574E12, 17.42931937172775], [1.731748664E12, 16.11475409836065], [1.731748705E12, 15.578947368421055], [1.731748623E12, 16.405263157894748], [1.731748754E12, 15.271276595744679], [1.731748541E12, 16.120879120879117], [1.731748582E12, 15.597883597883598], [1.731748672E12, 16.60869565217391], [1.731748713E12, 15.647058823529408], [1.731748631E12, 15.82446808510638], [1.731748762E12, 16.668449197860976], [1.731748549E12, 15.280219780219777], [1.73174859E12, 16.90374331550802], [1.73174868E12, 16.710382513661216], [1.731748721E12, 15.478947368421052], [1.731748639E12, 15.968911917098445], [1.73174877E12, 16.754010695187155], [1.731748557E12, 16.64324324324324], [1.731748598E12, 16.486772486772487], [1.731748688E12, 15.939226519337023], [1.731748729E12, 16.824468085106393], [1.731748647E12, 16.3475935828877], [1.731748565E12, 15.46195652173913], [1.731748606E12, 15.95721925133691], [1.731748567E12, 15.310160427807482], [1.731748698E12, 15.347368421052638], [1.731748739E12, 17.606557377049185], [1.731748616E12, 16.45945945945945], [1.731748657E12, 16.840425531914896], [1.731748575E12, 15.920634920634926], [1.731748706E12, 15.264550264550264], [1.731748747E12, 16.489247311827945], [1.731748624E12, 16.251366120218577], [1.731748665E12, 15.797872340425533], [1.731748583E12, 15.585106382978731], [1.731748714E12, 15.700000000000003], [1.731748542E12, 15.776041666666677], [1.731748755E12, 16.09340659340659], [1.731748632E12, 16.47567567567568], [1.731748673E12, 15.473684210526319], [1.731748591E12, 16.771276595744684], [1.731748722E12, 15.14893617021277], [1.73174855E12, 15.790575916230368], [1.731748763E12, 17.644808743169392], [1.73174864E12, 16.48066298342542], [1.731748681E12, 16.368421052631565], [1.731748599E12, 15.721052631578951], [1.73174873E12, 16.926701570680645], [1.731748558E12, 16.581151832460748], [1.731748771E12, 17.70652173913043], [1.731748648E12, 16.804347826086936], [1.731748689E12, 15.873684210526314], [1.731748607E12, 16.155913978494606], [1.731748568E12, 16.574585635359124], [1.731748609E12, 17.122994652406412], [1.73174874E12, 16.989690721649495], [1.731748658E12, 15.515789473684208], [1.731748699E12, 15.841530054644814], [1.731748576E12, 16.274193548387103], [1.731748617E12, 16.834224598930486], [1.731748535E12, 18.22608695652173], [1.731748748E12, 15.968586387434557], [1.731748666E12, 15.227513227513228], [1.731748707E12, 15.939560439560447], [1.731748584E12, 16.05434782608696], [1.731748625E12, 16.09424083769632], [1.731748543E12, 15.629629629629626], [1.731748756E12, 16.34574468085107], [1.731748674E12, 15.303191489361703], [1.731748715E12, 16.26086956521738], [1.731748592E12, 17.043243243243236], [1.731748633E12, 16.582887700534776], [1.731748551E12, 15.3], [1.731748764E12, 17.542105263157893], [1.731748682E12, 15.664921465968588], [1.731748723E12, 16.02185792349727], [1.7317486E12, 16.09782608695653], [1.731748641E12, 16.592592592592595], [1.731748559E12, 16.454545454545443], [1.731748772E12, 17.526595744680847], [1.73174869E12, 15.306878306878303], [1.731748731E12, 17.15135135135135], [1.731748608E12, 17.54594594594594], [1.731748649E12, 17.534759358288767], [1.73174861E12, 17.15343915343915], [1.731748651E12, 16.83957219251337], [1.731748741E12, 16.677419354838708], [1.731748569E12, 17.358288770053463], [1.7317487E12, 15.544502617801053], [1.731748618E12, 15.947643979057593], [1.731748659E12, 15.791443850267383], [1.731748536E12, 18.748691099476442], [1.731748749E12, 15.211640211640214], [1.731748577E12, 15.6806282722513], [1.731748708E12, 15.150259067357508], [1.731748626E12, 15.274193548387093], [1.731748667E12, 16.106951871657753], [1.731748544E12, 16.0], [1.731748757E12, 16.22459893048129], [1.731748585E12, 15.925925925925924], [1.731748716E12, 15.284974093264251], [1.731748634E12, 15.640211640211641], [1.731748675E12, 16.54301075268818], [1.731748552E12, 15.765027322404368], [1.731748765E12, 16.942105263157902], [1.731748593E12, 16.973118279569903], [1.731748724E12, 15.732984293193713], [1.731748642E12, 15.100529100529098], [1.731748683E12, 16.278688524590162], [1.73174856E12, 17.58241758241758], [1.731748773E12, 16.77777777777779], [1.731748601E12, 15.899470899470895], [1.731748732E12, 15.994764397905747], [1.73174865E12, 16.502645502645503], [1.731748691E12, 16.141304347826093], [1.731748652E12, 16.668421052631565], [1.73174857E12, 17.277486910994767], [1.731748611E12, 17.818181818181806], [1.731748701E12, 15.085561497326196], [1.731748742E12, 17.66666666666668], [1.73174866E12, 15.174603174603176], [1.731748578E12, 15.647058823529415], [1.731748619E12, 16.344086021505383], [1.731748709E12, 15.301075268817206], [1.73174875E12, 16.270270270270284], [1.731748537E12, 17.768041237113415], [1.731748668E12, 15.824468085106382], [1.731748586E12, 15.41052631578948], [1.731748627E12, 16.86559139784947], [1.731748717E12, 15.400000000000002], [1.731748758E12, 17.52127659574468], [1.731748545E12, 15.010526315789473], [1.731748676E12, 15.273684210526316], [1.731748594E12, 16.862433862433853], [1.731748635E12, 16.919354838709673], [1.731748725E12, 15.716577540106954], [1.731748766E12, 17.420212765957437], [1.731748553E12, 15.619047619047613], [1.731748684E12, 15.979166666666659], [1.731748602E12, 15.235294117647062], [1.731748643E12, 16.48924731182796], [1.731748733E12, 15.930107526881722], [1.731748774E12, 17.553763440860205], [1.731748561E12, 16.844559585492245], [1.731748692E12, 15.894736842105269], [1.731748653E12, 16.87027027027027], [1.731748694E12, 16.20212765957449], [1.731748612E12, 16.455026455026456], [1.731748743E12, 16.8941798941799], [1.731748571E12, 17.87634408602149], [1.731748661E12, 15.625668449197864], [1.731748702E12, 15.957446808510637], [1.73174862E12, 15.841269841269842], [1.731748538E12, 18.370558375634523], [1.731748751E12, 15.915343915343923], [1.731748579E12, 16.2192513368984], [1.731748669E12, 15.989417989417987], [1.73174871E12, 16.41711229946524], [1.731748628E12, 15.936507936507939], [1.731748546E12, 15.840425531914898], [1.731748759E12, 16.559139784946247], [1.731748587E12, 15.76756756756757], [1.731748677E12, 15.34574468085107], [1.731748718E12, 16.089947089947103], [1.731748636E12, 15.984210526315797], [1.731748554E12, 15.87096774193548], [1.731748767E12, 16.924731182795693], [1.731748595E12, 17.00526315789475], [1.731748685E12, 15.35638297872341], [1.731748726E12, 16.42245989304813], [1.731748644E12, 15.389473684210527], [1.731748562E12, 15.88947368421052], [1.731748775E12, 13.461538461538458], [1.731748603E12, 16.379679144385026], [1.731748693E12, 15.524064171122994], [1.731748734E12, 17.71657754010694], [1.731748695E12, 15.507853403141356], [1.731748613E12, 16.1505376344086], [1.731748654E12, 17.473404255319153], [1.731748744E12, 16.283422459893053], [1.731748572E12, 17.122994652406422], [1.731748703E12, 15.643979057591627], [1.731748621E12, 16.109289617486343], [1.731748662E12, 15.83333333333334], [1.731748752E12, 15.34408602150538], [1.73174858E12, 15.632978723404253], [1.731748711E12, 15.296875], [1.731748539E12, 17.252631578947366], [1.731748629E12, 15.618279569892481], [1.73174867E12, 16.02127659574468], [1.73174876E12, 16.112299465240643], [1.731748588E12, 15.73015873015873], [1.731748719E12, 15.434554973821987], [1.731748547E12, 15.87301587301588], [1.731748637E12, 15.92972972972973], [1.731748678E12, 16.402173913043477], [1.731748768E12, 16.807486631016047], [1.731748596E12, 16.507936507936503], [1.731748727E12, 16.117647058823515], [1.731748555E12, 17.545454545454547], [1.731748645E12, 15.7258064516129], [1.731748686E12, 16.19251336898396], [1.731748604E12, 16.308510638297882], [1.731748735E12, 16.261780104712035], [1.731748563E12, 16.101063829787226], [1.731748696E12, 15.890109890109887], [1.731748737E12, 16.800000000000004], [1.731748655E12, 16.59685863874347], [1.731748573E12, 16.983957219251348], [1.731748614E12, 16.734374999999996], [1.731748704E12, 15.441988950276242], [1.731748745E12, 16.650793650793663], [1.731748663E12, 15.705263157894732], [1.731748581E12, 15.537634408602147], [1.731748622E12, 16.780104712041883], [1.731748712E12, 16.04419889502762], [1.73174854E12, 16.489583333333325], [1.731748753E12, 15.52631578947368], [1.731748671E12, 15.650537634408602], [1.731748589E12, 16.18378378378379], [1.73174863E12, 16.621052631578937], [1.73174872E12, 15.4696132596685], [1.731748548E12, 15.64893617021276], [1.731748761E12, 17.597883597883587], [1.731748679E12, 16.317460317460306], [1.731748597E12, 15.913978494623654], [1.731748638E12, 16.497326203208544], [1.731748728E12, 16.4535519125683], [1.731748556E12, 17.127659574468098], [1.731748769E12, 17.17894736842104], [1.731748687E12, 15.652631578947371], [1.731748605E12, 15.574468085106382], [1.731748646E12, 16.537234042553205], [1.731748736E12, 15.961748633879779], [1.731748564E12, 15.449735449735453]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.731748775E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.01657458563535913, "minX": 1.731748535E12, "maxY": 0.5217391304347824, "series": [{"data": [[1.731748738E12, 0.06451612903225808], [1.731748566E12, 0.06349206349206353], [1.731748656E12, 0.043243243243243266], [1.731748697E12, 0.052631578947368425], [1.731748615E12, 0.0748663101604278], [1.731748746E12, 0.06417112299465241], [1.731748574E12, 0.0680628272251309], [1.731748664E12, 0.049180327868852444], [1.731748705E12, 0.08947368421052633], [1.731748623E12, 0.0736842105263158], [1.731748754E12, 0.0531914893617021], [1.731748541E12, 0.06043956043956044], [1.731748582E12, 0.03174603174603175], [1.731748672E12, 0.03260869565217392], [1.731748713E12, 0.048128342245989296], [1.731748631E12, 0.05851063829787238], [1.731748762E12, 0.053475935828877004], [1.731748549E12, 0.08791208791208786], [1.73174859E12, 0.048128342245989296], [1.73174868E12, 0.060109289617486336], [1.731748721E12, 0.05789473684210527], [1.731748639E12, 0.04663212435233161], [1.73174877E12, 0.06951871657754012], [1.731748557E12, 0.04324324324324324], [1.731748598E12, 0.07936507936507939], [1.731748688E12, 0.01657458563535913], [1.731748729E12, 0.053191489361702156], [1.731748647E12, 0.032085561497326213], [1.731748565E12, 0.05434782608695651], [1.731748606E12, 0.07486631016042782], [1.731748567E12, 0.06951871657754012], [1.731748698E12, 0.06315789473684215], [1.731748739E12, 0.04918032786885243], [1.731748616E12, 0.05405405405405404], [1.731748657E12, 0.06382978723404253], [1.731748575E12, 0.06878306878306881], [1.731748706E12, 0.07936507936507935], [1.731748747E12, 0.06451612903225808], [1.731748624E12, 0.049180327868852465], [1.731748665E12, 0.0425531914893617], [1.731748583E12, 0.07978723404255317], [1.731748714E12, 0.05789473684210529], [1.731748542E12, 0.08854166666666669], [1.731748755E12, 0.06593406593406596], [1.731748632E12, 0.05945945945945945], [1.731748673E12, 0.068421052631579], [1.731748591E12, 0.07978723404255317], [1.731748722E12, 0.08510638297872342], [1.73174855E12, 0.1047120418848168], [1.731748763E12, 0.03278688524590165], [1.73174864E12, 0.04419889502762431], [1.731748681E12, 0.08421052631578944], [1.731748599E12, 0.04736842105263157], [1.73174873E12, 0.057591623036649255], [1.731748558E12, 0.047120418848167527], [1.731748771E12, 0.059782608695652155], [1.731748648E12, 0.038043478260869595], [1.731748689E12, 0.05263157894736841], [1.731748607E12, 0.03763440860215051], [1.731748568E12, 0.03314917127071823], [1.731748609E12, 0.0588235294117647], [1.73174874E12, 0.04123711340206186], [1.731748658E12, 0.06315789473684211], [1.731748699E12, 0.04371584699453548], [1.731748576E12, 0.06989247311827958], [1.731748617E12, 0.058823529411764705], [1.731748535E12, 0.5217391304347824], [1.731748748E12, 0.06282722513089005], [1.731748666E12, 0.06349206349206349], [1.731748707E12, 0.04395604395604395], [1.731748584E12, 0.05434782608695651], [1.731748625E12, 0.06282722513089005], [1.731748543E12, 0.10582010582010586], [1.731748756E12, 0.09042553191489362], [1.731748674E12, 0.07978723404255315], [1.731748715E12, 0.04347826086956522], [1.731748592E12, 0.06486486486486487], [1.731748633E12, 0.06951871657754014], [1.731748551E12, 0.0736842105263158], [1.731748764E12, 0.07368421052631584], [1.731748682E12, 0.07853403141361259], [1.731748723E12, 0.07103825136612021], [1.7317486E12, 0.06521739130434784], [1.731748641E12, 0.031746031746031744], [1.731748559E12, 0.053475935828877], [1.731748772E12, 0.04787234042553192], [1.73174869E12, 0.08994708994708991], [1.731748731E12, 0.03783783783783785], [1.731748608E12, 0.03783783783783783], [1.731748649E12, 0.0695187165775401], [1.73174861E12, 0.07407407407407406], [1.731748651E12, 0.0748663101604278], [1.731748741E12, 0.0860215053763441], [1.731748569E12, 0.06417112299465239], [1.7317487E12, 0.06806282722513088], [1.731748618E12, 0.06806282722513089], [1.731748659E12, 0.058823529411764684], [1.731748536E12, 0.06282722513089006], [1.731748749E12, 0.05820105820105819], [1.731748577E12, 0.07329842931937176], [1.731748708E12, 0.06217616580310885], [1.731748626E12, 0.08064516129032258], [1.731748667E12, 0.04278074866310161], [1.731748544E12, 0.0546448087431694], [1.731748757E12, 0.0641711229946524], [1.731748585E12, 0.037037037037037035], [1.731748716E12, 0.0466321243523316], [1.731748634E12, 0.06878306878306881], [1.731748675E12, 0.05376344086021504], [1.731748552E12, 0.05464480874316941], [1.731748765E12, 0.07894736842105268], [1.731748593E12, 0.05913978494623658], [1.731748724E12, 0.06282722513089005], [1.731748642E12, 0.04761904761904761], [1.731748683E12, 0.05464480874316939], [1.73174856E12, 0.03296703296703299], [1.731748773E12, 0.05820105820105819], [1.731748601E12, 0.06878306878306877], [1.731748732E12, 0.06282722513089008], [1.73174865E12, 0.06349206349206349], [1.731748691E12, 0.04891304347826085], [1.731748652E12, 0.07368421052631578], [1.73174857E12, 0.06806282722513089], [1.731748611E12, 0.0427807486631016], [1.731748701E12, 0.0481283422459893], [1.731748742E12, 0.06989247311827958], [1.73174866E12, 0.07407407407407408], [1.731748578E12, 0.048128342245989296], [1.731748619E12, 0.03225806451612904], [1.731748709E12, 0.04838709677419357], [1.73174875E12, 0.059459459459459456], [1.731748537E12, 0.13402061855670105], [1.731748668E12, 0.0797872340425532], [1.731748586E12, 0.04736842105263159], [1.731748627E12, 0.048387096774193554], [1.731748717E12, 0.037837837837837875], [1.731748758E12, 0.03723404255319151], [1.731748545E12, 0.11578947368421058], [1.731748676E12, 0.06842105263157895], [1.731748594E12, 0.06878306878306883], [1.731748635E12, 0.04301075268817204], [1.731748725E12, 0.06951871657754011], [1.731748766E12, 0.053191489361702114], [1.731748553E12, 0.08994708994708997], [1.731748684E12, 0.08333333333333336], [1.731748602E12, 0.05347593582887699], [1.731748643E12, 0.06989247311827955], [1.731748733E12, 0.043010752688172046], [1.731748774E12, 0.05376344086021504], [1.731748561E12, 0.08808290155440414], [1.731748692E12, 0.04736842105263158], [1.731748653E12, 0.048648648648648665], [1.731748694E12, 0.06914893617021277], [1.731748612E12, 0.05291005291005288], [1.731748743E12, 0.0634920634920635], [1.731748571E12, 0.07526881720430109], [1.731748661E12, 0.10695187165775398], [1.731748702E12, 0.05851063829787233], [1.73174862E12, 0.04761904761904761], [1.731748538E12, 0.10152284263959395], [1.731748751E12, 0.03703703703703706], [1.731748579E12, 0.0427807486631016], [1.731748669E12, 0.04761904761904762], [1.73174871E12, 0.0427807486631016], [1.731748628E12, 0.0740740740740741], [1.731748546E12, 0.10106382978723402], [1.731748759E12, 0.05376344086021508], [1.731748587E12, 0.0648648648648649], [1.731748677E12, 0.05851063829787234], [1.731748718E12, 0.03703703703703705], [1.731748636E12, 0.0736842105263158], [1.731748554E12, 0.07526881720430106], [1.731748767E12, 0.053763440860215055], [1.731748595E12, 0.04736842105263156], [1.731748685E12, 0.05851063829787233], [1.731748726E12, 0.0374331550802139], [1.731748644E12, 0.03684210526315786], [1.731748562E12, 0.07368421052631578], [1.731748775E12, 0.07692307692307693], [1.731748603E12, 0.053475935828877], [1.731748693E12, 0.0802139037433155], [1.731748734E12, 0.0374331550802139], [1.731748695E12, 0.07853403141361259], [1.731748613E12, 0.04838709677419357], [1.731748654E12, 0.05319148936170211], [1.731748744E12, 0.06417112299465243], [1.731748572E12, 0.037433155080213894], [1.731748703E12, 0.04712041884816755], [1.731748621E12, 0.06557377049180331], [1.731748662E12, 0.06451612903225806], [1.731748752E12, 0.03225806451612905], [1.73174858E12, 0.04787234042553191], [1.731748711E12, 0.08854166666666664], [1.731748539E12, 0.08421052631578947], [1.731748629E12, 0.04301075268817204], [1.73174867E12, 0.06914893617021277], [1.73174876E12, 0.037433155080213915], [1.731748588E12, 0.0529100529100529], [1.731748719E12, 0.06806282722513092], [1.731748547E12, 0.04761904761904762], [1.731748637E12, 0.10270270270270268], [1.731748678E12, 0.027173913043478267], [1.731748768E12, 0.048128342245989296], [1.731748596E12, 0.058201058201058226], [1.731748727E12, 0.03208556149732623], [1.731748555E12, 0.0320855614973262], [1.731748645E12, 0.07526881720430109], [1.731748686E12, 0.053475935828877004], [1.731748604E12, 0.058510638297872376], [1.731748735E12, 0.0418848167539267], [1.731748563E12, 0.047872340425531915], [1.731748696E12, 0.049450549450549434], [1.731748737E12, 0.02105263157894737], [1.731748655E12, 0.05235602094240838], [1.731748573E12, 0.06417112299465244], [1.731748614E12, 0.06250000000000003], [1.731748704E12, 0.060773480662983444], [1.731748745E12, 0.0687830687830688], [1.731748663E12, 0.06842105263157894], [1.731748581E12, 0.08064516129032259], [1.731748622E12, 0.05759162303664925], [1.731748712E12, 0.027624309392265192], [1.73174854E12, 0.10937500000000006], [1.731748753E12, 0.07894736842105264], [1.731748671E12, 0.04838709677419357], [1.731748589E12, 0.07027027027027027], [1.73174863E12, 0.052631578947368404], [1.73174872E12, 0.06629834254143653], [1.731748548E12, 0.053191489361702135], [1.731748761E12, 0.07407407407407413], [1.731748679E12, 0.07407407407407406], [1.731748597E12, 0.08602150537634407], [1.731748638E12, 0.08021390374331552], [1.731748728E12, 0.07650273224043712], [1.731748556E12, 0.07446808510638298], [1.731748769E12, 0.0631578947368421], [1.731748687E12, 0.04736842105263159], [1.731748605E12, 0.047872340425531915], [1.731748646E12, 0.0425531914893617], [1.731748736E12, 0.02732240437158472], [1.731748564E12, 0.08994708994708996]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.731748775E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 11.0, "minX": 1.731748535E12, "maxY": 41.0, "series": [{"data": [[1.731748738E12, 27.0], [1.731748566E12, 25.0], [1.731748656E12, 32.0], [1.731748697E12, 26.0], [1.731748615E12, 32.0], [1.731748746E12, 28.0], [1.731748574E12, 36.0], [1.731748664E12, 25.0], [1.731748705E12, 32.0], [1.731748623E12, 34.0], [1.731748754E12, 25.0], [1.731748541E12, 28.0], [1.731748582E12, 26.0], [1.731748672E12, 32.0], [1.731748713E12, 26.0], [1.731748631E12, 28.0], [1.731748762E12, 31.0], [1.731748549E12, 24.0], [1.73174859E12, 30.0], [1.73174868E12, 26.0], [1.731748721E12, 26.0], [1.731748639E12, 34.0], [1.73174877E12, 33.0], [1.731748557E12, 34.0], [1.731748598E12, 37.0], [1.731748688E12, 26.0], [1.731748729E12, 31.0], [1.731748647E12, 37.0], [1.731748565E12, 29.0], [1.731748606E12, 37.0], [1.731748567E12, 25.0], [1.731748698E12, 26.0], [1.731748739E12, 29.0], [1.731748616E12, 32.0], [1.731748657E12, 29.0], [1.731748575E12, 26.0], [1.731748706E12, 27.0], [1.731748747E12, 27.0], [1.731748624E12, 29.0], [1.731748665E12, 28.0], [1.731748583E12, 28.0], [1.731748714E12, 33.0], [1.731748542E12, 31.0], [1.731748755E12, 30.0], [1.731748632E12, 28.0], [1.731748673E12, 27.0], [1.731748591E12, 32.0], [1.731748722E12, 26.0], [1.73174855E12, 30.0], [1.731748763E12, 35.0], [1.73174864E12, 27.0], [1.731748681E12, 32.0], [1.731748599E12, 34.0], [1.73174873E12, 29.0], [1.731748558E12, 32.0], [1.731748771E12, 28.0], [1.731748648E12, 31.0], [1.731748689E12, 29.0], [1.731748607E12, 41.0], [1.731748568E12, 38.0], [1.731748609E12, 38.0], [1.73174874E12, 37.0], [1.731748658E12, 25.0], [1.731748699E12, 26.0], [1.731748576E12, 29.0], [1.731748617E12, 31.0], [1.731748535E12, 35.0], [1.731748748E12, 30.0], [1.731748666E12, 24.0], [1.731748707E12, 25.0], [1.731748584E12, 32.0], [1.731748625E12, 27.0], [1.731748543E12, 28.0], [1.731748756E12, 31.0], [1.731748674E12, 28.0], [1.731748715E12, 28.0], [1.731748592E12, 36.0], [1.731748633E12, 37.0], [1.731748551E12, 26.0], [1.731748764E12, 27.0], [1.731748682E12, 26.0], [1.731748723E12, 26.0], [1.7317486E12, 31.0], [1.731748641E12, 35.0], [1.731748559E12, 30.0], [1.731748772E12, 29.0], [1.73174869E12, 29.0], [1.731748731E12, 33.0], [1.731748608E12, 41.0], [1.731748649E12, 37.0], [1.73174861E12, 33.0], [1.731748651E12, 34.0], [1.731748741E12, 35.0], [1.731748569E12, 34.0], [1.7317487E12, 25.0], [1.731748618E12, 29.0], [1.731748659E12, 29.0], [1.731748536E12, 29.0], [1.731748749E12, 32.0], [1.731748577E12, 34.0], [1.731748708E12, 28.0], [1.731748626E12, 27.0], [1.731748667E12, 33.0], [1.731748544E12, 26.0], [1.731748757E12, 31.0], [1.731748585E12, 30.0], [1.731748716E12, 26.0], [1.731748634E12, 27.0], [1.731748675E12, 31.0], [1.731748552E12, 25.0], [1.731748765E12, 30.0], [1.731748593E12, 30.0], [1.731748724E12, 26.0], [1.731748642E12, 28.0], [1.731748683E12, 26.0], [1.73174856E12, 35.0], [1.731748773E12, 35.0], [1.731748601E12, 33.0], [1.731748732E12, 29.0], [1.73174865E12, 27.0], [1.731748691E12, 26.0], [1.731748652E12, 30.0], [1.73174857E12, 30.0], [1.731748611E12, 32.0], [1.731748701E12, 25.0], [1.731748742E12, 33.0], [1.73174866E12, 24.0], [1.731748578E12, 28.0], [1.731748619E12, 30.0], [1.731748709E12, 27.0], [1.73174875E12, 28.0], [1.731748537E12, 35.0], [1.731748668E12, 29.0], [1.731748586E12, 26.0], [1.731748627E12, 29.0], [1.731748717E12, 26.0], [1.731748758E12, 30.0], [1.731748545E12, 26.0], [1.731748676E12, 27.0], [1.731748594E12, 32.0], [1.731748635E12, 35.0], [1.731748725E12, 29.0], [1.731748766E12, 32.0], [1.731748553E12, 32.0], [1.731748684E12, 29.0], [1.731748602E12, 25.0], [1.731748643E12, 27.0], [1.731748733E12, 27.0], [1.731748774E12, 35.0], [1.731748561E12, 30.0], [1.731748692E12, 30.0], [1.731748653E12, 35.0], [1.731748694E12, 28.0], [1.731748612E12, 27.0], [1.731748743E12, 33.0], [1.731748571E12, 33.0], [1.731748661E12, 24.0], [1.731748702E12, 28.0], [1.73174862E12, 29.0], [1.731748538E12, 29.0], [1.731748751E12, 28.0], [1.731748579E12, 36.0], [1.731748669E12, 34.0], [1.73174871E12, 34.0], [1.731748628E12, 29.0], [1.731748546E12, 32.0], [1.731748759E12, 29.0], [1.731748587E12, 27.0], [1.731748677E12, 24.0], [1.731748718E12, 29.0], [1.731748636E12, 28.0], [1.731748554E12, 26.0], [1.731748767E12, 37.0], [1.731748595E12, 29.0], [1.731748685E12, 26.0], [1.731748726E12, 28.0], [1.731748644E12, 26.0], [1.731748562E12, 27.0], [1.731748775E12, 23.0], [1.731748603E12, 28.0], [1.731748693E12, 26.0], [1.731748734E12, 35.0], [1.731748695E12, 26.0], [1.731748613E12, 34.0], [1.731748654E12, 28.0], [1.731748744E12, 29.0], [1.731748572E12, 31.0], [1.731748703E12, 29.0], [1.731748621E12, 26.0], [1.731748662E12, 35.0], [1.731748752E12, 24.0], [1.73174858E12, 28.0], [1.731748711E12, 26.0], [1.731748539E12, 30.0], [1.731748629E12, 28.0], [1.73174867E12, 28.0], [1.73174876E12, 26.0], [1.731748588E12, 29.0], [1.731748719E12, 27.0], [1.731748547E12, 28.0], [1.731748637E12, 27.0], [1.731748678E12, 30.0], [1.731748768E12, 35.0], [1.731748596E12, 28.0], [1.731748727E12, 30.0], [1.731748555E12, 38.0], [1.731748645E12, 32.0], [1.731748686E12, 31.0], [1.731748604E12, 30.0], [1.731748735E12, 31.0], [1.731748563E12, 29.0], [1.731748696E12, 29.0], [1.731748737E12, 31.0], [1.731748655E12, 26.0], [1.731748573E12, 31.0], [1.731748614E12, 28.0], [1.731748704E12, 25.0], [1.731748745E12, 30.0], [1.731748663E12, 27.0], [1.731748581E12, 28.0], [1.731748622E12, 31.0], [1.731748712E12, 34.0], [1.73174854E12, 28.0], [1.731748753E12, 33.0], [1.731748671E12, 29.0], [1.731748589E12, 28.0], [1.73174863E12, 28.0], [1.73174872E12, 26.0], [1.731748548E12, 27.0], [1.731748761E12, 33.0], [1.731748679E12, 32.0], [1.731748597E12, 29.0], [1.731748638E12, 34.0], [1.731748728E12, 26.0], [1.731748556E12, 30.0], [1.731748769E12, 29.0], [1.731748687E12, 29.0], [1.731748605E12, 28.0], [1.731748646E12, 30.0], [1.731748736E12, 26.0], [1.731748564E12, 28.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.731748738E12, 22.0], [1.731748566E12, 21.0], [1.731748656E12, 22.0], [1.731748697E12, 21.0], [1.731748615E12, 22.0], [1.731748746E12, 22.0], [1.731748574E12, 24.0], [1.731748664E12, 21.0], [1.731748705E12, 21.0], [1.731748623E12, 23.0], [1.731748754E12, 21.0], [1.731748541E12, 21.0], [1.731748582E12, 21.0], [1.731748672E12, 23.0], [1.731748713E12, 22.0], [1.731748631E12, 22.0], [1.731748762E12, 23.0], [1.731748549E12, 20.0], [1.73174859E12, 23.5], [1.73174868E12, 22.0], [1.731748721E12, 21.0], [1.731748639E12, 23.0], [1.73174877E12, 23.0], [1.731748557E12, 22.0], [1.731748598E12, 23.0], [1.731748688E12, 22.0], [1.731748729E12, 23.400000000000006], [1.731748647E12, 23.0], [1.731748565E12, 20.0], [1.731748606E12, 22.0], [1.731748567E12, 21.0], [1.731748698E12, 21.0], [1.731748739E12, 24.0], [1.731748616E12, 22.0], [1.731748657E12, 23.0], [1.731748575E12, 22.0], [1.731748706E12, 21.0], [1.731748747E12, 22.0], [1.731748624E12, 21.0], [1.731748665E12, 21.30000000000001], [1.731748583E12, 21.0], [1.731748714E12, 21.0], [1.731748542E12, 21.0], [1.731748755E12, 21.0], [1.731748632E12, 22.0], [1.731748673E12, 21.0], [1.731748591E12, 22.0], [1.731748722E12, 21.0], [1.73174855E12, 21.0], [1.731748763E12, 24.0], [1.73174864E12, 22.30000000000001], [1.731748681E12, 22.200000000000017], [1.731748599E12, 22.0], [1.73174873E12, 23.0], [1.731748558E12, 23.0], [1.731748771E12, 23.0], [1.731748648E12, 23.0], [1.731748689E12, 22.0], [1.731748607E12, 22.5], [1.731748568E12, 22.0], [1.731748609E12, 23.0], [1.73174874E12, 24.0], [1.731748658E12, 21.0], [1.731748699E12, 21.0], [1.731748576E12, 22.0], [1.731748617E12, 23.0], [1.731748535E12, 26.900000000000006], [1.731748748E12, 21.200000000000017], [1.731748666E12, 20.0], [1.731748707E12, 21.0], [1.731748584E12, 21.0], [1.731748625E12, 22.0], [1.731748543E12, 21.0], [1.731748756E12, 23.0], [1.731748674E12, 21.0], [1.731748715E12, 22.0], [1.731748592E12, 23.0], [1.731748633E12, 22.099999999999994], [1.731748551E12, 20.099999999999994], [1.731748764E12, 24.0], [1.731748682E12, 21.0], [1.731748723E12, 21.0], [1.7317486E12, 22.0], [1.731748641E12, 23.80000000000001], [1.731748559E12, 23.0], [1.731748772E12, 25.30000000000001], [1.73174869E12, 21.0], [1.731748731E12, 23.0], [1.731748608E12, 24.0], [1.731748649E12, 24.0], [1.73174861E12, 24.0], [1.731748651E12, 23.099999999999994], [1.731748741E12, 23.0], [1.731748569E12, 23.0], [1.7317487E12, 21.0], [1.731748618E12, 22.0], [1.731748659E12, 21.0], [1.731748536E12, 25.0], [1.731748749E12, 21.0], [1.731748577E12, 22.0], [1.731748708E12, 21.0], [1.731748626E12, 21.0], [1.731748667E12, 21.0], [1.731748544E12, 21.0], [1.731748757E12, 24.0], [1.731748585E12, 22.0], [1.731748716E12, 21.0], [1.731748634E12, 21.0], [1.731748675E12, 21.0], [1.731748552E12, 20.0], [1.731748765E12, 24.0], [1.731748593E12, 23.0], [1.731748724E12, 22.0], [1.731748642E12, 21.80000000000001], [1.731748683E12, 22.0], [1.73174856E12, 24.0], [1.731748773E12, 23.0], [1.731748601E12, 22.0], [1.731748732E12, 22.0], [1.73174865E12, 23.0], [1.731748691E12, 21.0], [1.731748652E12, 24.0], [1.73174857E12, 23.0], [1.731748611E12, 24.900000000000006], [1.731748701E12, 21.0], [1.731748742E12, 24.0], [1.73174866E12, 20.0], [1.731748578E12, 21.0], [1.731748619E12, 22.0], [1.731748709E12, 20.30000000000001], [1.73174875E12, 22.0], [1.731748537E12, 24.0], [1.731748668E12, 22.0], [1.731748586E12, 21.0], [1.731748627E12, 23.0], [1.731748717E12, 21.0], [1.731748758E12, 24.0], [1.731748545E12, 21.0], [1.731748676E12, 21.0], [1.731748594E12, 23.0], [1.731748635E12, 23.0], [1.731748725E12, 21.0], [1.731748766E12, 23.0], [1.731748553E12, 22.0], [1.731748684E12, 21.0], [1.731748602E12, 21.0], [1.731748643E12, 22.0], [1.731748733E12, 22.0], [1.731748774E12, 26.0], [1.731748561E12, 23.200000000000017], [1.731748692E12, 22.0], [1.731748653E12, 23.0], [1.731748694E12, 21.099999999999994], [1.731748612E12, 23.0], [1.731748743E12, 23.0], [1.731748571E12, 24.099999999999994], [1.731748661E12, 20.200000000000017], [1.731748702E12, 22.0], [1.73174862E12, 21.200000000000017], [1.731748538E12, 24.0], [1.731748751E12, 22.0], [1.731748579E12, 22.0], [1.731748669E12, 22.0], [1.73174871E12, 23.0], [1.731748628E12, 22.0], [1.731748546E12, 20.200000000000017], [1.731748759E12, 22.0], [1.731748587E12, 22.0], [1.731748677E12, 20.0], [1.731748718E12, 21.0], [1.731748636E12, 22.0], [1.731748554E12, 21.0], [1.731748767E12, 24.0], [1.731748595E12, 23.0], [1.731748685E12, 20.0], [1.731748726E12, 21.200000000000017], [1.731748644E12, 21.0], [1.731748562E12, 21.0], [1.731748775E12, 19.0], [1.731748603E12, 23.0], [1.731748693E12, 21.0], [1.731748734E12, 25.0], [1.731748695E12, 21.0], [1.731748613E12, 22.30000000000001], [1.731748654E12, 24.0], [1.731748744E12, 22.0], [1.731748572E12, 24.0], [1.731748703E12, 21.0], [1.731748621E12, 21.0], [1.731748662E12, 22.0], [1.731748752E12, 20.0], [1.73174858E12, 21.0], [1.731748711E12, 22.0], [1.731748539E12, 23.0], [1.731748629E12, 21.0], [1.73174867E12, 21.0], [1.73174876E12, 22.0], [1.731748588E12, 21.0], [1.731748719E12, 21.0], [1.731748547E12, 21.0], [1.731748637E12, 22.0], [1.731748678E12, 22.0], [1.731748768E12, 23.0], [1.731748596E12, 22.0], [1.731748727E12, 21.0], [1.731748555E12, 24.0], [1.731748645E12, 21.0], [1.731748686E12, 22.0], [1.731748604E12, 22.0], [1.731748735E12, 22.0], [1.731748563E12, 21.0], [1.731748696E12, 21.0], [1.731748737E12, 22.200000000000017], [1.731748655E12, 22.0], [1.731748573E12, 23.200000000000017], [1.731748614E12, 23.0], [1.731748704E12, 20.0], [1.731748745E12, 22.30000000000001], [1.731748663E12, 21.0], [1.731748581E12, 21.0], [1.731748622E12, 23.0], [1.731748712E12, 22.0], [1.73174854E12, 23.0], [1.731748753E12, 21.200000000000017], [1.731748671E12, 21.700000000000017], [1.731748589E12, 22.0], [1.73174863E12, 22.0], [1.73174872E12, 20.0], [1.731748548E12, 21.0], [1.731748761E12, 25.0], [1.731748679E12, 22.0], [1.731748597E12, 22.0], [1.731748638E12, 22.0], [1.731748728E12, 21.0], [1.731748556E12, 23.0], [1.731748769E12, 23.0], [1.731748687E12, 22.0], [1.731748605E12, 21.0], [1.731748646E12, 22.099999999999994], [1.731748736E12, 21.0], [1.731748564E12, 20.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.731748738E12, 26.349999999999994], [1.731748566E12, 25.0], [1.731748656E12, 30.600000000000023], [1.731748697E12, 25.319999999999993], [1.731748615E12, 30.02000000000001], [1.731748746E12, 26.680000000000007], [1.731748574E12, 33.24000000000001], [1.731748664E12, 24.289999999999992], [1.731748705E12, 27.91999999999996], [1.731748623E12, 29.860000000000014], [1.731748754E12, 24.330000000000013], [1.731748541E12, 25.869999999999976], [1.731748582E12, 25.330000000000013], [1.731748672E12, 32.0], [1.731748713E12, 25.349999999999994], [1.731748631E12, 27.349999999999994], [1.731748762E12, 29.680000000000007], [1.731748549E12, 23.310000000000002], [1.73174859E12, 30.0], [1.73174868E12, 25.28], [1.731748721E12, 26.0], [1.731748639E12, 30.55000000000001], [1.73174877E12, 31.02000000000001], [1.731748557E12, 29.10000000000008], [1.731748598E12, 34.32000000000005], [1.731748688E12, 25.30000000000001], [1.731748729E12, 30.340000000000003], [1.731748647E12, 31.799999999999955], [1.731748565E12, 25.55000000000001], [1.731748606E12, 32.44999999999996], [1.731748567E12, 24.340000000000003], [1.731748698E12, 25.330000000000013], [1.731748739E12, 29.0], [1.731748616E12, 28.44999999999996], [1.731748657E12, 27.600000000000023], [1.731748575E12, 25.319999999999993], [1.731748706E12, 26.340000000000003], [1.731748747E12, 26.28], [1.731748624E12, 28.310000000000002], [1.731748665E12, 25.990000000000038], [1.731748583E12, 27.330000000000013], [1.731748714E12, 28.239999999999952], [1.731748542E12, 27.500000000000057], [1.731748755E12, 27.279999999999973], [1.731748632E12, 26.579999999999984], [1.731748673E12, 25.639999999999986], [1.731748591E12, 29.32000000000005], [1.731748722E12, 24.660000000000025], [1.73174855E12, 30.0], [1.731748763E12, 30.860000000000014], [1.73174864E12, 26.330000000000013], [1.731748681E12, 29.279999999999973], [1.731748599E12, 31.24000000000001], [1.73174873E12, 29.0], [1.731748558E12, 28.55000000000001], [1.731748771E12, 27.30000000000001], [1.731748648E12, 28.279999999999973], [1.731748689E12, 26.279999999999973], [1.731748607E12, 33.84999999999994], [1.731748568E12, 37.33000000000001], [1.731748609E12, 34.04000000000002], [1.73174874E12, 37.0], [1.731748658E12, 25.0], [1.731748699E12, 23.930000000000007], [1.731748576E12, 28.28], [1.731748617E12, 28.32000000000005], [1.731748535E12, 35.0], [1.731748748E12, 28.639999999999986], [1.731748666E12, 23.340000000000003], [1.731748707E12, 24.30000000000001], [1.731748584E12, 29.200000000000045], [1.731748625E12, 26.289999999999992], [1.731748543E12, 26.680000000000007], [1.731748756E12, 28.990000000000038], [1.731748674E12, 28.0], [1.731748715E12, 26.579999999999984], [1.731748592E12, 30.319999999999936], [1.731748633E12, 37.0], [1.731748551E12, 24.620000000000005], [1.731748764E12, 27.0], [1.731748682E12, 24.639999999999986], [1.731748723E12, 25.310000000000002], [1.7317486E12, 26.800000000000068], [1.731748641E12, 32.84], [1.731748559E12, 29.340000000000003], [1.731748772E12, 28.330000000000013], [1.73174869E12, 25.700000000000017], [1.731748731E12, 29.44999999999996], [1.731748608E12, 31.769999999999897], [1.731748649E12, 30.700000000000102], [1.73174861E12, 31.02000000000001], [1.731748651E12, 30.55000000000001], [1.731748741E12, 33.02000000000001], [1.731748569E12, 32.68000000000001], [1.7317487E12, 24.340000000000003], [1.731748618E12, 27.660000000000025], [1.731748659E12, 26.930000000000007], [1.731748536E12, 28.22999999999999], [1.731748749E12, 27.380000000000024], [1.731748577E12, 30.04000000000002], [1.731748708E12, 26.02000000000001], [1.731748626E12, 27.0], [1.731748667E12, 30.900000000000034], [1.731748544E12, 25.289999999999992], [1.731748757E12, 28.43999999999994], [1.731748585E12, 29.319999999999993], [1.731748716E12, 25.340000000000003], [1.731748634E12, 25.74000000000001], [1.731748675E12, 28.120000000000005], [1.731748552E12, 24.310000000000002], [1.731748765E12, 30.0], [1.731748593E12, 28.69999999999999], [1.731748724E12, 26.0], [1.731748642E12, 26.139999999999986], [1.731748683E12, 26.0], [1.73174856E12, 30.91999999999996], [1.731748773E12, 33.68000000000001], [1.731748601E12, 30.95999999999998], [1.731748732E12, 27.02000000000001], [1.73174865E12, 27.0], [1.731748691E12, 25.30000000000001], [1.731748652E12, 29.330000000000013], [1.73174857E12, 29.330000000000013], [1.731748611E12, 30.579999999999984], [1.731748701E12, 24.319999999999993], [1.731748742E12, 32.31], [1.73174866E12, 24.0], [1.731748578E12, 26.680000000000007], [1.731748619E12, 30.0], [1.731748709E12, 26.330000000000013], [1.73174875E12, 28.0], [1.731748537E12, 32.15999999999997], [1.731748668E12, 28.340000000000003], [1.731748586E12, 25.330000000000013], [1.731748627E12, 29.0], [1.731748717E12, 25.340000000000003], [1.731748758E12, 30.0], [1.731748545E12, 24.71999999999997], [1.731748676E12, 24.399999999999977], [1.731748594E12, 30.02000000000001], [1.731748635E12, 32.120000000000005], [1.731748725E12, 28.340000000000003], [1.731748766E12, 31.30000000000001], [1.731748553E12, 30.71999999999997], [1.731748684E12, 26.32000000000005], [1.731748602E12, 24.359999999999985], [1.731748643E12, 26.28], [1.731748733E12, 27.0], [1.731748774E12, 33.60000000000002], [1.731748561E12, 29.319999999999993], [1.731748692E12, 27.399999999999977], [1.731748653E12, 33.68000000000001], [1.731748694E12, 28.0], [1.731748612E12, 26.319999999999993], [1.731748743E12, 29.55000000000001], [1.731748571E12, 31.620000000000005], [1.731748661E12, 24.0], [1.731748702E12, 26.620000000000005], [1.73174862E12, 26.95999999999998], [1.731748538E12, 28.25999999999999], [1.731748751E12, 27.310000000000002], [1.731748579E12, 29.700000000000102], [1.731748669E12, 31.95999999999998], [1.73174871E12, 31.95999999999998], [1.731748628E12, 28.330000000000013], [1.731748546E12, 29.95999999999998], [1.731748759E12, 28.330000000000013], [1.731748587E12, 25.660000000000025], [1.731748677E12, 24.0], [1.731748718E12, 29.0], [1.731748636E12, 28.0], [1.731748554E12, 26.0], [1.731748767E12, 33.65000000000006], [1.731748595E12, 28.28], [1.731748685E12, 24.660000000000025], [1.731748726E12, 28.0], [1.731748644E12, 25.330000000000013], [1.731748562E12, 26.310000000000002], [1.731748775E12, 23.0], [1.731748603E12, 26.620000000000005], [1.731748693E12, 24.639999999999986], [1.731748734E12, 32.900000000000034], [1.731748695E12, 25.330000000000013], [1.731748613E12, 33.33000000000001], [1.731748654E12, 28.0], [1.731748744E12, 28.310000000000002], [1.731748572E12, 30.319999999999993], [1.731748703E12, 27.660000000000025], [1.731748621E12, 25.359999999999985], [1.731748662E12, 32.32000000000005], [1.731748752E12, 24.0], [1.73174858E12, 25.24000000000001], [1.731748711E12, 25.319999999999993], [1.731748539E12, 29.289999999999992], [1.731748629E12, 25.990000000000038], [1.73174867E12, 28.0], [1.73174876E12, 26.0], [1.731748588E12, 26.900000000000034], [1.731748719E12, 26.330000000000013], [1.731748547E12, 25.900000000000034], [1.731748637E12, 26.340000000000003], [1.731748678E12, 27.990000000000038], [1.731748768E12, 34.31999999999999], [1.731748596E12, 28.0], [1.731748727E12, 28.660000000000025], [1.731748555E12, 31.87999999999994], [1.731748645E12, 32.0], [1.731748686E12, 29.600000000000023], [1.731748604E12, 27.930000000000007], [1.731748735E12, 28.930000000000007], [1.731748563E12, 26.24000000000001], [1.731748696E12, 29.0], [1.731748737E12, 29.639999999999986], [1.731748655E12, 25.310000000000002], [1.731748573E12, 31.0], [1.731748614E12, 27.30000000000001], [1.731748704E12, 25.0], [1.731748745E12, 29.330000000000013], [1.731748663E12, 26.319999999999993], [1.731748581E12, 25.279999999999973], [1.731748622E12, 29.620000000000005], [1.731748712E12, 31.200000000000045], [1.73174854E12, 26.639999999999986], [1.731748753E12, 28.91999999999996], [1.731748671E12, 27.74000000000001], [1.731748589E12, 28.0], [1.73174863E12, 27.30000000000001], [1.73174872E12, 24.600000000000023], [1.731748548E12, 25.680000000000007], [1.731748761E12, 30.990000000000038], [1.731748679E12, 31.349999999999994], [1.731748597E12, 27.660000000000025], [1.731748638E12, 33.31999999999999], [1.731748728E12, 26.0], [1.731748556E12, 28.639999999999986], [1.731748769E12, 27.639999999999986], [1.731748687E12, 28.340000000000003], [1.731748605E12, 26.620000000000005], [1.731748646E12, 29.310000000000002], [1.731748736E12, 25.319999999999993], [1.731748564E12, 25.930000000000007]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.731748738E12, 24.0], [1.731748566E12, 22.0], [1.731748656E12, 22.0], [1.731748697E12, 22.0], [1.731748615E12, 25.0], [1.731748746E12, 24.0], [1.731748574E12, 25.0], [1.731748664E12, 23.0], [1.731748705E12, 23.0], [1.731748623E12, 25.549999999999983], [1.731748754E12, 22.650000000000006], [1.731748541E12, 23.0], [1.731748582E12, 22.0], [1.731748672E12, 25.0], [1.731748713E12, 24.0], [1.731748631E12, 23.0], [1.731748762E12, 25.0], [1.731748549E12, 21.0], [1.73174859E12, 26.0], [1.73174868E12, 23.0], [1.731748721E12, 22.599999999999994], [1.731748639E12, 24.549999999999983], [1.73174877E12, 24.0], [1.731748557E12, 24.0], [1.731748598E12, 25.650000000000006], [1.731748688E12, 23.0], [1.731748729E12, 25.69999999999999], [1.731748647E12, 25.0], [1.731748565E12, 22.0], [1.731748606E12, 24.0], [1.731748567E12, 22.0], [1.731748698E12, 22.0], [1.731748739E12, 26.0], [1.731748616E12, 23.0], [1.731748657E12, 24.0], [1.731748575E12, 23.0], [1.731748706E12, 22.0], [1.731748747E12, 24.0], [1.731748624E12, 22.0], [1.731748665E12, 24.0], [1.731748583E12, 23.0], [1.731748714E12, 22.0], [1.731748542E12, 23.0], [1.731748755E12, 22.599999999999994], [1.731748632E12, 25.0], [1.731748673E12, 23.0], [1.731748591E12, 25.0], [1.731748722E12, 22.0], [1.73174855E12, 22.0], [1.731748763E12, 25.549999999999983], [1.73174864E12, 24.0], [1.731748681E12, 24.0], [1.731748599E12, 24.0], [1.73174873E12, 25.0], [1.731748558E12, 24.0], [1.731748771E12, 25.0], [1.731748648E12, 26.0], [1.731748689E12, 23.599999999999994], [1.731748607E12, 24.75], [1.731748568E12, 25.0], [1.731748609E12, 25.69999999999999], [1.73174874E12, 25.0], [1.731748658E12, 23.0], [1.731748699E12, 22.0], [1.731748576E12, 23.0], [1.731748617E12, 24.0], [1.731748535E12, 29.94999999999999], [1.731748748E12, 23.599999999999994], [1.731748666E12, 21.0], [1.731748707E12, 22.0], [1.731748584E12, 22.0], [1.731748625E12, 22.0], [1.731748543E12, 22.0], [1.731748756E12, 24.0], [1.731748674E12, 22.0], [1.731748715E12, 23.0], [1.731748592E12, 24.44999999999999], [1.731748633E12, 24.0], [1.731748551E12, 22.0], [1.731748764E12, 25.0], [1.731748682E12, 22.0], [1.731748723E12, 24.0], [1.7317486E12, 23.0], [1.731748641E12, 26.400000000000006], [1.731748559E12, 25.69999999999999], [1.731748772E12, 26.650000000000006], [1.73174869E12, 22.0], [1.731748731E12, 25.0], [1.731748608E12, 26.0], [1.731748649E12, 26.0], [1.73174861E12, 25.69999999999999], [1.731748651E12, 26.0], [1.731748741E12, 24.0], [1.731748569E12, 26.69999999999999], [1.7317487E12, 22.0], [1.731748618E12, 23.0], [1.731748659E12, 22.0], [1.731748536E12, 26.0], [1.731748749E12, 22.0], [1.731748577E12, 23.0], [1.731748708E12, 22.0], [1.731748626E12, 22.0], [1.731748667E12, 23.5], [1.731748544E12, 24.0], [1.731748757E12, 25.0], [1.731748585E12, 24.0], [1.731748716E12, 22.0], [1.731748634E12, 23.0], [1.731748675E12, 23.0], [1.731748552E12, 21.549999999999983], [1.731748765E12, 25.650000000000006], [1.731748593E12, 24.0], [1.731748724E12, 23.0], [1.731748642E12, 23.0], [1.731748683E12, 23.0], [1.73174856E12, 26.0], [1.731748773E12, 25.0], [1.731748601E12, 23.599999999999994], [1.731748732E12, 23.0], [1.73174865E12, 24.0], [1.731748691E12, 22.5], [1.731748652E12, 25.650000000000006], [1.73174857E12, 25.650000000000006], [1.731748611E12, 25.0], [1.731748701E12, 21.0], [1.731748742E12, 25.0], [1.73174866E12, 22.0], [1.731748578E12, 22.69999999999999], [1.731748619E12, 24.0], [1.731748709E12, 22.650000000000006], [1.73174875E12, 25.0], [1.731748537E12, 26.44999999999999], [1.731748668E12, 24.69999999999999], [1.731748586E12, 24.0], [1.731748627E12, 25.0], [1.731748717E12, 22.69999999999999], [1.731748758E12, 25.5], [1.731748545E12, 22.0], [1.731748676E12, 22.0], [1.731748594E12, 25.0], [1.731748635E12, 25.0], [1.731748725E12, 23.0], [1.731748766E12, 26.0], [1.731748553E12, 23.0], [1.731748684E12, 22.650000000000006], [1.731748602E12, 22.799999999999983], [1.731748643E12, 23.0], [1.731748733E12, 24.0], [1.731748774E12, 29.0], [1.731748561E12, 25.0], [1.731748692E12, 24.0], [1.731748653E12, 25.69999999999999], [1.731748694E12, 24.0], [1.731748612E12, 24.599999999999994], [1.731748743E12, 25.0], [1.731748571E12, 27.0], [1.731748661E12, 22.0], [1.731748702E12, 24.0], [1.73174862E12, 23.599999999999994], [1.731748538E12, 27.0], [1.731748751E12, 23.549999999999983], [1.731748579E12, 23.0], [1.731748669E12, 23.0], [1.73174871E12, 25.0], [1.731748628E12, 24.0], [1.731748546E12, 22.0], [1.731748759E12, 24.0], [1.731748587E12, 23.0], [1.731748677E12, 21.0], [1.731748718E12, 23.0], [1.731748636E12, 24.0], [1.731748554E12, 23.0], [1.731748767E12, 26.0], [1.731748595E12, 25.0], [1.731748685E12, 22.0], [1.731748726E12, 24.0], [1.731748644E12, 21.650000000000006], [1.731748562E12, 22.549999999999983], [1.731748775E12, 22.0], [1.731748603E12, 23.549999999999983], [1.731748693E12, 23.0], [1.731748734E12, 27.5], [1.731748695E12, 22.650000000000006], [1.731748613E12, 25.0], [1.731748654E12, 25.0], [1.731748744E12, 23.0], [1.731748572E12, 25.599999999999994], [1.731748703E12, 22.0], [1.731748621E12, 22.799999999999983], [1.731748662E12, 24.0], [1.731748752E12, 22.0], [1.73174858E12, 22.0], [1.731748711E12, 23.0], [1.731748539E12, 24.44999999999999], [1.731748629E12, 22.650000000000006], [1.73174867E12, 22.0], [1.73174876E12, 23.0], [1.731748588E12, 23.0], [1.731748719E12, 22.650000000000006], [1.731748547E12, 22.0], [1.731748637E12, 23.0], [1.731748678E12, 24.0], [1.731748768E12, 25.0], [1.731748596E12, 23.0], [1.731748727E12, 23.0], [1.731748555E12, 25.19999999999999], [1.731748645E12, 22.650000000000006], [1.731748686E12, 24.0], [1.731748604E12, 23.549999999999983], [1.731748735E12, 24.0], [1.731748563E12, 23.0], [1.731748696E12, 22.0], [1.731748737E12, 25.0], [1.731748655E12, 23.549999999999983], [1.731748573E12, 26.0], [1.731748614E12, 25.0], [1.731748704E12, 21.0], [1.731748745E12, 24.650000000000006], [1.731748663E12, 23.599999999999994], [1.731748581E12, 22.0], [1.731748622E12, 24.549999999999983], [1.731748712E12, 24.0], [1.73174854E12, 24.0], [1.731748753E12, 23.0], [1.731748671E12, 24.0], [1.731748589E12, 24.0], [1.73174863E12, 24.0], [1.73174872E12, 21.0], [1.731748548E12, 23.0], [1.731748761E12, 27.0], [1.731748679E12, 24.0], [1.731748597E12, 24.0], [1.731748638E12, 24.0], [1.731748728E12, 22.599999999999994], [1.731748556E12, 25.0], [1.731748769E12, 25.0], [1.731748687E12, 24.399999999999977], [1.731748605E12, 22.0], [1.731748646E12, 24.0], [1.731748736E12, 22.599999999999994], [1.731748564E12, 21.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.731748738E12, 12.0], [1.731748566E12, 12.0], [1.731748656E12, 12.0], [1.731748697E12, 12.0], [1.731748615E12, 12.0], [1.731748746E12, 12.0], [1.731748574E12, 12.0], [1.731748664E12, 12.0], [1.731748705E12, 12.0], [1.731748623E12, 12.0], [1.731748754E12, 12.0], [1.731748541E12, 12.0], [1.731748582E12, 12.0], [1.731748672E12, 12.0], [1.731748713E12, 12.0], [1.731748631E12, 12.0], [1.731748762E12, 12.0], [1.731748549E12, 12.0], [1.73174859E12, 12.0], [1.73174868E12, 12.0], [1.731748721E12, 12.0], [1.731748639E12, 12.0], [1.73174877E12, 12.0], [1.731748557E12, 12.0], [1.731748598E12, 12.0], [1.731748688E12, 11.0], [1.731748729E12, 12.0], [1.731748647E12, 12.0], [1.731748565E12, 12.0], [1.731748606E12, 12.0], [1.731748567E12, 12.0], [1.731748698E12, 12.0], [1.731748739E12, 12.0], [1.731748616E12, 12.0], [1.731748657E12, 12.0], [1.731748575E12, 12.0], [1.731748706E12, 12.0], [1.731748747E12, 12.0], [1.731748624E12, 12.0], [1.731748665E12, 12.0], [1.731748583E12, 12.0], [1.731748714E12, 12.0], [1.731748542E12, 12.0], [1.731748755E12, 12.0], [1.731748632E12, 12.0], [1.731748673E12, 12.0], [1.731748591E12, 12.0], [1.731748722E12, 12.0], [1.73174855E12, 12.0], [1.731748763E12, 12.0], [1.73174864E12, 12.0], [1.731748681E12, 12.0], [1.731748599E12, 12.0], [1.73174873E12, 12.0], [1.731748558E12, 12.0], [1.731748771E12, 12.0], [1.731748648E12, 12.0], [1.731748689E12, 12.0], [1.731748607E12, 12.0], [1.731748568E12, 12.0], [1.731748609E12, 12.0], [1.73174874E12, 12.0], [1.731748658E12, 12.0], [1.731748699E12, 12.0], [1.731748576E12, 12.0], [1.731748617E12, 12.0], [1.731748535E12, 13.0], [1.731748748E12, 12.0], [1.731748666E12, 12.0], [1.731748707E12, 12.0], [1.731748584E12, 12.0], [1.731748625E12, 12.0], [1.731748543E12, 12.0], [1.731748756E12, 12.0], [1.731748674E12, 12.0], [1.731748715E12, 12.0], [1.731748592E12, 12.0], [1.731748633E12, 12.0], [1.731748551E12, 12.0], [1.731748764E12, 12.0], [1.731748682E12, 12.0], [1.731748723E12, 12.0], [1.7317486E12, 12.0], [1.731748641E12, 12.0], [1.731748559E12, 12.0], [1.731748772E12, 12.0], [1.73174869E12, 12.0], [1.731748731E12, 12.0], [1.731748608E12, 12.0], [1.731748649E12, 12.0], [1.73174861E12, 12.0], [1.731748651E12, 12.0], [1.731748741E12, 12.0], [1.731748569E12, 12.0], [1.7317487E12, 12.0], [1.731748618E12, 12.0], [1.731748659E12, 12.0], [1.731748536E12, 13.0], [1.731748749E12, 12.0], [1.731748577E12, 12.0], [1.731748708E12, 12.0], [1.731748626E12, 12.0], [1.731748667E12, 12.0], [1.731748544E12, 12.0], [1.731748757E12, 12.0], [1.731748585E12, 12.0], [1.731748716E12, 11.0], [1.731748634E12, 12.0], [1.731748675E12, 12.0], [1.731748552E12, 12.0], [1.731748765E12, 12.0], [1.731748593E12, 12.0], [1.731748724E12, 12.0], [1.731748642E12, 12.0], [1.731748683E12, 12.0], [1.73174856E12, 12.0], [1.731748773E12, 12.0], [1.731748601E12, 11.0], [1.731748732E12, 12.0], [1.73174865E12, 12.0], [1.731748691E12, 12.0], [1.731748652E12, 12.0], [1.73174857E12, 12.0], [1.731748611E12, 12.0], [1.731748701E12, 12.0], [1.731748742E12, 12.0], [1.73174866E12, 12.0], [1.731748578E12, 12.0], [1.731748619E12, 12.0], [1.731748709E12, 12.0], [1.73174875E12, 12.0], [1.731748537E12, 12.0], [1.731748668E12, 12.0], [1.731748586E12, 12.0], [1.731748627E12, 12.0], [1.731748717E12, 12.0], [1.731748758E12, 12.0], [1.731748545E12, 12.0], [1.731748676E12, 12.0], [1.731748594E12, 12.0], [1.731748635E12, 12.0], [1.731748725E12, 12.0], [1.731748766E12, 12.0], [1.731748553E12, 12.0], [1.731748684E12, 12.0], [1.731748602E12, 12.0], [1.731748643E12, 12.0], [1.731748733E12, 12.0], [1.731748774E12, 12.0], [1.731748561E12, 12.0], [1.731748692E12, 12.0], [1.731748653E12, 12.0], [1.731748694E12, 12.0], [1.731748612E12, 12.0], [1.731748743E12, 12.0], [1.731748571E12, 12.0], [1.731748661E12, 12.0], [1.731748702E12, 12.0], [1.73174862E12, 12.0], [1.731748538E12, 12.0], [1.731748751E12, 12.0], [1.731748579E12, 12.0], [1.731748669E12, 12.0], [1.73174871E12, 12.0], [1.731748628E12, 12.0], [1.731748546E12, 12.0], [1.731748759E12, 12.0], [1.731748587E12, 12.0], [1.731748677E12, 12.0], [1.731748718E12, 12.0], [1.731748636E12, 12.0], [1.731748554E12, 12.0], [1.731748767E12, 12.0], [1.731748595E12, 12.0], [1.731748685E12, 12.0], [1.731748726E12, 12.0], [1.731748644E12, 12.0], [1.731748562E12, 12.0], [1.731748775E12, 12.0], [1.731748603E12, 12.0], [1.731748693E12, 12.0], [1.731748734E12, 12.0], [1.731748695E12, 12.0], [1.731748613E12, 12.0], [1.731748654E12, 12.0], [1.731748744E12, 12.0], [1.731748572E12, 12.0], [1.731748703E12, 12.0], [1.731748621E12, 12.0], [1.731748662E12, 12.0], [1.731748752E12, 12.0], [1.73174858E12, 12.0], [1.731748711E12, 12.0], [1.731748539E12, 12.0], [1.731748629E12, 12.0], [1.73174867E12, 12.0], [1.73174876E12, 12.0], [1.731748588E12, 12.0], [1.731748719E12, 12.0], [1.731748547E12, 12.0], [1.731748637E12, 12.0], [1.731748678E12, 12.0], [1.731748768E12, 12.0], [1.731748596E12, 12.0], [1.731748727E12, 12.0], [1.731748555E12, 12.0], [1.731748645E12, 12.0], [1.731748686E12, 12.0], [1.731748604E12, 12.0], [1.731748735E12, 12.0], [1.731748563E12, 12.0], [1.731748696E12, 11.0], [1.731748737E12, 12.0], [1.731748655E12, 12.0], [1.731748573E12, 12.0], [1.731748614E12, 12.0], [1.731748704E12, 12.0], [1.731748745E12, 12.0], [1.731748663E12, 12.0], [1.731748581E12, 12.0], [1.731748622E12, 12.0], [1.731748712E12, 12.0], [1.73174854E12, 12.0], [1.731748753E12, 12.0], [1.731748671E12, 12.0], [1.731748589E12, 12.0], [1.73174863E12, 12.0], [1.73174872E12, 12.0], [1.731748548E12, 12.0], [1.731748761E12, 12.0], [1.731748679E12, 12.0], [1.731748597E12, 12.0], [1.731748638E12, 12.0], [1.731748728E12, 12.0], [1.731748556E12, 12.0], [1.731748769E12, 12.0], [1.731748687E12, 12.0], [1.731748605E12, 12.0], [1.731748646E12, 12.0], [1.731748736E12, 12.0], [1.731748564E12, 12.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.731748738E12, 17.0], [1.731748566E12, 16.0], [1.731748656E12, 17.0], [1.731748697E12, 16.0], [1.731748615E12, 17.0], [1.731748746E12, 17.0], [1.731748574E12, 18.0], [1.731748664E12, 16.0], [1.731748705E12, 16.0], [1.731748623E12, 17.0], [1.731748754E12, 16.0], [1.731748541E12, 16.0], [1.731748582E12, 17.0], [1.731748672E12, 16.0], [1.731748713E12, 16.5], [1.731748631E12, 17.0], [1.731748762E12, 17.0], [1.731748549E12, 16.0], [1.73174859E12, 17.0], [1.73174868E12, 17.0], [1.731748721E12, 16.0], [1.731748639E12, 17.0], [1.73174877E12, 18.0], [1.731748557E12, 17.0], [1.731748598E12, 17.0], [1.731748688E12, 16.0], [1.731748729E12, 17.0], [1.731748647E12, 17.0], [1.731748565E12, 16.0], [1.731748606E12, 17.0], [1.731748567E12, 16.0], [1.731748698E12, 16.0], [1.731748739E12, 18.0], [1.731748616E12, 17.0], [1.731748657E12, 18.0], [1.731748575E12, 16.0], [1.731748706E12, 16.0], [1.731748747E12, 17.0], [1.731748624E12, 17.0], [1.731748665E12, 16.5], [1.731748583E12, 16.0], [1.731748714E12, 17.0], [1.731748542E12, 16.0], [1.731748755E12, 17.0], [1.731748632E12, 17.0], [1.731748673E12, 16.0], [1.731748591E12, 18.0], [1.731748722E12, 16.0], [1.73174855E12, 17.0], [1.731748763E12, 18.0], [1.73174864E12, 17.0], [1.731748681E12, 17.0], [1.731748599E12, 16.0], [1.73174873E12, 18.0], [1.731748558E12, 18.0], [1.731748771E12, 18.0], [1.731748648E12, 17.0], [1.731748689E12, 17.0], [1.731748607E12, 17.0], [1.731748568E12, 17.0], [1.731748609E12, 18.0], [1.73174874E12, 18.0], [1.731748658E12, 16.0], [1.731748699E12, 16.0], [1.731748576E12, 16.0], [1.731748617E12, 18.0], [1.731748535E12, 19.0], [1.731748748E12, 17.0], [1.731748666E12, 16.0], [1.731748707E12, 17.0], [1.731748584E12, 16.0], [1.731748625E12, 17.0], [1.731748543E12, 16.0], [1.731748756E12, 17.0], [1.731748674E12, 16.0], [1.731748715E12, 17.0], [1.731748592E12, 18.0], [1.731748633E12, 17.0], [1.731748551E12, 16.0], [1.731748764E12, 19.0], [1.731748682E12, 17.0], [1.731748723E12, 16.0], [1.7317486E12, 17.0], [1.731748641E12, 17.0], [1.731748559E12, 18.0], [1.731748772E12, 19.0], [1.73174869E12, 16.0], [1.731748731E12, 17.5], [1.731748608E12, 18.0], [1.731748649E12, 18.0], [1.73174861E12, 19.0], [1.731748651E12, 17.5], [1.731748741E12, 18.0], [1.731748569E12, 18.0], [1.7317487E12, 17.0], [1.731748618E12, 17.0], [1.731748659E12, 17.0], [1.731748536E12, 19.0], [1.731748749E12, 16.0], [1.731748577E12, 17.0], [1.731748708E12, 16.0], [1.731748626E12, 16.0], [1.731748667E12, 16.0], [1.731748544E12, 16.0], [1.731748757E12, 17.0], [1.731748585E12, 17.0], [1.731748716E12, 16.0], [1.731748634E12, 17.0], [1.731748675E12, 17.0], [1.731748552E12, 16.0], [1.731748765E12, 18.0], [1.731748593E12, 18.5], [1.731748724E12, 17.0], [1.731748642E12, 16.0], [1.731748683E12, 17.0], [1.73174856E12, 18.0], [1.731748773E12, 18.0], [1.731748601E12, 17.0], [1.731748732E12, 17.0], [1.73174865E12, 18.0], [1.731748691E12, 17.0], [1.731748652E12, 17.0], [1.73174857E12, 18.0], [1.731748611E12, 18.0], [1.731748701E12, 16.0], [1.731748742E12, 18.0], [1.73174866E12, 16.0], [1.731748578E12, 16.0], [1.731748619E12, 17.0], [1.731748709E12, 16.0], [1.73174875E12, 17.0], [1.731748537E12, 19.0], [1.731748668E12, 17.0], [1.731748586E12, 16.0], [1.731748627E12, 17.0], [1.731748717E12, 16.0], [1.731748758E12, 18.0], [1.731748545E12, 16.0], [1.731748676E12, 16.0], [1.731748594E12, 18.0], [1.731748635E12, 17.0], [1.731748725E12, 16.0], [1.731748766E12, 18.0], [1.731748553E12, 16.0], [1.731748684E12, 17.0], [1.731748602E12, 16.0], [1.731748643E12, 17.0], [1.731748733E12, 17.0], [1.731748774E12, 18.0], [1.731748561E12, 18.0], [1.731748692E12, 17.0], [1.731748653E12, 18.0], [1.731748694E12, 17.0], [1.731748612E12, 18.0], [1.731748743E12, 17.5], [1.731748571E12, 19.0], [1.731748661E12, 16.0], [1.731748702E12, 17.0], [1.73174862E12, 17.0], [1.731748538E12, 20.0], [1.731748751E12, 16.0], [1.731748579E12, 17.0], [1.731748669E12, 17.0], [1.73174871E12, 17.0], [1.731748628E12, 16.0], [1.731748546E12, 17.0], [1.731748759E12, 17.0], [1.731748587E12, 16.0], [1.731748677E12, 16.0], [1.731748718E12, 17.0], [1.731748636E12, 17.0], [1.731748554E12, 17.0], [1.731748767E12, 17.0], [1.731748595E12, 18.0], [1.731748685E12, 16.0], [1.731748726E12, 17.0], [1.731748644E12, 16.0], [1.731748562E12, 17.0], [1.731748775E12, 13.0], [1.731748603E12, 17.0], [1.731748693E12, 16.0], [1.731748734E12, 18.0], [1.731748695E12, 16.0], [1.731748613E12, 17.0], [1.731748654E12, 18.0], [1.731748744E12, 17.0], [1.731748572E12, 17.0], [1.731748703E12, 17.0], [1.731748621E12, 17.0], [1.731748662E12, 16.0], [1.731748752E12, 16.0], [1.73174858E12, 16.0], [1.731748711E12, 16.0], [1.731748539E12, 18.0], [1.731748629E12, 16.0], [1.73174867E12, 17.0], [1.73174876E12, 17.0], [1.731748588E12, 16.0], [1.731748719E12, 16.0], [1.731748547E12, 16.0], [1.731748637E12, 16.0], [1.731748678E12, 17.0], [1.731748768E12, 17.0], [1.731748596E12, 17.0], [1.731748727E12, 17.0], [1.731748555E12, 18.0], [1.731748645E12, 16.0], [1.731748686E12, 17.0], [1.731748604E12, 17.0], [1.731748735E12, 17.0], [1.731748563E12, 17.0], [1.731748696E12, 16.0], [1.731748737E12, 18.0], [1.731748655E12, 17.5], [1.731748573E12, 17.0], [1.731748614E12, 18.0], [1.731748704E12, 16.0], [1.731748745E12, 17.0], [1.731748663E12, 16.0], [1.731748581E12, 16.0], [1.731748622E12, 18.0], [1.731748712E12, 16.0], [1.73174854E12, 18.0], [1.731748753E12, 16.0], [1.731748671E12, 16.0], [1.731748589E12, 17.0], [1.73174863E12, 18.0], [1.73174872E12, 16.0], [1.731748548E12, 16.0], [1.731748761E12, 19.0], [1.731748679E12, 17.0], [1.731748597E12, 16.5], [1.731748638E12, 17.0], [1.731748728E12, 17.0], [1.731748556E12, 18.0], [1.731748769E12, 18.0], [1.731748687E12, 16.0], [1.731748605E12, 16.0], [1.731748646E12, 18.0], [1.731748736E12, 17.0], [1.731748564E12, 17.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.731748775E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 7.0, "minX": 52.0, "maxY": 20.0, "series": [{"data": [[182.0, 17.0], [183.0, 17.0], [181.0, 16.0], [191.0, 17.0], [190.0, 17.0], [189.0, 17.0], [188.0, 17.0], [186.0, 17.0], [187.0, 17.0], [185.0, 17.0], [184.0, 17.0], [194.0, 18.0], [197.0, 20.0], [192.0, 17.0], [193.0, 17.0], [52.0, 13.0], [115.0, 19.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[182.0, 7.0], [183.0, 7.0], [181.0, 7.0], [191.0, 7.0], [190.0, 7.0], [189.0, 7.0], [188.0, 7.0], [186.0, 7.0], [187.0, 7.0], [185.0, 7.0], [184.0, 7.0], [194.0, 8.0], [197.0, 9.0], [192.0, 7.0], [193.0, 7.0], [52.0, 7.0], [115.0, 8.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 197.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 7.0, "minX": 52.0, "maxY": 20.0, "series": [{"data": [[182.0, 17.0], [183.0, 17.0], [181.0, 16.0], [191.0, 17.0], [190.0, 17.0], [189.0, 17.0], [188.0, 17.0], [186.0, 17.0], [187.0, 17.0], [185.0, 17.0], [184.0, 17.0], [194.0, 18.0], [197.0, 20.0], [192.0, 17.0], [193.0, 17.0], [52.0, 13.0], [115.0, 19.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[182.0, 7.0], [183.0, 7.0], [181.0, 7.0], [191.0, 7.0], [190.0, 7.0], [189.0, 7.0], [188.0, 7.0], [186.0, 7.0], [187.0, 7.0], [185.0, 7.0], [184.0, 7.0], [194.0, 8.0], [197.0, 8.0], [192.0, 7.0], [193.0, 7.0], [52.0, 7.0], [115.0, 8.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 197.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 49.0, "minX": 1.731748535E12, "maxY": 196.0, "series": [{"data": [[1.731748738E12, 186.0], [1.731748566E12, 189.0], [1.731748656E12, 185.0], [1.731748697E12, 190.0], [1.731748615E12, 187.0], [1.731748746E12, 187.0], [1.731748574E12, 190.0], [1.731748664E12, 182.0], [1.731748705E12, 191.0], [1.731748623E12, 190.0], [1.731748754E12, 188.0], [1.731748541E12, 182.0], [1.731748582E12, 189.0], [1.731748672E12, 184.0], [1.731748713E12, 187.0], [1.731748631E12, 188.0], [1.731748762E12, 187.0], [1.731748549E12, 182.0], [1.73174859E12, 187.0], [1.73174868E12, 183.0], [1.731748721E12, 190.0], [1.731748639E12, 193.0], [1.73174877E12, 187.0], [1.731748557E12, 186.0], [1.731748598E12, 189.0], [1.731748688E12, 181.0], [1.731748729E12, 189.0], [1.731748647E12, 187.0], [1.731748565E12, 185.0], [1.731748606E12, 187.0], [1.731748567E12, 187.0], [1.731748698E12, 190.0], [1.731748739E12, 183.0], [1.731748616E12, 185.0], [1.731748657E12, 188.0], [1.731748575E12, 189.0], [1.731748706E12, 189.0], [1.731748747E12, 186.0], [1.731748624E12, 183.0], [1.731748665E12, 189.0], [1.731748583E12, 188.0], [1.731748714E12, 190.0], [1.731748542E12, 192.0], [1.731748755E12, 182.0], [1.731748632E12, 185.0], [1.731748673E12, 190.0], [1.731748591E12, 188.0], [1.731748722E12, 188.0], [1.73174855E12, 191.0], [1.731748763E12, 183.0], [1.73174864E12, 181.0], [1.731748681E12, 191.0], [1.731748599E12, 190.0], [1.73174873E12, 190.0], [1.731748558E12, 190.0], [1.731748771E12, 184.0], [1.731748648E12, 184.0], [1.731748689E12, 190.0], [1.731748607E12, 186.0], [1.731748568E12, 181.0], [1.731748609E12, 188.0], [1.73174874E12, 193.0], [1.731748658E12, 190.0], [1.731748699E12, 183.0], [1.731748576E12, 186.0], [1.731748617E12, 188.0], [1.731748535E12, 119.0], [1.731748748E12, 190.0], [1.731748666E12, 189.0], [1.731748707E12, 182.0], [1.731748584E12, 184.0], [1.731748625E12, 191.0], [1.731748543E12, 189.0], [1.731748756E12, 188.0], [1.731748674E12, 188.0], [1.731748715E12, 184.0], [1.731748592E12, 185.0], [1.731748633E12, 188.0], [1.731748551E12, 190.0], [1.731748764E12, 190.0], [1.731748682E12, 190.0], [1.731748723E12, 183.0], [1.7317486E12, 184.0], [1.731748641E12, 189.0], [1.731748559E12, 187.0], [1.731748772E12, 188.0], [1.73174869E12, 189.0], [1.731748731E12, 185.0], [1.731748608E12, 185.0], [1.731748649E12, 187.0], [1.73174861E12, 187.0], [1.731748651E12, 187.0], [1.731748741E12, 188.0], [1.731748569E12, 188.0], [1.7317487E12, 191.0], [1.731748618E12, 190.0], [1.731748659E12, 187.0], [1.731748536E12, 191.0], [1.731748749E12, 190.0], [1.731748577E12, 191.0], [1.731748708E12, 193.0], [1.731748626E12, 186.0], [1.731748667E12, 187.0], [1.731748544E12, 182.0], [1.731748757E12, 188.0], [1.731748585E12, 189.0], [1.731748716E12, 192.0], [1.731748634E12, 188.0], [1.731748675E12, 186.0], [1.731748552E12, 183.0], [1.731748765E12, 190.0], [1.731748593E12, 186.0], [1.731748724E12, 190.0], [1.731748642E12, 189.0], [1.731748683E12, 182.0], [1.73174856E12, 182.0], [1.731748773E12, 190.0], [1.731748601E12, 189.0], [1.731748732E12, 190.0], [1.73174865E12, 189.0], [1.731748691E12, 184.0], [1.731748652E12, 190.0], [1.73174857E12, 190.0], [1.731748611E12, 188.0], [1.731748701E12, 187.0], [1.731748742E12, 185.0], [1.73174866E12, 188.0], [1.731748578E12, 187.0], [1.731748619E12, 186.0], [1.731748709E12, 186.0], [1.73174875E12, 185.0], [1.731748537E12, 194.0], [1.731748668E12, 187.0], [1.731748586E12, 190.0], [1.731748627E12, 186.0], [1.731748717E12, 186.0], [1.731748758E12, 187.0], [1.731748545E12, 191.0], [1.731748676E12, 189.0], [1.731748594E12, 189.0], [1.731748635E12, 186.0], [1.731748725E12, 188.0], [1.731748766E12, 188.0], [1.731748553E12, 189.0], [1.731748684E12, 193.0], [1.731748602E12, 187.0], [1.731748643E12, 186.0], [1.731748733E12, 188.0], [1.731748774E12, 185.0], [1.731748561E12, 193.0], [1.731748692E12, 189.0], [1.731748653E12, 186.0], [1.731748694E12, 188.0], [1.731748612E12, 189.0], [1.731748743E12, 189.0], [1.731748571E12, 187.0], [1.731748661E12, 188.0], [1.731748702E12, 188.0], [1.73174862E12, 188.0], [1.731748538E12, 196.0], [1.731748751E12, 189.0], [1.731748579E12, 187.0], [1.731748669E12, 190.0], [1.73174871E12, 187.0], [1.731748628E12, 188.0], [1.731748546E12, 188.0], [1.731748759E12, 186.0], [1.731748587E12, 185.0], [1.731748677E12, 189.0], [1.731748718E12, 189.0], [1.731748636E12, 189.0], [1.731748554E12, 186.0], [1.731748767E12, 186.0], [1.731748595E12, 190.0], [1.731748685E12, 188.0], [1.731748726E12, 187.0], [1.731748644E12, 189.0], [1.731748562E12, 190.0], [1.731748775E12, 49.0], [1.731748603E12, 187.0], [1.731748693E12, 188.0], [1.731748734E12, 186.0], [1.731748695E12, 191.0], [1.731748613E12, 187.0], [1.731748654E12, 187.0], [1.731748744E12, 186.0], [1.731748572E12, 186.0], [1.731748703E12, 191.0], [1.731748621E12, 185.0], [1.731748662E12, 186.0], [1.731748752E12, 186.0], [1.73174858E12, 188.0], [1.731748711E12, 192.0], [1.731748539E12, 190.0], [1.731748629E12, 187.0], [1.73174867E12, 188.0], [1.73174876E12, 187.0], [1.731748588E12, 189.0], [1.731748719E12, 190.0], [1.731748547E12, 189.0], [1.731748637E12, 186.0], [1.731748678E12, 184.0], [1.731748768E12, 187.0], [1.731748596E12, 188.0], [1.731748727E12, 187.0], [1.731748555E12, 187.0], [1.731748645E12, 187.0], [1.731748686E12, 187.0], [1.731748604E12, 188.0], [1.731748735E12, 191.0], [1.731748563E12, 188.0], [1.731748696E12, 182.0], [1.731748737E12, 190.0], [1.731748655E12, 191.0], [1.731748573E12, 188.0], [1.731748614E12, 191.0], [1.731748704E12, 180.0], [1.731748745E12, 190.0], [1.731748663E12, 190.0], [1.731748581E12, 186.0], [1.731748622E12, 190.0], [1.731748712E12, 181.0], [1.73174854E12, 192.0], [1.731748753E12, 190.0], [1.731748671E12, 186.0], [1.731748589E12, 185.0], [1.73174863E12, 190.0], [1.73174872E12, 182.0], [1.731748548E12, 188.0], [1.731748761E12, 189.0], [1.731748679E12, 189.0], [1.731748597E12, 187.0], [1.731748638E12, 187.0], [1.731748728E12, 183.0], [1.731748556E12, 188.0], [1.731748769E12, 190.0], [1.731748687E12, 190.0], [1.731748605E12, 188.0], [1.731748646E12, 188.0], [1.731748736E12, 183.0], [1.731748564E12, 188.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.731748775E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 7.0, "minX": 1.731748535E12, "maxY": 176.0, "series": [{"data": [[1.731748738E12, 164.0], [1.731748566E12, 166.0], [1.731748656E12, 169.0], [1.731748697E12, 167.0], [1.731748615E12, 165.0], [1.731748746E12, 165.0], [1.731748574E12, 168.0], [1.731748664E12, 170.0], [1.731748705E12, 167.0], [1.731748623E12, 168.0], [1.731748754E12, 166.0], [1.731748541E12, 170.0], [1.731748582E12, 166.0], [1.731748672E12, 172.0], [1.731748713E12, 164.0], [1.731748631E12, 164.0], [1.731748762E12, 165.0], [1.731748549E12, 168.0], [1.73174859E12, 164.0], [1.73174868E12, 171.0], [1.731748721E12, 167.0], [1.731748639E12, 168.0], [1.73174877E12, 165.0], [1.731748557E12, 169.0], [1.731748598E12, 166.0], [1.731748688E12, 169.0], [1.731748729E12, 165.0], [1.731748647E12, 164.0], [1.731748565E12, 168.0], [1.731748606E12, 164.0], [1.731748567E12, 165.0], [1.731748698E12, 166.0], [1.731748739E12, 168.0], [1.731748616E12, 170.0], [1.731748657E12, 169.0], [1.731748575E12, 167.0], [1.731748706E12, 165.0], [1.731748747E12, 171.0], [1.731748624E12, 168.0], [1.731748665E12, 166.0], [1.731748583E12, 166.0], [1.731748714E12, 167.0], [1.731748542E12, 169.0], [1.731748755E12, 167.0], [1.731748632E12, 170.0], [1.731748673E12, 167.0], [1.731748591E12, 166.0], [1.731748722E12, 166.0], [1.73174855E12, 168.0], [1.731748763E12, 168.0], [1.73174864E12, 166.0], [1.731748681E12, 167.0], [1.731748599E12, 168.0], [1.73174873E12, 169.0], [1.731748558E12, 168.0], [1.731748771E12, 169.0], [1.731748648E12, 167.0], [1.731748689E12, 167.0], [1.731748607E12, 164.0], [1.731748568E12, 166.0], [1.731748609E12, 165.0], [1.73174874E12, 168.0], [1.731748658E12, 166.0], [1.731748699E12, 168.0], [1.731748576E12, 171.0], [1.731748617E12, 166.0], [1.731748535E12, 100.0], [1.731748748E12, 167.0], [1.731748666E12, 165.0], [1.731748707E12, 169.0], [1.731748584E12, 169.0], [1.731748625E12, 170.0], [1.731748543E12, 165.0], [1.731748756E12, 166.0], [1.731748674E12, 164.0], [1.731748715E12, 170.0], [1.731748592E12, 170.0], [1.731748633E12, 168.0], [1.731748551E12, 168.0], [1.731748764E12, 168.0], [1.731748682E12, 167.0], [1.731748723E12, 168.0], [1.7317486E12, 169.0], [1.731748641E12, 171.0], [1.731748559E12, 165.0], [1.731748772E12, 166.0], [1.73174869E12, 165.0], [1.731748731E12, 170.0], [1.731748608E12, 170.0], [1.731748649E12, 169.0], [1.73174861E12, 165.0], [1.731748651E12, 168.0], [1.731748741E12, 165.0], [1.731748569E12, 165.0], [1.7317487E12, 165.0], [1.731748618E12, 166.0], [1.731748659E12, 168.0], [1.731748536E12, 176.0], [1.731748749E12, 165.0], [1.731748577E12, 165.0], [1.731748708E12, 165.0], [1.731748626E12, 161.0], [1.731748667E12, 169.0], [1.731748544E12, 170.0], [1.731748757E12, 163.0], [1.731748585E12, 167.0], [1.731748716E12, 165.0], [1.731748634E12, 162.0], [1.731748675E12, 171.0], [1.731748552E12, 168.0], [1.731748765E12, 166.0], [1.731748593E12, 164.0], [1.731748724E12, 165.0], [1.731748642E12, 161.0], [1.731748683E12, 168.0], [1.73174856E12, 167.0], [1.731748773E12, 165.0], [1.731748601E12, 167.0], [1.731748732E12, 165.0], [1.73174865E12, 165.0], [1.731748691E12, 169.0], [1.731748652E12, 166.0], [1.73174857E12, 166.0], [1.731748611E12, 170.0], [1.731748701E12, 167.0], [1.731748742E12, 168.0], [1.73174866E12, 165.0], [1.731748578E12, 165.0], [1.731748619E12, 169.0], [1.731748709E12, 166.0], [1.73174875E12, 168.0], [1.731748537E12, 170.0], [1.731748668E12, 165.0], [1.731748586E12, 166.0], [1.731748627E12, 170.0], [1.731748717E12, 165.0], [1.731748758E12, 169.0], [1.731748545E12, 163.0], [1.731748676E12, 164.0], [1.731748594E12, 165.0], [1.731748635E12, 171.0], [1.731748725E12, 165.0], [1.731748766E12, 169.0], [1.731748553E12, 163.0], [1.731748684E12, 166.0], [1.731748602E12, 163.0], [1.731748643E12, 171.0], [1.731748733E12, 164.0], [1.731748774E12, 169.0], [1.731748561E12, 167.0], [1.731748692E12, 164.0], [1.731748653E12, 165.0], [1.731748694E12, 168.0], [1.731748612E12, 167.0], [1.731748743E12, 168.0], [1.731748571E12, 168.0], [1.731748661E12, 167.0], [1.731748702E12, 168.0], [1.73174862E12, 167.0], [1.731748538E12, 173.0], [1.731748751E12, 168.0], [1.731748579E12, 169.0], [1.731748669E12, 167.0], [1.73174871E12, 167.0], [1.731748628E12, 166.0], [1.731748546E12, 167.0], [1.731748759E12, 166.0], [1.731748587E12, 166.0], [1.731748677E12, 166.0], [1.731748718E12, 169.0], [1.731748636E12, 166.0], [1.731748554E12, 164.0], [1.731748767E12, 166.0], [1.731748595E12, 171.0], [1.731748685E12, 166.0], [1.731748726E12, 167.0], [1.731748644E12, 166.0], [1.731748562E12, 168.0], [1.731748775E12, 45.0], [1.731748603E12, 168.0], [1.731748693E12, 167.0], [1.731748734E12, 169.0], [1.731748695E12, 166.0], [1.731748613E12, 166.0], [1.731748654E12, 168.0], [1.731748744E12, 168.0], [1.731748572E12, 167.0], [1.731748703E12, 166.0], [1.731748621E12, 163.0], [1.731748662E12, 166.0], [1.731748752E12, 167.0], [1.73174858E12, 168.0], [1.731748711E12, 167.0], [1.731748539E12, 170.0], [1.731748629E12, 166.0], [1.73174867E12, 169.0], [1.73174876E12, 167.0], [1.731748588E12, 169.0], [1.731748719E12, 166.0], [1.731748547E12, 169.0], [1.731748637E12, 165.0], [1.731748678E12, 166.0], [1.731748768E12, 167.0], [1.731748596E12, 169.0], [1.731748727E12, 166.0], [1.731748555E12, 167.0], [1.731748645E12, 166.0], [1.731748686E12, 169.0], [1.731748604E12, 168.0], [1.731748735E12, 168.0], [1.731748563E12, 168.0], [1.731748696E12, 170.0], [1.731748737E12, 167.0], [1.731748655E12, 168.0], [1.731748573E12, 167.0], [1.731748614E12, 169.0], [1.731748704E12, 169.0], [1.731748745E12, 166.0], [1.731748663E12, 167.0], [1.731748581E12, 167.0], [1.731748622E12, 168.0], [1.731748712E12, 169.0], [1.73174854E12, 167.0], [1.731748753E12, 167.0], [1.731748671E12, 162.0], [1.731748589E12, 165.0], [1.73174863E12, 169.0], [1.73174872E12, 169.0], [1.731748548E12, 165.0], [1.731748761E12, 166.0], [1.731748679E12, 164.0], [1.731748597E12, 166.0], [1.731748638E12, 167.0], [1.731748728E12, 167.0], [1.731748556E12, 167.0], [1.731748769E12, 167.0], [1.731748687E12, 165.0], [1.731748605E12, 168.0], [1.731748646E12, 168.0], [1.731748736E12, 167.0], [1.731748564E12, 168.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.731748738E12, 22.0], [1.731748566E12, 23.0], [1.731748656E12, 16.0], [1.731748697E12, 23.0], [1.731748615E12, 22.0], [1.731748746E12, 22.0], [1.731748574E12, 23.0], [1.731748664E12, 13.0], [1.731748705E12, 23.0], [1.731748623E12, 22.0], [1.731748754E12, 22.0], [1.731748541E12, 12.0], [1.731748582E12, 23.0], [1.731748672E12, 12.0], [1.731748713E12, 23.0], [1.731748631E12, 24.0], [1.731748762E12, 22.0], [1.731748549E12, 14.0], [1.73174859E12, 23.0], [1.73174868E12, 12.0], [1.731748721E12, 23.0], [1.731748639E12, 25.0], [1.73174877E12, 22.0], [1.731748557E12, 16.0], [1.731748598E12, 23.0], [1.731748688E12, 12.0], [1.731748729E12, 23.0], [1.731748647E12, 23.0], [1.731748565E12, 16.0], [1.731748606E12, 23.0], [1.731748567E12, 22.0], [1.731748698E12, 24.0], [1.731748739E12, 15.0], [1.731748616E12, 15.0], [1.731748657E12, 19.0], [1.731748575E12, 22.0], [1.731748706E12, 24.0], [1.731748747E12, 15.0], [1.731748624E12, 15.0], [1.731748665E12, 22.0], [1.731748583E12, 22.0], [1.731748714E12, 23.0], [1.731748542E12, 23.0], [1.731748755E12, 15.0], [1.731748632E12, 15.0], [1.731748673E12, 23.0], [1.731748591E12, 22.0], [1.731748722E12, 22.0], [1.73174855E12, 23.0], [1.731748763E12, 15.0], [1.73174864E12, 15.0], [1.731748681E12, 23.0], [1.731748599E12, 22.0], [1.73174873E12, 22.0], [1.731748558E12, 23.0], [1.731748771E12, 15.0], [1.731748648E12, 17.0], [1.731748689E12, 23.0], [1.731748607E12, 22.0], [1.731748568E12, 15.0], [1.731748609E12, 22.0], [1.73174874E12, 26.0], [1.731748658E12, 24.0], [1.731748699E12, 15.0], [1.731748576E12, 15.0], [1.731748617E12, 21.0], [1.731748535E12, 15.0], [1.731748748E12, 24.0], [1.731748666E12, 24.0], [1.731748707E12, 13.0], [1.731748584E12, 15.0], [1.731748625E12, 21.0], [1.731748543E12, 24.0], [1.731748756E12, 22.0], [1.731748674E12, 24.0], [1.731748715E12, 14.0], [1.731748592E12, 15.0], [1.731748633E12, 19.0], [1.731748551E12, 22.0], [1.731748764E12, 22.0], [1.731748682E12, 24.0], [1.731748723E12, 15.0], [1.7317486E12, 15.0], [1.731748641E12, 18.0], [1.731748559E12, 22.0], [1.731748772E12, 22.0], [1.73174869E12, 24.0], [1.731748731E12, 15.0], [1.731748608E12, 15.0], [1.731748649E12, 18.0], [1.73174861E12, 24.0], [1.731748651E12, 19.0], [1.731748741E12, 21.0], [1.731748569E12, 22.0], [1.7317487E12, 26.0], [1.731748618E12, 25.0], [1.731748659E12, 19.0], [1.731748536E12, 15.0], [1.731748749E12, 24.0], [1.731748577E12, 26.0], [1.731748708E12, 28.0], [1.731748626E12, 25.0], [1.731748667E12, 18.0], [1.731748544E12, 13.0], [1.731748757E12, 24.0], [1.731748585E12, 22.0], [1.731748716E12, 28.0], [1.731748634E12, 27.0], [1.731748675E12, 15.0], [1.731748552E12, 15.0], [1.731748765E12, 24.0], [1.731748593E12, 22.0], [1.731748724E12, 26.0], [1.731748642E12, 28.0], [1.731748683E12, 15.0], [1.73174856E12, 15.0], [1.731748773E12, 24.0], [1.731748601E12, 22.0], [1.731748732E12, 26.0], [1.73174865E12, 24.0], [1.731748691E12, 15.0], [1.731748652E12, 24.0], [1.73174857E12, 25.0], [1.731748611E12, 17.0], [1.731748701E12, 20.0], [1.731748742E12, 18.0], [1.73174866E12, 24.0], [1.731748578E12, 22.0], [1.731748619E12, 17.0], [1.731748709E12, 20.0], [1.73174875E12, 17.0], [1.731748537E12, 24.0], [1.731748668E12, 23.0], [1.731748586E12, 24.0], [1.731748627E12, 16.0], [1.731748717E12, 20.0], [1.731748758E12, 19.0], [1.731748545E12, 27.0], [1.731748676E12, 26.0], [1.731748594E12, 24.0], [1.731748635E12, 15.0], [1.731748725E12, 22.0], [1.731748766E12, 19.0], [1.731748553E12, 26.0], [1.731748684E12, 26.0], [1.731748602E12, 24.0], [1.731748643E12, 15.0], [1.731748733E12, 22.0], [1.731748774E12, 17.0], [1.731748561E12, 26.0], [1.731748692E12, 26.0], [1.731748653E12, 20.0], [1.731748694E12, 20.0], [1.731748612E12, 22.0], [1.731748743E12, 21.0], [1.731748571E12, 18.0], [1.731748661E12, 20.0], [1.731748702E12, 20.0], [1.73174862E12, 22.0], [1.731748538E12, 24.0], [1.731748751E12, 21.0], [1.731748579E12, 18.0], [1.731748669E12, 22.0], [1.73174871E12, 20.0], [1.731748628E12, 23.0], [1.731748546E12, 21.0], [1.731748759E12, 20.0], [1.731748587E12, 19.0], [1.731748677E12, 22.0], [1.731748718E12, 20.0], [1.731748636E12, 24.0], [1.731748554E12, 22.0], [1.731748767E12, 20.0], [1.731748595E12, 19.0], [1.731748685E12, 22.0], [1.731748726E12, 20.0], [1.731748644E12, 24.0], [1.731748562E12, 22.0], [1.731748775E12, 7.0], [1.731748603E12, 19.0], [1.731748693E12, 20.0], [1.731748734E12, 18.0], [1.731748695E12, 25.0], [1.731748613E12, 20.0], [1.731748654E12, 20.0], [1.731748744E12, 19.0], [1.731748572E12, 20.0], [1.731748703E12, 25.0], [1.731748621E12, 20.0], [1.731748662E12, 20.0], [1.731748752E12, 19.0], [1.73174858E12, 20.0], [1.731748711E12, 25.0], [1.731748539E12, 20.0], [1.731748629E12, 20.0], [1.73174867E12, 19.0], [1.73174876E12, 20.0], [1.731748588E12, 20.0], [1.731748719E12, 25.0], [1.731748547E12, 20.0], [1.731748637E12, 20.0], [1.731748678E12, 18.0], [1.731748768E12, 20.0], [1.731748596E12, 20.0], [1.731748727E12, 21.0], [1.731748555E12, 20.0], [1.731748645E12, 20.0], [1.731748686E12, 18.0], [1.731748604E12, 20.0], [1.731748735E12, 23.0], [1.731748563E12, 20.0], [1.731748696E12, 12.0], [1.731748737E12, 23.0], [1.731748655E12, 23.0], [1.731748573E12, 20.0], [1.731748614E12, 23.0], [1.731748704E12, 12.0], [1.731748745E12, 23.0], [1.731748663E12, 23.0], [1.731748581E12, 19.0], [1.731748622E12, 23.0], [1.731748712E12, 12.0], [1.73174854E12, 25.0], [1.731748753E12, 23.0], [1.731748671E12, 24.0], [1.731748589E12, 20.0], [1.73174863E12, 21.0], [1.73174872E12, 12.0], [1.731748548E12, 23.0], [1.731748761E12, 23.0], [1.731748679E12, 25.0], [1.731748597E12, 20.0], [1.731748638E12, 20.0], [1.731748728E12, 16.0], [1.731748556E12, 21.0], [1.731748769E12, 23.0], [1.731748687E12, 25.0], [1.731748605E12, 20.0], [1.731748646E12, 20.0], [1.731748736E12, 16.0], [1.731748564E12, 21.0]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.731748775E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 7.0, "minX": 1.731748535E12, "maxY": 176.0, "series": [{"data": [[1.731748738E12, 22.0], [1.731748566E12, 23.0], [1.731748656E12, 16.0], [1.731748697E12, 23.0], [1.731748615E12, 22.0], [1.731748746E12, 22.0], [1.731748574E12, 23.0], [1.731748664E12, 13.0], [1.731748705E12, 23.0], [1.731748623E12, 22.0], [1.731748754E12, 22.0], [1.731748541E12, 12.0], [1.731748582E12, 23.0], [1.731748672E12, 12.0], [1.731748713E12, 23.0], [1.731748631E12, 24.0], [1.731748762E12, 22.0], [1.731748549E12, 14.0], [1.73174859E12, 23.0], [1.73174868E12, 12.0], [1.731748721E12, 23.0], [1.731748639E12, 25.0], [1.73174877E12, 22.0], [1.731748557E12, 16.0], [1.731748598E12, 23.0], [1.731748688E12, 12.0], [1.731748729E12, 23.0], [1.731748647E12, 23.0], [1.731748565E12, 16.0], [1.731748606E12, 23.0], [1.731748567E12, 22.0], [1.731748698E12, 24.0], [1.731748739E12, 15.0], [1.731748616E12, 15.0], [1.731748657E12, 19.0], [1.731748575E12, 22.0], [1.731748706E12, 24.0], [1.731748747E12, 15.0], [1.731748624E12, 15.0], [1.731748665E12, 22.0], [1.731748583E12, 22.0], [1.731748714E12, 23.0], [1.731748542E12, 23.0], [1.731748755E12, 15.0], [1.731748632E12, 15.0], [1.731748673E12, 23.0], [1.731748591E12, 22.0], [1.731748722E12, 22.0], [1.73174855E12, 23.0], [1.731748763E12, 15.0], [1.73174864E12, 15.0], [1.731748681E12, 23.0], [1.731748599E12, 22.0], [1.73174873E12, 22.0], [1.731748558E12, 23.0], [1.731748771E12, 15.0], [1.731748648E12, 17.0], [1.731748689E12, 23.0], [1.731748607E12, 22.0], [1.731748568E12, 15.0], [1.731748609E12, 22.0], [1.73174874E12, 26.0], [1.731748658E12, 24.0], [1.731748699E12, 15.0], [1.731748576E12, 15.0], [1.731748617E12, 21.0], [1.731748535E12, 15.0], [1.731748748E12, 24.0], [1.731748666E12, 24.0], [1.731748707E12, 13.0], [1.731748584E12, 15.0], [1.731748625E12, 21.0], [1.731748543E12, 24.0], [1.731748756E12, 22.0], [1.731748674E12, 24.0], [1.731748715E12, 14.0], [1.731748592E12, 15.0], [1.731748633E12, 19.0], [1.731748551E12, 22.0], [1.731748764E12, 22.0], [1.731748682E12, 24.0], [1.731748723E12, 15.0], [1.7317486E12, 15.0], [1.731748641E12, 18.0], [1.731748559E12, 22.0], [1.731748772E12, 22.0], [1.73174869E12, 24.0], [1.731748731E12, 15.0], [1.731748608E12, 15.0], [1.731748649E12, 18.0], [1.73174861E12, 24.0], [1.731748651E12, 19.0], [1.731748741E12, 21.0], [1.731748569E12, 22.0], [1.7317487E12, 26.0], [1.731748618E12, 25.0], [1.731748659E12, 19.0], [1.731748536E12, 15.0], [1.731748749E12, 24.0], [1.731748577E12, 26.0], [1.731748708E12, 28.0], [1.731748626E12, 25.0], [1.731748667E12, 18.0], [1.731748544E12, 13.0], [1.731748757E12, 24.0], [1.731748585E12, 22.0], [1.731748716E12, 28.0], [1.731748634E12, 27.0], [1.731748675E12, 15.0], [1.731748552E12, 15.0], [1.731748765E12, 24.0], [1.731748593E12, 22.0], [1.731748724E12, 26.0], [1.731748642E12, 28.0], [1.731748683E12, 15.0], [1.73174856E12, 15.0], [1.731748773E12, 24.0], [1.731748601E12, 22.0], [1.731748732E12, 26.0], [1.73174865E12, 24.0], [1.731748691E12, 15.0], [1.731748652E12, 24.0], [1.73174857E12, 25.0], [1.731748611E12, 17.0], [1.731748701E12, 20.0], [1.731748742E12, 18.0], [1.73174866E12, 24.0], [1.731748578E12, 22.0], [1.731748619E12, 17.0], [1.731748709E12, 20.0], [1.73174875E12, 17.0], [1.731748537E12, 24.0], [1.731748668E12, 23.0], [1.731748586E12, 24.0], [1.731748627E12, 16.0], [1.731748717E12, 20.0], [1.731748758E12, 19.0], [1.731748545E12, 27.0], [1.731748676E12, 26.0], [1.731748594E12, 24.0], [1.731748635E12, 15.0], [1.731748725E12, 22.0], [1.731748766E12, 19.0], [1.731748553E12, 26.0], [1.731748684E12, 26.0], [1.731748602E12, 24.0], [1.731748643E12, 15.0], [1.731748733E12, 22.0], [1.731748774E12, 17.0], [1.731748561E12, 26.0], [1.731748692E12, 26.0], [1.731748653E12, 20.0], [1.731748694E12, 20.0], [1.731748612E12, 22.0], [1.731748743E12, 21.0], [1.731748571E12, 18.0], [1.731748661E12, 20.0], [1.731748702E12, 20.0], [1.73174862E12, 22.0], [1.731748538E12, 24.0], [1.731748751E12, 21.0], [1.731748579E12, 18.0], [1.731748669E12, 22.0], [1.73174871E12, 20.0], [1.731748628E12, 23.0], [1.731748546E12, 21.0], [1.731748759E12, 20.0], [1.731748587E12, 19.0], [1.731748677E12, 22.0], [1.731748718E12, 20.0], [1.731748636E12, 24.0], [1.731748554E12, 22.0], [1.731748767E12, 20.0], [1.731748595E12, 19.0], [1.731748685E12, 22.0], [1.731748726E12, 20.0], [1.731748644E12, 24.0], [1.731748562E12, 22.0], [1.731748775E12, 7.0], [1.731748603E12, 19.0], [1.731748693E12, 20.0], [1.731748734E12, 18.0], [1.731748695E12, 25.0], [1.731748613E12, 20.0], [1.731748654E12, 20.0], [1.731748744E12, 19.0], [1.731748572E12, 20.0], [1.731748703E12, 25.0], [1.731748621E12, 20.0], [1.731748662E12, 20.0], [1.731748752E12, 19.0], [1.73174858E12, 20.0], [1.731748711E12, 25.0], [1.731748539E12, 20.0], [1.731748629E12, 20.0], [1.73174867E12, 19.0], [1.73174876E12, 20.0], [1.731748588E12, 20.0], [1.731748719E12, 25.0], [1.731748547E12, 20.0], [1.731748637E12, 20.0], [1.731748678E12, 18.0], [1.731748768E12, 20.0], [1.731748596E12, 20.0], [1.731748727E12, 21.0], [1.731748555E12, 20.0], [1.731748645E12, 20.0], [1.731748686E12, 18.0], [1.731748604E12, 20.0], [1.731748735E12, 23.0], [1.731748563E12, 20.0], [1.731748696E12, 12.0], [1.731748737E12, 23.0], [1.731748655E12, 23.0], [1.731748573E12, 20.0], [1.731748614E12, 23.0], [1.731748704E12, 12.0], [1.731748745E12, 23.0], [1.731748663E12, 23.0], [1.731748581E12, 19.0], [1.731748622E12, 23.0], [1.731748712E12, 12.0], [1.73174854E12, 25.0], [1.731748753E12, 23.0], [1.731748671E12, 24.0], [1.731748589E12, 20.0], [1.73174863E12, 21.0], [1.73174872E12, 12.0], [1.731748548E12, 23.0], [1.731748761E12, 23.0], [1.731748679E12, 25.0], [1.731748597E12, 20.0], [1.731748638E12, 20.0], [1.731748728E12, 16.0], [1.731748556E12, 21.0], [1.731748769E12, 23.0], [1.731748687E12, 25.0], [1.731748605E12, 20.0], [1.731748646E12, 20.0], [1.731748736E12, 16.0], [1.731748564E12, 21.0]], "isOverall": false, "label": "Products-failure", "isController": false}, {"data": [[1.731748738E12, 164.0], [1.731748566E12, 166.0], [1.731748656E12, 169.0], [1.731748697E12, 167.0], [1.731748615E12, 165.0], [1.731748746E12, 165.0], [1.731748574E12, 168.0], [1.731748664E12, 170.0], [1.731748705E12, 167.0], [1.731748623E12, 168.0], [1.731748754E12, 166.0], [1.731748541E12, 170.0], [1.731748582E12, 166.0], [1.731748672E12, 172.0], [1.731748713E12, 164.0], [1.731748631E12, 164.0], [1.731748762E12, 165.0], [1.731748549E12, 168.0], [1.73174859E12, 164.0], [1.73174868E12, 171.0], [1.731748721E12, 167.0], [1.731748639E12, 168.0], [1.73174877E12, 165.0], [1.731748557E12, 169.0], [1.731748598E12, 166.0], [1.731748688E12, 169.0], [1.731748729E12, 165.0], [1.731748647E12, 164.0], [1.731748565E12, 168.0], [1.731748606E12, 164.0], [1.731748567E12, 165.0], [1.731748698E12, 166.0], [1.731748739E12, 168.0], [1.731748616E12, 170.0], [1.731748657E12, 169.0], [1.731748575E12, 167.0], [1.731748706E12, 165.0], [1.731748747E12, 171.0], [1.731748624E12, 168.0], [1.731748665E12, 166.0], [1.731748583E12, 166.0], [1.731748714E12, 167.0], [1.731748542E12, 169.0], [1.731748755E12, 167.0], [1.731748632E12, 170.0], [1.731748673E12, 167.0], [1.731748591E12, 166.0], [1.731748722E12, 166.0], [1.73174855E12, 168.0], [1.731748763E12, 168.0], [1.73174864E12, 166.0], [1.731748681E12, 167.0], [1.731748599E12, 168.0], [1.73174873E12, 169.0], [1.731748558E12, 168.0], [1.731748771E12, 169.0], [1.731748648E12, 167.0], [1.731748689E12, 167.0], [1.731748607E12, 164.0], [1.731748568E12, 166.0], [1.731748609E12, 165.0], [1.73174874E12, 168.0], [1.731748658E12, 166.0], [1.731748699E12, 168.0], [1.731748576E12, 171.0], [1.731748617E12, 166.0], [1.731748535E12, 100.0], [1.731748748E12, 167.0], [1.731748666E12, 165.0], [1.731748707E12, 169.0], [1.731748584E12, 169.0], [1.731748625E12, 170.0], [1.731748543E12, 165.0], [1.731748756E12, 166.0], [1.731748674E12, 164.0], [1.731748715E12, 170.0], [1.731748592E12, 170.0], [1.731748633E12, 168.0], [1.731748551E12, 168.0], [1.731748764E12, 168.0], [1.731748682E12, 167.0], [1.731748723E12, 168.0], [1.7317486E12, 169.0], [1.731748641E12, 171.0], [1.731748559E12, 165.0], [1.731748772E12, 166.0], [1.73174869E12, 165.0], [1.731748731E12, 170.0], [1.731748608E12, 170.0], [1.731748649E12, 169.0], [1.73174861E12, 165.0], [1.731748651E12, 168.0], [1.731748741E12, 165.0], [1.731748569E12, 165.0], [1.7317487E12, 165.0], [1.731748618E12, 166.0], [1.731748659E12, 168.0], [1.731748536E12, 176.0], [1.731748749E12, 165.0], [1.731748577E12, 165.0], [1.731748708E12, 165.0], [1.731748626E12, 161.0], [1.731748667E12, 169.0], [1.731748544E12, 170.0], [1.731748757E12, 163.0], [1.731748585E12, 167.0], [1.731748716E12, 165.0], [1.731748634E12, 162.0], [1.731748675E12, 171.0], [1.731748552E12, 168.0], [1.731748765E12, 166.0], [1.731748593E12, 164.0], [1.731748724E12, 165.0], [1.731748642E12, 161.0], [1.731748683E12, 168.0], [1.73174856E12, 167.0], [1.731748773E12, 165.0], [1.731748601E12, 167.0], [1.731748732E12, 165.0], [1.73174865E12, 165.0], [1.731748691E12, 169.0], [1.731748652E12, 166.0], [1.73174857E12, 166.0], [1.731748611E12, 170.0], [1.731748701E12, 167.0], [1.731748742E12, 168.0], [1.73174866E12, 165.0], [1.731748578E12, 165.0], [1.731748619E12, 169.0], [1.731748709E12, 166.0], [1.73174875E12, 168.0], [1.731748537E12, 170.0], [1.731748668E12, 165.0], [1.731748586E12, 166.0], [1.731748627E12, 170.0], [1.731748717E12, 165.0], [1.731748758E12, 169.0], [1.731748545E12, 163.0], [1.731748676E12, 164.0], [1.731748594E12, 165.0], [1.731748635E12, 171.0], [1.731748725E12, 165.0], [1.731748766E12, 169.0], [1.731748553E12, 163.0], [1.731748684E12, 166.0], [1.731748602E12, 163.0], [1.731748643E12, 171.0], [1.731748733E12, 164.0], [1.731748774E12, 169.0], [1.731748561E12, 167.0], [1.731748692E12, 164.0], [1.731748653E12, 165.0], [1.731748694E12, 168.0], [1.731748612E12, 167.0], [1.731748743E12, 168.0], [1.731748571E12, 168.0], [1.731748661E12, 167.0], [1.731748702E12, 168.0], [1.73174862E12, 167.0], [1.731748538E12, 173.0], [1.731748751E12, 168.0], [1.731748579E12, 169.0], [1.731748669E12, 167.0], [1.73174871E12, 167.0], [1.731748628E12, 166.0], [1.731748546E12, 167.0], [1.731748759E12, 166.0], [1.731748587E12, 166.0], [1.731748677E12, 166.0], [1.731748718E12, 169.0], [1.731748636E12, 166.0], [1.731748554E12, 164.0], [1.731748767E12, 166.0], [1.731748595E12, 171.0], [1.731748685E12, 166.0], [1.731748726E12, 167.0], [1.731748644E12, 166.0], [1.731748562E12, 168.0], [1.731748775E12, 45.0], [1.731748603E12, 168.0], [1.731748693E12, 167.0], [1.731748734E12, 169.0], [1.731748695E12, 166.0], [1.731748613E12, 166.0], [1.731748654E12, 168.0], [1.731748744E12, 168.0], [1.731748572E12, 167.0], [1.731748703E12, 166.0], [1.731748621E12, 163.0], [1.731748662E12, 166.0], [1.731748752E12, 167.0], [1.73174858E12, 168.0], [1.731748711E12, 167.0], [1.731748539E12, 170.0], [1.731748629E12, 166.0], [1.73174867E12, 169.0], [1.73174876E12, 167.0], [1.731748588E12, 169.0], [1.731748719E12, 166.0], [1.731748547E12, 169.0], [1.731748637E12, 165.0], [1.731748678E12, 166.0], [1.731748768E12, 167.0], [1.731748596E12, 169.0], [1.731748727E12, 166.0], [1.731748555E12, 167.0], [1.731748645E12, 166.0], [1.731748686E12, 169.0], [1.731748604E12, 168.0], [1.731748735E12, 168.0], [1.731748563E12, 168.0], [1.731748696E12, 170.0], [1.731748737E12, 167.0], [1.731748655E12, 168.0], [1.731748573E12, 167.0], [1.731748614E12, 169.0], [1.731748704E12, 169.0], [1.731748745E12, 166.0], [1.731748663E12, 167.0], [1.731748581E12, 167.0], [1.731748622E12, 168.0], [1.731748712E12, 169.0], [1.73174854E12, 167.0], [1.731748753E12, 167.0], [1.731748671E12, 162.0], [1.731748589E12, 165.0], [1.73174863E12, 169.0], [1.73174872E12, 169.0], [1.731748548E12, 165.0], [1.731748761E12, 166.0], [1.731748679E12, 164.0], [1.731748597E12, 166.0], [1.731748638E12, 167.0], [1.731748728E12, 167.0], [1.731748556E12, 167.0], [1.731748769E12, 167.0], [1.731748687E12, 165.0], [1.731748605E12, 168.0], [1.731748646E12, 168.0], [1.731748736E12, 167.0], [1.731748564E12, 168.0]], "isOverall": false, "label": "Products-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.731748775E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 7.0, "minX": 1.731748535E12, "maxY": 176.0, "series": [{"data": [[1.731748738E12, 164.0], [1.731748566E12, 166.0], [1.731748656E12, 169.0], [1.731748697E12, 167.0], [1.731748615E12, 165.0], [1.731748746E12, 165.0], [1.731748574E12, 168.0], [1.731748664E12, 170.0], [1.731748705E12, 167.0], [1.731748623E12, 168.0], [1.731748754E12, 166.0], [1.731748541E12, 170.0], [1.731748582E12, 166.0], [1.731748672E12, 172.0], [1.731748713E12, 164.0], [1.731748631E12, 164.0], [1.731748762E12, 165.0], [1.731748549E12, 168.0], [1.73174859E12, 164.0], [1.73174868E12, 171.0], [1.731748721E12, 167.0], [1.731748639E12, 168.0], [1.73174877E12, 165.0], [1.731748557E12, 169.0], [1.731748598E12, 166.0], [1.731748688E12, 169.0], [1.731748729E12, 165.0], [1.731748647E12, 164.0], [1.731748565E12, 168.0], [1.731748606E12, 164.0], [1.731748567E12, 165.0], [1.731748698E12, 166.0], [1.731748739E12, 168.0], [1.731748616E12, 170.0], [1.731748657E12, 169.0], [1.731748575E12, 167.0], [1.731748706E12, 165.0], [1.731748747E12, 171.0], [1.731748624E12, 168.0], [1.731748665E12, 166.0], [1.731748583E12, 166.0], [1.731748714E12, 167.0], [1.731748542E12, 169.0], [1.731748755E12, 167.0], [1.731748632E12, 170.0], [1.731748673E12, 167.0], [1.731748591E12, 166.0], [1.731748722E12, 166.0], [1.73174855E12, 168.0], [1.731748763E12, 168.0], [1.73174864E12, 166.0], [1.731748681E12, 167.0], [1.731748599E12, 168.0], [1.73174873E12, 169.0], [1.731748558E12, 168.0], [1.731748771E12, 169.0], [1.731748648E12, 167.0], [1.731748689E12, 167.0], [1.731748607E12, 164.0], [1.731748568E12, 166.0], [1.731748609E12, 165.0], [1.73174874E12, 168.0], [1.731748658E12, 166.0], [1.731748699E12, 168.0], [1.731748576E12, 171.0], [1.731748617E12, 166.0], [1.731748535E12, 100.0], [1.731748748E12, 167.0], [1.731748666E12, 165.0], [1.731748707E12, 169.0], [1.731748584E12, 169.0], [1.731748625E12, 170.0], [1.731748543E12, 165.0], [1.731748756E12, 166.0], [1.731748674E12, 164.0], [1.731748715E12, 170.0], [1.731748592E12, 170.0], [1.731748633E12, 168.0], [1.731748551E12, 168.0], [1.731748764E12, 168.0], [1.731748682E12, 167.0], [1.731748723E12, 168.0], [1.7317486E12, 169.0], [1.731748641E12, 171.0], [1.731748559E12, 165.0], [1.731748772E12, 166.0], [1.73174869E12, 165.0], [1.731748731E12, 170.0], [1.731748608E12, 170.0], [1.731748649E12, 169.0], [1.73174861E12, 165.0], [1.731748651E12, 168.0], [1.731748741E12, 165.0], [1.731748569E12, 165.0], [1.7317487E12, 165.0], [1.731748618E12, 166.0], [1.731748659E12, 168.0], [1.731748536E12, 176.0], [1.731748749E12, 165.0], [1.731748577E12, 165.0], [1.731748708E12, 165.0], [1.731748626E12, 161.0], [1.731748667E12, 169.0], [1.731748544E12, 170.0], [1.731748757E12, 163.0], [1.731748585E12, 167.0], [1.731748716E12, 165.0], [1.731748634E12, 162.0], [1.731748675E12, 171.0], [1.731748552E12, 168.0], [1.731748765E12, 166.0], [1.731748593E12, 164.0], [1.731748724E12, 165.0], [1.731748642E12, 161.0], [1.731748683E12, 168.0], [1.73174856E12, 167.0], [1.731748773E12, 165.0], [1.731748601E12, 167.0], [1.731748732E12, 165.0], [1.73174865E12, 165.0], [1.731748691E12, 169.0], [1.731748652E12, 166.0], [1.73174857E12, 166.0], [1.731748611E12, 170.0], [1.731748701E12, 167.0], [1.731748742E12, 168.0], [1.73174866E12, 165.0], [1.731748578E12, 165.0], [1.731748619E12, 169.0], [1.731748709E12, 166.0], [1.73174875E12, 168.0], [1.731748537E12, 170.0], [1.731748668E12, 165.0], [1.731748586E12, 166.0], [1.731748627E12, 170.0], [1.731748717E12, 165.0], [1.731748758E12, 169.0], [1.731748545E12, 163.0], [1.731748676E12, 164.0], [1.731748594E12, 165.0], [1.731748635E12, 171.0], [1.731748725E12, 165.0], [1.731748766E12, 169.0], [1.731748553E12, 163.0], [1.731748684E12, 166.0], [1.731748602E12, 163.0], [1.731748643E12, 171.0], [1.731748733E12, 164.0], [1.731748774E12, 169.0], [1.731748561E12, 167.0], [1.731748692E12, 164.0], [1.731748653E12, 165.0], [1.731748694E12, 168.0], [1.731748612E12, 167.0], [1.731748743E12, 168.0], [1.731748571E12, 168.0], [1.731748661E12, 167.0], [1.731748702E12, 168.0], [1.73174862E12, 167.0], [1.731748538E12, 173.0], [1.731748751E12, 168.0], [1.731748579E12, 169.0], [1.731748669E12, 167.0], [1.73174871E12, 167.0], [1.731748628E12, 166.0], [1.731748546E12, 167.0], [1.731748759E12, 166.0], [1.731748587E12, 166.0], [1.731748677E12, 166.0], [1.731748718E12, 169.0], [1.731748636E12, 166.0], [1.731748554E12, 164.0], [1.731748767E12, 166.0], [1.731748595E12, 171.0], [1.731748685E12, 166.0], [1.731748726E12, 167.0], [1.731748644E12, 166.0], [1.731748562E12, 168.0], [1.731748775E12, 45.0], [1.731748603E12, 168.0], [1.731748693E12, 167.0], [1.731748734E12, 169.0], [1.731748695E12, 166.0], [1.731748613E12, 166.0], [1.731748654E12, 168.0], [1.731748744E12, 168.0], [1.731748572E12, 167.0], [1.731748703E12, 166.0], [1.731748621E12, 163.0], [1.731748662E12, 166.0], [1.731748752E12, 167.0], [1.73174858E12, 168.0], [1.731748711E12, 167.0], [1.731748539E12, 170.0], [1.731748629E12, 166.0], [1.73174867E12, 169.0], [1.73174876E12, 167.0], [1.731748588E12, 169.0], [1.731748719E12, 166.0], [1.731748547E12, 169.0], [1.731748637E12, 165.0], [1.731748678E12, 166.0], [1.731748768E12, 167.0], [1.731748596E12, 169.0], [1.731748727E12, 166.0], [1.731748555E12, 167.0], [1.731748645E12, 166.0], [1.731748686E12, 169.0], [1.731748604E12, 168.0], [1.731748735E12, 168.0], [1.731748563E12, 168.0], [1.731748696E12, 170.0], [1.731748737E12, 167.0], [1.731748655E12, 168.0], [1.731748573E12, 167.0], [1.731748614E12, 169.0], [1.731748704E12, 169.0], [1.731748745E12, 166.0], [1.731748663E12, 167.0], [1.731748581E12, 167.0], [1.731748622E12, 168.0], [1.731748712E12, 169.0], [1.73174854E12, 167.0], [1.731748753E12, 167.0], [1.731748671E12, 162.0], [1.731748589E12, 165.0], [1.73174863E12, 169.0], [1.73174872E12, 169.0], [1.731748548E12, 165.0], [1.731748761E12, 166.0], [1.731748679E12, 164.0], [1.731748597E12, 166.0], [1.731748638E12, 167.0], [1.731748728E12, 167.0], [1.731748556E12, 167.0], [1.731748769E12, 167.0], [1.731748687E12, 165.0], [1.731748605E12, 168.0], [1.731748646E12, 168.0], [1.731748736E12, 167.0], [1.731748564E12, 168.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.731748738E12, 22.0], [1.731748566E12, 23.0], [1.731748656E12, 16.0], [1.731748697E12, 23.0], [1.731748615E12, 22.0], [1.731748746E12, 22.0], [1.731748574E12, 23.0], [1.731748664E12, 13.0], [1.731748705E12, 23.0], [1.731748623E12, 22.0], [1.731748754E12, 22.0], [1.731748541E12, 12.0], [1.731748582E12, 23.0], [1.731748672E12, 12.0], [1.731748713E12, 23.0], [1.731748631E12, 24.0], [1.731748762E12, 22.0], [1.731748549E12, 14.0], [1.73174859E12, 23.0], [1.73174868E12, 12.0], [1.731748721E12, 23.0], [1.731748639E12, 25.0], [1.73174877E12, 22.0], [1.731748557E12, 16.0], [1.731748598E12, 23.0], [1.731748688E12, 12.0], [1.731748729E12, 23.0], [1.731748647E12, 23.0], [1.731748565E12, 16.0], [1.731748606E12, 23.0], [1.731748567E12, 22.0], [1.731748698E12, 24.0], [1.731748739E12, 15.0], [1.731748616E12, 15.0], [1.731748657E12, 19.0], [1.731748575E12, 22.0], [1.731748706E12, 24.0], [1.731748747E12, 15.0], [1.731748624E12, 15.0], [1.731748665E12, 22.0], [1.731748583E12, 22.0], [1.731748714E12, 23.0], [1.731748542E12, 23.0], [1.731748755E12, 15.0], [1.731748632E12, 15.0], [1.731748673E12, 23.0], [1.731748591E12, 22.0], [1.731748722E12, 22.0], [1.73174855E12, 23.0], [1.731748763E12, 15.0], [1.73174864E12, 15.0], [1.731748681E12, 23.0], [1.731748599E12, 22.0], [1.73174873E12, 22.0], [1.731748558E12, 23.0], [1.731748771E12, 15.0], [1.731748648E12, 17.0], [1.731748689E12, 23.0], [1.731748607E12, 22.0], [1.731748568E12, 15.0], [1.731748609E12, 22.0], [1.73174874E12, 26.0], [1.731748658E12, 24.0], [1.731748699E12, 15.0], [1.731748576E12, 15.0], [1.731748617E12, 21.0], [1.731748535E12, 15.0], [1.731748748E12, 24.0], [1.731748666E12, 24.0], [1.731748707E12, 13.0], [1.731748584E12, 15.0], [1.731748625E12, 21.0], [1.731748543E12, 24.0], [1.731748756E12, 22.0], [1.731748674E12, 24.0], [1.731748715E12, 14.0], [1.731748592E12, 15.0], [1.731748633E12, 19.0], [1.731748551E12, 22.0], [1.731748764E12, 22.0], [1.731748682E12, 24.0], [1.731748723E12, 15.0], [1.7317486E12, 15.0], [1.731748641E12, 18.0], [1.731748559E12, 22.0], [1.731748772E12, 22.0], [1.73174869E12, 24.0], [1.731748731E12, 15.0], [1.731748608E12, 15.0], [1.731748649E12, 18.0], [1.73174861E12, 24.0], [1.731748651E12, 19.0], [1.731748741E12, 21.0], [1.731748569E12, 22.0], [1.7317487E12, 26.0], [1.731748618E12, 25.0], [1.731748659E12, 19.0], [1.731748536E12, 15.0], [1.731748749E12, 24.0], [1.731748577E12, 26.0], [1.731748708E12, 28.0], [1.731748626E12, 25.0], [1.731748667E12, 18.0], [1.731748544E12, 13.0], [1.731748757E12, 24.0], [1.731748585E12, 22.0], [1.731748716E12, 28.0], [1.731748634E12, 27.0], [1.731748675E12, 15.0], [1.731748552E12, 15.0], [1.731748765E12, 24.0], [1.731748593E12, 22.0], [1.731748724E12, 26.0], [1.731748642E12, 28.0], [1.731748683E12, 15.0], [1.73174856E12, 15.0], [1.731748773E12, 24.0], [1.731748601E12, 22.0], [1.731748732E12, 26.0], [1.73174865E12, 24.0], [1.731748691E12, 15.0], [1.731748652E12, 24.0], [1.73174857E12, 25.0], [1.731748611E12, 17.0], [1.731748701E12, 20.0], [1.731748742E12, 18.0], [1.73174866E12, 24.0], [1.731748578E12, 22.0], [1.731748619E12, 17.0], [1.731748709E12, 20.0], [1.73174875E12, 17.0], [1.731748537E12, 24.0], [1.731748668E12, 23.0], [1.731748586E12, 24.0], [1.731748627E12, 16.0], [1.731748717E12, 20.0], [1.731748758E12, 19.0], [1.731748545E12, 27.0], [1.731748676E12, 26.0], [1.731748594E12, 24.0], [1.731748635E12, 15.0], [1.731748725E12, 22.0], [1.731748766E12, 19.0], [1.731748553E12, 26.0], [1.731748684E12, 26.0], [1.731748602E12, 24.0], [1.731748643E12, 15.0], [1.731748733E12, 22.0], [1.731748774E12, 17.0], [1.731748561E12, 26.0], [1.731748692E12, 26.0], [1.731748653E12, 20.0], [1.731748694E12, 20.0], [1.731748612E12, 22.0], [1.731748743E12, 21.0], [1.731748571E12, 18.0], [1.731748661E12, 20.0], [1.731748702E12, 20.0], [1.73174862E12, 22.0], [1.731748538E12, 24.0], [1.731748751E12, 21.0], [1.731748579E12, 18.0], [1.731748669E12, 22.0], [1.73174871E12, 20.0], [1.731748628E12, 23.0], [1.731748546E12, 21.0], [1.731748759E12, 20.0], [1.731748587E12, 19.0], [1.731748677E12, 22.0], [1.731748718E12, 20.0], [1.731748636E12, 24.0], [1.731748554E12, 22.0], [1.731748767E12, 20.0], [1.731748595E12, 19.0], [1.731748685E12, 22.0], [1.731748726E12, 20.0], [1.731748644E12, 24.0], [1.731748562E12, 22.0], [1.731748775E12, 7.0], [1.731748603E12, 19.0], [1.731748693E12, 20.0], [1.731748734E12, 18.0], [1.731748695E12, 25.0], [1.731748613E12, 20.0], [1.731748654E12, 20.0], [1.731748744E12, 19.0], [1.731748572E12, 20.0], [1.731748703E12, 25.0], [1.731748621E12, 20.0], [1.731748662E12, 20.0], [1.731748752E12, 19.0], [1.73174858E12, 20.0], [1.731748711E12, 25.0], [1.731748539E12, 20.0], [1.731748629E12, 20.0], [1.73174867E12, 19.0], [1.73174876E12, 20.0], [1.731748588E12, 20.0], [1.731748719E12, 25.0], [1.731748547E12, 20.0], [1.731748637E12, 20.0], [1.731748678E12, 18.0], [1.731748768E12, 20.0], [1.731748596E12, 20.0], [1.731748727E12, 21.0], [1.731748555E12, 20.0], [1.731748645E12, 20.0], [1.731748686E12, 18.0], [1.731748604E12, 20.0], [1.731748735E12, 23.0], [1.731748563E12, 20.0], [1.731748696E12, 12.0], [1.731748737E12, 23.0], [1.731748655E12, 23.0], [1.731748573E12, 20.0], [1.731748614E12, 23.0], [1.731748704E12, 12.0], [1.731748745E12, 23.0], [1.731748663E12, 23.0], [1.731748581E12, 19.0], [1.731748622E12, 23.0], [1.731748712E12, 12.0], [1.73174854E12, 25.0], [1.731748753E12, 23.0], [1.731748671E12, 24.0], [1.731748589E12, 20.0], [1.73174863E12, 21.0], [1.73174872E12, 12.0], [1.731748548E12, 23.0], [1.731748761E12, 23.0], [1.731748679E12, 25.0], [1.731748597E12, 20.0], [1.731748638E12, 20.0], [1.731748728E12, 16.0], [1.731748556E12, 21.0], [1.731748769E12, 23.0], [1.731748687E12, 25.0], [1.731748605E12, 20.0], [1.731748646E12, 20.0], [1.731748736E12, 16.0], [1.731748564E12, 21.0]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.731748775E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

