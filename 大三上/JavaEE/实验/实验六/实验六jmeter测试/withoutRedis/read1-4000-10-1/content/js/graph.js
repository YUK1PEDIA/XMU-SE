/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 42.0, "minX": 0.0, "maxY": 9139.0, "series": [{"data": [[0.0, 42.0], [0.1, 64.0], [0.2, 71.0], [0.3, 77.0], [0.4, 87.0], [0.5, 93.0], [0.6, 102.0], [0.7, 110.0], [0.8, 116.0], [0.9, 143.0], [1.0, 161.0], [1.1, 165.0], [1.2, 173.0], [1.3, 190.0], [1.4, 204.0], [1.5, 221.0], [1.6, 239.0], [1.7, 255.0], [1.8, 266.0], [1.9, 279.0], [2.0, 287.0], [2.1, 308.0], [2.2, 312.0], [2.3, 320.0], [2.4, 326.0], [2.5, 330.0], [2.6, 336.0], [2.7, 345.0], [2.8, 350.0], [2.9, 356.0], [3.0, 365.0], [3.1, 372.0], [3.2, 383.0], [3.3, 389.0], [3.4, 396.0], [3.5, 407.0], [3.6, 429.0], [3.7, 441.0], [3.8, 445.0], [3.9, 456.0], [4.0, 475.0], [4.1, 492.0], [4.2, 508.0], [4.3, 527.0], [4.4, 540.0], [4.5, 552.0], [4.6, 573.0], [4.7, 593.0], [4.8, 609.0], [4.9, 627.0], [5.0, 637.0], [5.1, 664.0], [5.2, 678.0], [5.3, 687.0], [5.4, 698.0], [5.5, 706.0], [5.6, 724.0], [5.7, 737.0], [5.8, 744.0], [5.9, 755.0], [6.0, 764.0], [6.1, 766.0], [6.2, 780.0], [6.3, 788.0], [6.4, 798.0], [6.5, 805.0], [6.6, 811.0], [6.7, 835.0], [6.8, 840.0], [6.9, 845.0], [7.0, 854.0], [7.1, 866.0], [7.2, 882.0], [7.3, 887.0], [7.4, 895.0], [7.5, 902.0], [7.6, 906.0], [7.7, 912.0], [7.8, 930.0], [7.9, 939.0], [8.0, 954.0], [8.1, 969.0], [8.2, 982.0], [8.3, 1000.0], [8.4, 1018.0], [8.5, 1024.0], [8.6, 1045.0], [8.7, 1047.0], [8.8, 1052.0], [8.9, 1063.0], [9.0, 1069.0], [9.1, 1085.0], [9.2, 1091.0], [9.3, 1094.0], [9.4, 1108.0], [9.5, 1130.0], [9.6, 1147.0], [9.7, 1163.0], [9.8, 1186.0], [9.9, 1195.0], [10.0, 1202.0], [10.1, 1220.0], [10.2, 1231.0], [10.3, 1261.0], [10.4, 1265.0], [10.5, 1272.0], [10.6, 1277.0], [10.7, 1290.0], [10.8, 1295.0], [10.9, 1302.0], [11.0, 1319.0], [11.1, 1347.0], [11.2, 1359.0], [11.3, 1361.0], [11.4, 1373.0], [11.5, 1382.0], [11.6, 1397.0], [11.7, 1404.0], [11.8, 1415.0], [11.9, 1431.0], [12.0, 1436.0], [12.1, 1442.0], [12.2, 1455.0], [12.3, 1461.0], [12.4, 1469.0], [12.5, 1472.0], [12.6, 1479.0], [12.7, 1484.0], [12.8, 1497.0], [12.9, 1501.0], [13.0, 1512.0], [13.1, 1522.0], [13.2, 1528.0], [13.3, 1533.0], [13.4, 1543.0], [13.5, 1552.0], [13.6, 1566.0], [13.7, 1575.0], [13.8, 1579.0], [13.9, 1586.0], [14.0, 1595.0], [14.1, 1596.0], [14.2, 1606.0], [14.3, 1616.0], [14.4, 1630.0], [14.5, 1639.0], [14.6, 1642.0], [14.7, 1652.0], [14.8, 1661.0], [14.9, 1666.0], [15.0, 1670.0], [15.1, 1677.0], [15.2, 1686.0], [15.3, 1691.0], [15.4, 1698.0], [15.5, 1706.0], [15.6, 1720.0], [15.7, 1731.0], [15.8, 1740.0], [15.9, 1758.0], [16.0, 1776.0], [16.1, 1794.0], [16.2, 1807.0], [16.3, 1813.0], [16.4, 1817.0], [16.5, 1821.0], [16.6, 1835.0], [16.7, 1853.0], [16.8, 1862.0], [16.9, 1872.0], [17.0, 1881.0], [17.1, 1893.0], [17.2, 1907.0], [17.3, 1916.0], [17.4, 1921.0], [17.5, 1929.0], [17.6, 1937.0], [17.7, 1960.0], [17.8, 1979.0], [17.9, 1985.0], [18.0, 1999.0], [18.1, 2009.0], [18.2, 2020.0], [18.3, 2029.0], [18.4, 2037.0], [18.5, 2046.0], [18.6, 2056.0], [18.7, 2071.0], [18.8, 2080.0], [18.9, 2095.0], [19.0, 2100.0], [19.1, 2107.0], [19.2, 2117.0], [19.3, 2124.0], [19.4, 2130.0], [19.5, 2151.0], [19.6, 2161.0], [19.7, 2170.0], [19.8, 2175.0], [19.9, 2184.0], [20.0, 2202.0], [20.1, 2206.0], [20.2, 2208.0], [20.3, 2217.0], [20.4, 2225.0], [20.5, 2228.0], [20.6, 2234.0], [20.7, 2240.0], [20.8, 2246.0], [20.9, 2256.0], [21.0, 2270.0], [21.1, 2278.0], [21.2, 2282.0], [21.3, 2290.0], [21.4, 2294.0], [21.5, 2298.0], [21.6, 2305.0], [21.7, 2308.0], [21.8, 2317.0], [21.9, 2319.0], [22.0, 2328.0], [22.1, 2335.0], [22.2, 2338.0], [22.3, 2341.0], [22.4, 2354.0], [22.5, 2374.0], [22.6, 2381.0], [22.7, 2387.0], [22.8, 2388.0], [22.9, 2400.0], [23.0, 2408.0], [23.1, 2412.0], [23.2, 2419.0], [23.3, 2423.0], [23.4, 2427.0], [23.5, 2438.0], [23.6, 2441.0], [23.7, 2449.0], [23.8, 2453.0], [23.9, 2459.0], [24.0, 2466.0], [24.1, 2479.0], [24.2, 2487.0], [24.3, 2492.0], [24.4, 2507.0], [24.5, 2512.0], [24.6, 2516.0], [24.7, 2524.0], [24.8, 2528.0], [24.9, 2537.0], [25.0, 2543.0], [25.1, 2547.0], [25.2, 2553.0], [25.3, 2562.0], [25.4, 2566.0], [25.5, 2581.0], [25.6, 2594.0], [25.7, 2598.0], [25.8, 2607.0], [25.9, 2621.0], [26.0, 2628.0], [26.1, 2635.0], [26.2, 2639.0], [26.3, 2647.0], [26.4, 2658.0], [26.5, 2664.0], [26.6, 2667.0], [26.7, 2675.0], [26.8, 2680.0], [26.9, 2689.0], [27.0, 2694.0], [27.1, 2698.0], [27.2, 2703.0], [27.3, 2705.0], [27.4, 2715.0], [27.5, 2718.0], [27.6, 2726.0], [27.7, 2746.0], [27.8, 2763.0], [27.9, 2780.0], [28.0, 2788.0], [28.1, 2797.0], [28.2, 2817.0], [28.3, 2825.0], [28.4, 2830.0], [28.5, 2841.0], [28.6, 2844.0], [28.7, 2853.0], [28.8, 2858.0], [28.9, 2863.0], [29.0, 2868.0], [29.1, 2876.0], [29.2, 2881.0], [29.3, 2897.0], [29.4, 2904.0], [29.5, 2908.0], [29.6, 2920.0], [29.7, 2926.0], [29.8, 2936.0], [29.9, 2960.0], [30.0, 2972.0], [30.1, 2984.0], [30.2, 2993.0], [30.3, 3009.0], [30.4, 3019.0], [30.5, 3045.0], [30.6, 3050.0], [30.7, 3055.0], [30.8, 3076.0], [30.9, 3093.0], [31.0, 3103.0], [31.1, 3108.0], [31.2, 3121.0], [31.3, 3133.0], [31.4, 3141.0], [31.5, 3149.0], [31.6, 3157.0], [31.7, 3167.0], [31.8, 3174.0], [31.9, 3185.0], [32.0, 3199.0], [32.1, 3211.0], [32.2, 3222.0], [32.3, 3228.0], [32.4, 3231.0], [32.5, 3238.0], [32.6, 3249.0], [32.7, 3258.0], [32.8, 3271.0], [32.9, 3281.0], [33.0, 3284.0], [33.1, 3293.0], [33.2, 3298.0], [33.3, 3305.0], [33.4, 3311.0], [33.5, 3321.0], [33.6, 3325.0], [33.7, 3329.0], [33.8, 3340.0], [33.9, 3351.0], [34.0, 3358.0], [34.1, 3366.0], [34.2, 3373.0], [34.3, 3381.0], [34.4, 3399.0], [34.5, 3405.0], [34.6, 3412.0], [34.7, 3422.0], [34.8, 3437.0], [34.9, 3443.0], [35.0, 3448.0], [35.1, 3452.0], [35.2, 3458.0], [35.3, 3475.0], [35.4, 3481.0], [35.5, 3483.0], [35.6, 3490.0], [35.7, 3495.0], [35.8, 3502.0], [35.9, 3508.0], [36.0, 3513.0], [36.1, 3517.0], [36.2, 3524.0], [36.3, 3529.0], [36.4, 3535.0], [36.5, 3539.0], [36.6, 3551.0], [36.7, 3557.0], [36.8, 3570.0], [36.9, 3574.0], [37.0, 3581.0], [37.1, 3592.0], [37.2, 3603.0], [37.3, 3617.0], [37.4, 3625.0], [37.5, 3634.0], [37.6, 3645.0], [37.7, 3664.0], [37.8, 3676.0], [37.9, 3700.0], [38.0, 3709.0], [38.1, 3726.0], [38.2, 3743.0], [38.3, 3747.0], [38.4, 3763.0], [38.5, 3777.0], [38.6, 3807.0], [38.7, 3835.0], [38.8, 3843.0], [38.9, 3864.0], [39.0, 3875.0], [39.1, 3879.0], [39.2, 3895.0], [39.3, 3899.0], [39.4, 3905.0], [39.5, 3914.0], [39.6, 3927.0], [39.7, 3939.0], [39.8, 3953.0], [39.9, 3959.0], [40.0, 3968.0], [40.1, 3975.0], [40.2, 3985.0], [40.3, 4003.0], [40.4, 4007.0], [40.5, 4026.0], [40.6, 4034.0], [40.7, 4043.0], [40.8, 4064.0], [40.9, 4070.0], [41.0, 4075.0], [41.1, 4087.0], [41.2, 4104.0], [41.3, 4118.0], [41.4, 4123.0], [41.5, 4129.0], [41.6, 4138.0], [41.7, 4147.0], [41.8, 4156.0], [41.9, 4163.0], [42.0, 4169.0], [42.1, 4177.0], [42.2, 4189.0], [42.3, 4192.0], [42.4, 4198.0], [42.5, 4205.0], [42.6, 4208.0], [42.7, 4214.0], [42.8, 4221.0], [42.9, 4228.0], [43.0, 4235.0], [43.1, 4240.0], [43.2, 4246.0], [43.3, 4254.0], [43.4, 4262.0], [43.5, 4264.0], [43.6, 4267.0], [43.7, 4269.0], [43.8, 4275.0], [43.9, 4279.0], [44.0, 4290.0], [44.1, 4298.0], [44.2, 4302.0], [44.3, 4306.0], [44.4, 4310.0], [44.5, 4312.0], [44.6, 4320.0], [44.7, 4331.0], [44.8, 4333.0], [44.9, 4344.0], [45.0, 4350.0], [45.1, 4358.0], [45.2, 4363.0], [45.3, 4367.0], [45.4, 4371.0], [45.5, 4378.0], [45.6, 4381.0], [45.7, 4398.0], [45.8, 4419.0], [45.9, 4438.0], [46.0, 4458.0], [46.1, 4477.0], [46.2, 4486.0], [46.3, 4495.0], [46.4, 4498.0], [46.5, 4505.0], [46.6, 4514.0], [46.7, 4519.0], [46.8, 4530.0], [46.9, 4539.0], [47.0, 4559.0], [47.1, 4573.0], [47.2, 4576.0], [47.3, 4580.0], [47.4, 4591.0], [47.5, 4602.0], [47.6, 4606.0], [47.7, 4614.0], [47.8, 4620.0], [47.9, 4629.0], [48.0, 4647.0], [48.1, 4666.0], [48.2, 4673.0], [48.3, 4680.0], [48.4, 4687.0], [48.5, 4693.0], [48.6, 4699.0], [48.7, 4712.0], [48.8, 4722.0], [48.9, 4741.0], [49.0, 4750.0], [49.1, 4769.0], [49.2, 4778.0], [49.3, 4799.0], [49.4, 4801.0], [49.5, 4807.0], [49.6, 4819.0], [49.7, 4823.0], [49.8, 4826.0], [49.9, 4835.0], [50.0, 4839.0], [50.1, 4847.0], [50.2, 4852.0], [50.3, 4854.0], [50.4, 4859.0], [50.5, 4866.0], [50.6, 4871.0], [50.7, 4873.0], [50.8, 4883.0], [50.9, 4889.0], [51.0, 4898.0], [51.1, 4904.0], [51.2, 4910.0], [51.3, 4915.0], [51.4, 4921.0], [51.5, 4924.0], [51.6, 4929.0], [51.7, 4933.0], [51.8, 4939.0], [51.9, 4944.0], [52.0, 4951.0], [52.1, 4958.0], [52.2, 4966.0], [52.3, 4974.0], [52.4, 4979.0], [52.5, 4985.0], [52.6, 4988.0], [52.7, 4993.0], [52.8, 4996.0], [52.9, 4999.0], [53.0, 5003.0], [53.1, 5012.0], [53.2, 5016.0], [53.3, 5027.0], [53.4, 5033.0], [53.5, 5045.0], [53.6, 5057.0], [53.7, 5061.0], [53.8, 5072.0], [53.9, 5083.0], [54.0, 5086.0], [54.1, 5096.0], [54.2, 5101.0], [54.3, 5108.0], [54.4, 5117.0], [54.5, 5126.0], [54.6, 5140.0], [54.7, 5146.0], [54.8, 5165.0], [54.9, 5181.0], [55.0, 5206.0], [55.1, 5226.0], [55.2, 5237.0], [55.3, 5245.0], [55.4, 5247.0], [55.5, 5251.0], [55.6, 5257.0], [55.7, 5262.0], [55.8, 5270.0], [55.9, 5289.0], [56.0, 5303.0], [56.1, 5309.0], [56.2, 5315.0], [56.3, 5328.0], [56.4, 5337.0], [56.5, 5348.0], [56.6, 5362.0], [56.7, 5381.0], [56.8, 5385.0], [56.9, 5408.0], [57.0, 5413.0], [57.1, 5437.0], [57.2, 5439.0], [57.3, 5453.0], [57.4, 5458.0], [57.5, 5463.0], [57.6, 5476.0], [57.7, 5480.0], [57.8, 5492.0], [57.9, 5499.0], [58.0, 5505.0], [58.1, 5512.0], [58.2, 5526.0], [58.3, 5545.0], [58.4, 5557.0], [58.5, 5566.0], [58.6, 5571.0], [58.7, 5576.0], [58.8, 5581.0], [58.9, 5589.0], [59.0, 5594.0], [59.1, 5599.0], [59.2, 5610.0], [59.3, 5617.0], [59.4, 5620.0], [59.5, 5632.0], [59.6, 5642.0], [59.7, 5646.0], [59.8, 5653.0], [59.9, 5659.0], [60.0, 5661.0], [60.1, 5665.0], [60.2, 5671.0], [60.3, 5678.0], [60.4, 5680.0], [60.5, 5683.0], [60.6, 5693.0], [60.7, 5699.0], [60.8, 5701.0], [60.9, 5709.0], [61.0, 5719.0], [61.1, 5734.0], [61.2, 5747.0], [61.3, 5751.0], [61.4, 5764.0], [61.5, 5772.0], [61.6, 5784.0], [61.7, 5796.0], [61.8, 5805.0], [61.9, 5812.0], [62.0, 5813.0], [62.1, 5817.0], [62.2, 5824.0], [62.3, 5829.0], [62.4, 5836.0], [62.5, 5841.0], [62.6, 5844.0], [62.7, 5854.0], [62.8, 5857.0], [62.9, 5868.0], [63.0, 5880.0], [63.1, 5883.0], [63.2, 5886.0], [63.3, 5895.0], [63.4, 5899.0], [63.5, 5905.0], [63.6, 5910.0], [63.7, 5915.0], [63.8, 5924.0], [63.9, 5930.0], [64.0, 5940.0], [64.1, 5950.0], [64.2, 5957.0], [64.3, 5967.0], [64.4, 5978.0], [64.5, 5982.0], [64.6, 5987.0], [64.7, 5994.0], [64.8, 6008.0], [64.9, 6017.0], [65.0, 6020.0], [65.1, 6028.0], [65.2, 6033.0], [65.3, 6040.0], [65.4, 6044.0], [65.5, 6051.0], [65.6, 6059.0], [65.7, 6067.0], [65.8, 6074.0], [65.9, 6079.0], [66.0, 6084.0], [66.1, 6102.0], [66.2, 6113.0], [66.3, 6125.0], [66.4, 6142.0], [66.5, 6146.0], [66.6, 6151.0], [66.7, 6175.0], [66.8, 6188.0], [66.9, 6199.0], [67.0, 6208.0], [67.1, 6217.0], [67.2, 6225.0], [67.3, 6232.0], [67.4, 6240.0], [67.5, 6246.0], [67.6, 6265.0], [67.7, 6278.0], [67.8, 6287.0], [67.9, 6293.0], [68.0, 6305.0], [68.1, 6315.0], [68.2, 6329.0], [68.3, 6339.0], [68.4, 6346.0], [68.5, 6370.0], [68.6, 6379.0], [68.7, 6393.0], [68.8, 6397.0], [68.9, 6408.0], [69.0, 6419.0], [69.1, 6421.0], [69.2, 6426.0], [69.3, 6436.0], [69.4, 6445.0], [69.5, 6454.0], [69.6, 6458.0], [69.7, 6472.0], [69.8, 6476.0], [69.9, 6481.0], [70.0, 6494.0], [70.1, 6511.0], [70.2, 6522.0], [70.3, 6532.0], [70.4, 6540.0], [70.5, 6550.0], [70.6, 6561.0], [70.7, 6567.0], [70.8, 6574.0], [70.9, 6577.0], [71.0, 6579.0], [71.1, 6582.0], [71.2, 6588.0], [71.3, 6593.0], [71.4, 6601.0], [71.5, 6610.0], [71.6, 6614.0], [71.7, 6627.0], [71.8, 6632.0], [71.9, 6638.0], [72.0, 6646.0], [72.1, 6653.0], [72.2, 6661.0], [72.3, 6669.0], [72.4, 6679.0], [72.5, 6694.0], [72.6, 6699.0], [72.7, 6712.0], [72.8, 6717.0], [72.9, 6721.0], [73.0, 6723.0], [73.1, 6734.0], [73.2, 6739.0], [73.3, 6752.0], [73.4, 6770.0], [73.5, 6780.0], [73.6, 6793.0], [73.7, 6802.0], [73.8, 6810.0], [73.9, 6827.0], [74.0, 6836.0], [74.1, 6841.0], [74.2, 6863.0], [74.3, 6873.0], [74.4, 6879.0], [74.5, 6882.0], [74.6, 6888.0], [74.7, 6892.0], [74.8, 6897.0], [74.9, 6899.0], [75.0, 6908.0], [75.1, 6913.0], [75.2, 6919.0], [75.3, 6926.0], [75.4, 6931.0], [75.5, 6939.0], [75.6, 6946.0], [75.7, 6948.0], [75.8, 6950.0], [75.9, 6956.0], [76.0, 6959.0], [76.1, 6964.0], [76.2, 6970.0], [76.3, 6973.0], [76.4, 6976.0], [76.5, 6988.0], [76.6, 6993.0], [76.7, 7006.0], [76.8, 7012.0], [76.9, 7018.0], [77.0, 7028.0], [77.1, 7035.0], [77.2, 7043.0], [77.3, 7053.0], [77.4, 7056.0], [77.5, 7067.0], [77.6, 7070.0], [77.7, 7077.0], [77.8, 7088.0], [77.9, 7094.0], [78.0, 7103.0], [78.1, 7109.0], [78.2, 7121.0], [78.3, 7127.0], [78.4, 7143.0], [78.5, 7148.0], [78.6, 7156.0], [78.7, 7174.0], [78.8, 7180.0], [78.9, 7189.0], [79.0, 7194.0], [79.1, 7198.0], [79.2, 7203.0], [79.3, 7209.0], [79.4, 7216.0], [79.5, 7223.0], [79.6, 7232.0], [79.7, 7239.0], [79.8, 7252.0], [79.9, 7257.0], [80.0, 7266.0], [80.1, 7271.0], [80.2, 7278.0], [80.3, 7282.0], [80.4, 7294.0], [80.5, 7296.0], [80.6, 7307.0], [80.7, 7314.0], [80.8, 7316.0], [80.9, 7321.0], [81.0, 7325.0], [81.1, 7333.0], [81.2, 7348.0], [81.3, 7359.0], [81.4, 7364.0], [81.5, 7368.0], [81.6, 7372.0], [81.7, 7382.0], [81.8, 7387.0], [81.9, 7401.0], [82.0, 7403.0], [82.1, 7411.0], [82.2, 7415.0], [82.3, 7430.0], [82.4, 7437.0], [82.5, 7443.0], [82.6, 7453.0], [82.7, 7466.0], [82.8, 7483.0], [82.9, 7502.0], [83.0, 7538.0], [83.1, 7542.0], [83.2, 7550.0], [83.3, 7559.0], [83.4, 7565.0], [83.5, 7571.0], [83.6, 7578.0], [83.7, 7587.0], [83.8, 7592.0], [83.9, 7599.0], [84.0, 7610.0], [84.1, 7621.0], [84.2, 7625.0], [84.3, 7636.0], [84.4, 7644.0], [84.5, 7655.0], [84.6, 7673.0], [84.7, 7690.0], [84.8, 7698.0], [84.9, 7704.0], [85.0, 7710.0], [85.1, 7715.0], [85.2, 7723.0], [85.3, 7732.0], [85.4, 7741.0], [85.5, 7748.0], [85.6, 7761.0], [85.7, 7771.0], [85.8, 7775.0], [85.9, 7784.0], [86.0, 7796.0], [86.1, 7805.0], [86.2, 7812.0], [86.3, 7816.0], [86.4, 7832.0], [86.5, 7838.0], [86.6, 7844.0], [86.7, 7855.0], [86.8, 7866.0], [86.9, 7875.0], [87.0, 7878.0], [87.1, 7901.0], [87.2, 7905.0], [87.3, 7910.0], [87.4, 7921.0], [87.5, 7933.0], [87.6, 7941.0], [87.7, 7946.0], [87.8, 7948.0], [87.9, 7954.0], [88.0, 7956.0], [88.1, 7964.0], [88.2, 7970.0], [88.3, 7978.0], [88.4, 7997.0], [88.5, 8004.0], [88.6, 8011.0], [88.7, 8019.0], [88.8, 8027.0], [88.9, 8031.0], [89.0, 8040.0], [89.1, 8051.0], [89.2, 8058.0], [89.3, 8065.0], [89.4, 8068.0], [89.5, 8083.0], [89.6, 8085.0], [89.7, 8100.0], [89.8, 8106.0], [89.9, 8119.0], [90.0, 8136.0], [90.1, 8142.0], [90.2, 8152.0], [90.3, 8162.0], [90.4, 8170.0], [90.5, 8176.0], [90.6, 8184.0], [90.7, 8189.0], [90.8, 8197.0], [90.9, 8204.0], [91.0, 8213.0], [91.1, 8226.0], [91.2, 8237.0], [91.3, 8242.0], [91.4, 8255.0], [91.5, 8263.0], [91.6, 8269.0], [91.7, 8279.0], [91.8, 8288.0], [91.9, 8294.0], [92.0, 8299.0], [92.1, 8314.0], [92.2, 8328.0], [92.3, 8344.0], [92.4, 8356.0], [92.5, 8366.0], [92.6, 8375.0], [92.7, 8386.0], [92.8, 8390.0], [92.9, 8399.0], [93.0, 8406.0], [93.1, 8411.0], [93.2, 8420.0], [93.3, 8425.0], [93.4, 8434.0], [93.5, 8440.0], [93.6, 8443.0], [93.7, 8447.0], [93.8, 8451.0], [93.9, 8456.0], [94.0, 8458.0], [94.1, 8468.0], [94.2, 8475.0], [94.3, 8480.0], [94.4, 8484.0], [94.5, 8493.0], [94.6, 8505.0], [94.7, 8512.0], [94.8, 8521.0], [94.9, 8530.0], [95.0, 8539.0], [95.1, 8542.0], [95.2, 8552.0], [95.3, 8556.0], [95.4, 8567.0], [95.5, 8577.0], [95.6, 8585.0], [95.7, 8589.0], [95.8, 8594.0], [95.9, 8597.0], [96.0, 8601.0], [96.1, 8611.0], [96.2, 8617.0], [96.3, 8622.0], [96.4, 8626.0], [96.5, 8628.0], [96.6, 8634.0], [96.7, 8640.0], [96.8, 8650.0], [96.9, 8658.0], [97.0, 8664.0], [97.1, 8671.0], [97.2, 8675.0], [97.3, 8684.0], [97.4, 8693.0], [97.5, 8699.0], [97.6, 8706.0], [97.7, 8718.0], [97.8, 8722.0], [97.9, 8730.0], [98.0, 8733.0], [98.1, 8750.0], [98.2, 8759.0], [98.3, 8766.0], [98.4, 8777.0], [98.5, 8784.0], [98.6, 8790.0], [98.7, 8810.0], [98.8, 8813.0], [98.9, 8826.0], [99.0, 8838.0], [99.1, 8846.0], [99.2, 8852.0], [99.3, 8862.0], [99.4, 8867.0], [99.5, 8873.0], [99.6, 8879.0], [99.7, 8881.0], [99.8, 8888.0], [99.9, 9011.0], [100.0, 9139.0]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 76.0, "series": [{"data": [[0.0, 23.0], [600.0, 26.0], [700.0, 38.0], [800.0, 40.0], [900.0, 35.0], [1000.0, 42.0], [1100.0, 25.0], [1200.0, 35.0], [1300.0, 31.0], [1400.0, 50.0], [1500.0, 50.0], [1600.0, 52.0], [1700.0, 28.0], [1800.0, 41.0], [1900.0, 35.0], [2000.0, 39.0], [2100.0, 41.0], [2300.0, 54.0], [2200.0, 62.0], [2400.0, 60.0], [2500.0, 53.0], [2600.0, 57.0], [2700.0, 39.0], [2800.0, 48.0], [2900.0, 36.0], [3000.0, 28.0], [3100.0, 44.0], [3200.0, 48.0], [3300.0, 48.0], [3400.0, 54.0], [3500.0, 56.0], [3600.0, 29.0], [3700.0, 28.0], [3800.0, 29.0], [3900.0, 39.0], [4000.0, 35.0], [4200.0, 68.0], [4300.0, 64.0], [4100.0, 50.0], [4600.0, 46.0], [4500.0, 41.0], [4400.0, 29.0], [4700.0, 30.0], [4800.0, 67.0], [5000.0, 48.0], [4900.0, 76.0], [5100.0, 34.0], [5200.0, 38.0], [5300.0, 38.0], [5400.0, 41.0], [5500.0, 48.0], [5600.0, 65.0], [5700.0, 39.0], [5800.0, 68.0], [6000.0, 51.0], [5900.0, 55.0], [6100.0, 34.0], [6200.0, 42.0], [6300.0, 35.0], [6500.0, 53.0], [6400.0, 49.0], [6600.0, 49.0], [6900.0, 71.0], [6700.0, 43.0], [6800.0, 49.0], [7000.0, 49.0], [7100.0, 48.0], [7400.0, 40.0], [7300.0, 53.0], [7200.0, 57.0], [7500.0, 41.0], [7600.0, 37.0], [7800.0, 42.0], [7700.0, 48.0], [7900.0, 55.0], [8100.0, 46.0], [8000.0, 49.0], [8400.0, 65.0], [8200.0, 47.0], [8500.0, 58.0], [8600.0, 61.0], [8300.0, 36.0], [8700.0, 45.0], [9100.0, 1.0], [8800.0, 47.0], [8900.0, 2.0], [9000.0, 5.0], [100.0, 32.0], [200.0, 27.0], [300.0, 56.0], [400.0, 28.0], [500.0, 26.0]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 9100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 150.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 3104.0, "series": [{"data": [[0.0, 150.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 309.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 3104.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 437.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 61.01652892561987, "minX": 1.732949546E12, "maxY": 1717.112244897959, "series": [{"data": [[1.732949565E12, 422.5148514851487], [1.732949564E12, 623.5099999999999], [1.732949563E12, 821.0102564102564], [1.732949546E12, 66.0], [1.732949567E12, 61.01652892561987], [1.732949566E12, 221.52000000000012], [1.73294956E12, 1412.0203045685275], [1.732949559E12, 1608.510204081633], [1.732949558E12, 1717.112244897959], [1.732949562E12, 1019.5247524752466], [1.732949561E12, 1217.046632124352], [1.732949554E12, 1177.175257731958], [1.732949553E12, 1035.415300546448], [1.732949557E12, 1594.3636363636354], [1.732949556E12, 1457.295336787564], [1.732949555E12, 1317.7589743589738], [1.732949549E12, 460.5891891891894], [1.732949548E12, 310.0444444444446], [1.732949547E12, 149.37368421052625], [1.732949552E12, 887.9843749999999], [1.732949551E12, 747.081218274112], [1.73294955E12, 604.1010638297873]], "isOverall": false, "label": "线程组", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.732949567E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 293.0, "minX": 1.0, "maxY": 9139.0, "series": [{"data": [[2.0, 8880.0], [3.0, 8881.0], [4.0, 8880.0], [6.0, 8885.5], [7.0, 8876.0], [8.0, 8876.0], [9.0, 8888.0], [10.0, 8881.0], [11.0, 8872.0], [12.0, 8863.0], [13.0, 8867.0], [14.0, 8848.0], [15.0, 8869.0], [16.0, 8869.0], [17.0, 8879.0], [18.0, 8863.0], [19.0, 8855.0], [20.0, 8866.0], [21.0, 8862.0], [22.0, 8860.0], [23.0, 8856.0], [24.0, 8852.0], [25.0, 8845.0], [26.0, 8845.0], [27.0, 8851.0], [28.0, 8847.0], [29.0, 8846.0], [30.0, 8836.0], [31.0, 8819.0], [33.0, 8838.0], [32.0, 8839.0], [35.0, 8837.0], [34.0, 8813.0], [37.0, 8814.0], [36.0, 8803.0], [38.0, 8826.0], [41.0, 8829.0], [40.0, 8809.0], [43.0, 8811.0], [42.0, 8810.0], [45.0, 8811.0], [44.0, 8813.0], [47.0, 8789.0], [46.0, 8788.0], [49.0, 8790.0], [48.0, 8795.0], [51.0, 8783.0], [50.0, 8784.0], [53.0, 8775.0], [52.0, 8780.0], [55.0, 8777.0], [54.0, 8786.0], [57.0, 8776.0], [56.0, 8776.0], [59.0, 8766.0], [58.0, 8766.0], [61.0, 8760.0], [60.0, 8780.0], [62.0, 2976.3333333333335], [63.0, 8753.0], [66.0, 2254.0], [67.0, 2973.6666666666665], [65.0, 4402.0], [64.0, 4408.5], [69.0, 1843.8], [68.0, 2355.0], [70.0, 4437.5], [71.0, 3124.6666666666665], [72.0, 1096.0], [74.0, 2320.75], [73.0, 4600.5], [75.0, 8724.0], [79.0, 8737.0], [78.0, 8732.0], [77.0, 8733.0], [76.0, 9006.0], [80.0, 4468.0], [83.0, 3062.6666666666665], [82.0, 8733.0], [81.0, 8718.0], [85.0, 1453.4285714285716], [86.0, 3085.3333333333335], [87.0, 4491.0], [84.0, 8721.0], [91.0, 8706.0], [90.0, 8710.0], [89.0, 8706.0], [88.0, 8992.0], [92.0, 4484.5], [95.0, 8970.0], [94.0, 8698.0], [93.0, 8684.0], [99.0, 8697.0], [98.0, 8690.0], [97.0, 8699.0], [96.0, 8700.0], [103.0, 1968.2], [102.0, 4483.5], [101.0, 8680.0], [100.0, 8688.0], [104.0, 1966.0], [105.0, 4490.5], [107.0, 3097.3333333333335], [106.0, 4492.5], [108.0, 2000.0], [110.0, 1630.1666666666667], [111.0, 8667.0], [109.0, 8664.0], [115.0, 8650.0], [114.0, 8670.0], [113.0, 8659.0], [112.0, 8657.0], [116.0, 4494.0], [117.0, 4499.0], [119.0, 4497.0], [118.0, 4479.0], [120.0, 1941.6], [122.0, 4467.5], [123.0, 8638.0], [121.0, 8626.0], [126.0, 2280.75], [127.0, 2937.6666666666665], [125.0, 8639.0], [124.0, 8640.0], [129.0, 4364.5], [131.0, 4475.0], [130.0, 4360.5], [135.0, 8597.0], [134.0, 8622.0], [133.0, 8626.0], [132.0, 8625.0], [128.0, 8631.0], [139.0, 4485.0], [138.0, 2937.0], [137.0, 4360.0], [141.0, 4469.5], [140.0, 4361.0], [143.0, 8588.0], [142.0, 8607.0], [136.0, 8621.0], [144.0, 2943.3333333333335], [151.0, 9139.0], [150.0, 8592.0], [149.0, 8593.0], [148.0, 8878.0], [147.0, 8598.0], [146.0, 8599.0], [145.0, 8873.0], [153.0, 3098.3333333333335], [152.0, 2421.75], [156.0, 3023.3333333333335], [157.0, 4474.5], [159.0, 8304.0], [158.0, 8586.0], [155.0, 8570.0], [154.0, 8572.0], [160.0, 3021.3333333333335], [163.0, 2966.0], [162.0, 2968.0], [165.0, 3043.3333333333335], [166.0, 293.0], [167.0, 5685.0], [164.0, 8299.0], [161.0, 8556.0], [169.0, 3118.6666666666665], [168.0, 4229.0], [173.0, 3135.6666666666665], [175.0, 4490.5], [174.0, 8542.0], [172.0, 8563.0], [171.0, 8540.0], [170.0, 8552.0], [176.0, 319.0], [177.0, 4437.75], [178.0, 3067.6666666666665], [181.0, 3074.3333333333335], [183.0, 3073.0], [182.0, 2416.25], [180.0, 8538.0], [179.0, 8543.0], [184.0, 3141.0], [185.0, 4360.0], [186.0, 4497.5], [187.0, 2988.6666666666665], [188.0, 3156.0], [191.0, 3162.6666666666665], [190.0, 8521.0], [189.0, 8522.0], [192.0, 3166.3333333333335], [194.0, 523.3333333333334], [193.0, 4514.0], [195.0, 4510.75], [199.0, 4518.5], [198.0, 8493.0], [197.0, 8502.0], [196.0, 8508.0], [200.0, 4511.5], [202.0, 4404.5], [203.0, 3189.0], [204.0, 2367.5], [205.0, 3188.6666666666665], [206.0, 4406.5], [207.0, 8480.0], [201.0, 8505.0], [209.0, 3123.6666666666665], [212.0, 2495.5], [211.0, 4420.0], [215.0, 3229.0], [214.0, 4419.5], [213.0, 8461.0], [210.0, 8475.0], [208.0, 8480.0], [216.0, 4516.0], [218.0, 1990.6666666666665], [219.0, 3143.0], [220.0, 4421.5], [221.0, 3078.6666666666665], [223.0, 8464.0], [222.0, 8456.0], [217.0, 8454.0], [224.0, 2087.0], [225.0, 1817.0], [226.0, 4432.0], [228.0, 4678.5], [231.0, 8716.0], [230.0, 8438.0], [229.0, 8445.0], [227.0, 8447.0], [232.0, 4653.5], [234.0, 2292.6], [236.0, 3089.0], [235.0, 4659.5], [239.0, 4661.0], [238.0, 8693.0], [237.0, 8424.0], [233.0, 8719.0], [241.0, 2540.25], [242.0, 2667.5], [243.0, 3331.3333333333335], [247.0, 8400.0], [246.0, 8399.0], [245.0, 8411.0], [244.0, 8405.0], [240.0, 8422.0], [248.0, 4549.0], [250.0, 2638.5], [249.0, 2664.5], [251.0, 4665.0], [253.0, 4661.0], [254.0, 4434.0], [255.0, 8386.0], [252.0, 8394.0], [268.0, 3306.0], [257.0, 3205.0], [256.0, 4557.0], [259.0, 2648.75], [258.0, 8381.0], [260.0, 3453.0], [262.0, 8368.0], [261.0, 8369.0], [263.0, 8375.0], [264.0, 4565.5], [266.0, 4568.5], [265.0, 4562.0], [267.0, 4669.5], [269.0, 3307.6666666666665], [271.0, 8344.0], [270.0, 8355.0], [273.0, 2757.75], [272.0, 2688.5], [274.0, 3317.3333333333335], [275.0, 8332.0], [285.0, 8599.0], [284.0, 8595.0], [287.0, 4967.0], [286.0, 8597.0], [277.0, 2690.0], [276.0, 4445.0], [278.0, 4723.0], [279.0, 8611.0], [280.0, 3320.0], [283.0, 2876.25], [282.0, 3409.0], [281.0, 8314.0], [289.0, 2089.6666666666665], [292.0, 4446.5], [293.0, 4585.0], [294.0, 4590.5], [297.0, 5825.333333333333], [296.0, 987.0], [301.0, 2789.25], [300.0, 8281.0], [291.0, 8288.0], [290.0, 8586.0], [302.0, 8285.0], [303.0, 3667.3333333333335], [295.0, 4590.0], [288.0, 8585.0], [299.0, 4817.0], [298.0, 4693.0], [306.0, 3265.3333333333335], [304.0, 3278.0], [305.0, 2096.5714285714284], [308.0, 4725.0], [307.0, 4440.5], [316.0, 8245.0], [317.0, 4608.5], [319.0, 3205.0], [312.0, 8256.0], [318.0, 8524.0], [309.0, 4451.5], [310.0, 4593.0], [311.0, 8263.0], [313.0, 4593.5], [314.0, 4595.5], [315.0, 4601.0], [321.0, 4461.0], [320.0, 3548.0], [323.0, 4325.5], [322.0, 3298.0], [325.0, 4461.5], [324.0, 8233.0], [326.0, 4463.0], [328.0, 3299.3333333333335], [332.0, 2664.5], [333.0, 7941.0], [335.0, 4606.0], [334.0, 8195.0], [327.0, 2850.5], [329.0, 4460.0], [331.0, 4472.0], [330.0, 7940.0], [337.0, 4600.0], [336.0, 4595.0], [338.0, 2743.25], [339.0, 8208.0], [348.0, 3328.6666666666665], [350.0, 3335.6666666666665], [351.0, 4619.5], [349.0, 3332.3333333333335], [340.0, 3410.3333333333335], [341.0, 3226.3333333333335], [342.0, 2682.0], [343.0, 4743.5], [344.0, 2617.0], [346.0, 4603.5], [347.0, 4617.0], [345.0, 4624.0], [355.0, 4619.0], [356.0, 3493.3333333333335], [358.0, 3422.0], [357.0, 3427.3333333333335], [359.0, 4753.0], [352.0, 8178.0], [354.0, 8169.0], [353.0, 8175.0], [362.0, 3343.3333333333335], [363.0, 4771.5], [361.0, 2711.25], [367.0, 4621.5], [360.0, 8444.0], [366.0, 3355.0], [365.0, 2783.25], [364.0, 4735.5], [370.0, 4616.0], [373.0, 842.0], [372.0, 3610.3333333333335], [371.0, 3181.0], [381.0, 8121.0], [380.0, 7832.0], [374.0, 3756.0], [375.0, 7831.0], [369.0, 8142.0], [368.0, 8152.0], [376.0, 4346.0], [377.0, 4354.5], [378.0, 4349.0], [379.0, 7844.0], [383.0, 7813.0], [382.0, 7834.0], [391.0, 4784.0], [386.0, 2829.75], [385.0, 8108.0], [384.0, 8119.0], [387.0, 8106.0], [389.0, 3293.0], [388.0, 3564.3333333333335], [390.0, 4635.0], [392.0, 3391.6666666666665], [394.0, 4498.0], [395.0, 3050.75], [393.0, 4494.5], [396.0, 3385.3333333333335], [397.0, 3675.3333333333335], [398.0, 4640.0], [399.0, 8085.0], [403.0, 3493.0], [401.0, 3674.3333333333335], [400.0, 4646.0], [402.0, 3499.6666666666665], [405.0, 3402.0], [404.0, 8068.0], [406.0, 8062.0], [407.0, 8063.0], [409.0, 2886.6], [408.0, 8067.0], [410.0, 3320.6666666666665], [411.0, 3507.6666666666665], [415.0, 3601.3333333333335], [414.0, 8051.0], [413.0, 8057.0], [412.0, 8049.0], [417.0, 3693.6666666666665], [416.0, 3705.3333333333335], [418.0, 3081.75], [428.0, 8019.0], [419.0, 8047.0], [430.0, 8029.0], [429.0, 8027.0], [421.0, 4778.5], [420.0, 4651.0], [422.0, 4802.0], [423.0, 8034.0], [425.0, 3030.25], [426.0, 3094.0], [427.0, 8024.0], [424.0, 4800.0], [431.0, 8015.0], [444.0, 3456.6666666666665], [433.0, 3794.333333333333], [432.0, 2684.0], [434.0, 1827.0], [435.0, 8000.5], [437.0, 3437.0], [436.0, 7742.0], [438.0, 8008.0], [439.0, 8009.0], [442.0, 3643.3333333333335], [441.0, 4665.5], [443.0, 3649.6666666666665], [447.0, 4517.5], [440.0, 8010.0], [446.0, 4518.0], [445.0, 7990.0], [460.0, 2958.25], [449.0, 3390.3333333333335], [448.0, 2876.75], [450.0, 4536.5], [451.0, 7716.0], [455.0, 3745.6666666666665], [454.0, 3562.3333333333335], [453.0, 7701.0], [452.0, 7707.0], [459.0, 3341.0], [458.0, 4802.5], [462.0, 4669.5], [461.0, 7960.0], [463.0, 7954.0], [457.0, 7967.0], [456.0, 7973.0], [465.0, 2760.0], [466.0, 3048.75], [464.0, 3675.0], [471.0, 7948.0], [467.0, 3189.25], [470.0, 3033.25], [469.0, 3591.3333333333335], [468.0, 4541.0], [474.0, 3507.3333333333335], [475.0, 3502.0], [476.0, 3785.3333333333335], [477.0, 8204.0], [479.0, 7931.0], [473.0, 7933.0], [472.0, 7942.0], [478.0, 7920.0], [492.0, 1479.0], [482.0, 2568.333333333333], [483.0, 2684.0], [484.0, 3064.25], [485.0, 7901.0], [487.0, 7910.0], [481.0, 7655.0], [480.0, 7921.0], [486.0, 7909.0], [488.0, 3516.3333333333335], [489.0, 4691.0], [490.0, 3074.5], [491.0, 7905.0], [494.0, 4825.5], [493.0, 8041.0], [495.0, 8176.0], [497.0, 3090.0], [496.0, 3802.6666666666665], [498.0, 4959.5], [508.0, 7875.0], [499.0, 8158.0], [509.0, 4699.5], [510.0, 4973.5], [511.0, 4846.0], [500.0, 4955.0], [501.0, 4678.5], [502.0, 4824.5], [503.0, 8425.0], [504.0, 3803.3333333333335], [505.0, 3806.3333333333335], [506.0, 3728.6666666666665], [507.0, 7884.0], [516.0, 8697.0], [524.0, 2656.8], [514.0, 3554.0], [512.0, 8428.0], [526.0, 4985.0], [518.0, 4565.5], [536.0, 3676.0], [538.0, 7824.0], [540.0, 3506.0], [528.0, 8673.0], [542.0, 7813.0], [530.0, 3011.0], [532.0, 5398.0], [534.0, 5128.0], [520.0, 3469.6666666666665], [522.0, 8131.0], [550.0, 7784.0], [558.0, 3614.0], [546.0, 3776.6666666666665], [548.0, 4722.5], [568.0, 7736.0], [570.0, 8025.0], [572.0, 2912.0], [560.0, 7773.0], [574.0, 7732.0], [562.0, 4719.5], [564.0, 7763.0], [566.0, 7753.0], [554.0, 3052.75], [552.0, 7781.0], [556.0, 4718.0], [544.0, 7793.0], [600.0, 4598.0], [578.0, 3232.25], [576.0, 7723.0], [580.0, 4869.0], [584.0, 3652.75], [594.0, 3751.0], [592.0, 7411.0], [606.0, 3145.0], [602.0, 7950.0], [604.0, 2982.4], [596.0, 4599.0], [598.0, 4874.5], [582.0, 5003.0], [588.0, 3657.333333333333], [586.0, 7451.0], [590.0, 3563.666666666667], [612.0, 3682.666666666667], [608.0, 4601.5], [622.0, 3442.0], [610.0, 7393.0], [614.0, 3506.0], [616.0, 3595.666666666667], [626.0, 7359.0], [624.0, 7348.0], [638.0, 8170.0], [636.0, 3330.5], [634.0, 7621.0], [632.0, 7352.0], [628.0, 4171.0], [630.0, 3668.5], [618.0, 7921.0], [620.0, 4752.5], [664.0, 4636.5], [640.0, 3809.333333333333], [642.0, 3813.833333333333], [646.0, 7596.0], [666.0, 7570.0], [668.0, 4780.5], [670.0, 4639.5], [656.0, 7582.0], [658.0, 5185.0], [662.0, 4787.0], [660.0, 3841.0], [644.0, 4616.0], [650.0, 7314.0], [648.0, 7590.0], [652.0, 2863.0], [654.0, 7567.0], [676.0, 4648.5], [672.0, 4775.5], [674.0, 7550.0], [686.0, 4802.75], [678.0, 3188.4], [680.0, 4786.0], [682.0, 7266.0], [688.0, 7253.0], [690.0, 7239.0], [702.0, 4661.5], [696.0, 3491.8], [698.0, 3452.75], [700.0, 3310.5], [692.0, 3497.5], [694.0, 3892.666666666667], [684.0, 3310.0], [708.0, 7204.0], [718.0, 4518.5], [704.0, 3799.0], [706.0, 7484.0], [710.0, 7478.0], [728.0, 7724.0], [732.0, 7437.0], [734.0, 3241.2], [720.0, 7443.0], [730.0, 4299.666666666667], [722.0, 3557.25], [726.0, 4671.5], [724.0, 4952.0], [716.0, 4808.5], [714.0, 4949.5], [712.0, 7180.0], [752.0, 3532.25], [742.0, 4822.0], [736.0, 4676.0], [740.0, 3250.2], [738.0, 7698.0], [756.0, 7383.0], [758.0, 3688.75], [754.0, 4815.5], [766.0, 3985.666666666667], [764.0, 4355.0], [760.0, 3550.75], [762.0, 4071.666666666667], [746.0, 4052.666666666667], [744.0, 7403.0], [748.0, 3535.0], [750.0, 7673.0], [772.0, 5098.5], [780.0, 4822.5], [768.0, 5104.5], [782.0, 5109.0], [774.0, 7615.0], [792.0, 7299.0], [794.0, 4841.0], [798.0, 4115.333333333333], [796.0, 4846.0], [786.0, 4836.5], [788.0, 5109.0], [790.0, 4013.666666666667], [784.0, 4825.5], [770.0, 4966.5], [776.0, 4361.666666666667], [778.0, 3329.2], [804.0, 3631.25], [800.0, 7284.5], [802.0, 7265.0], [814.0, 3952.333333333333], [812.0, 6992.0], [806.0, 4986.0], [816.0, 4053.0], [828.0, 4720.0], [830.0, 3978.0], [824.0, 3584.5], [826.0, 4580.5], [818.0, 4839.0], [820.0, 6990.0], [822.0, 4715.5], [808.0, 7009.0], [810.0, 3758.0], [856.0, 3445.75], [832.0, 3469.0], [844.0, 4877.5], [846.0, 7466.0], [838.0, 3305.4285714285716], [858.0, 6895.0], [848.0, 7201.0], [862.0, 4734.5], [860.0, 6904.0], [850.0, 4099.0], [852.0, 4104.666666666667], [854.0, 4597.5], [836.0, 3999.333333333333], [834.0, 7230.0], [840.0, 7203.0], [842.0, 6947.0], [894.0, 7367.0], [864.0, 4742.5], [888.0, 7101.0], [890.0, 3551.8], [880.0, 7127.0], [892.0, 7085.0], [884.0, 4144.333333333333], [886.0, 4886.5], [882.0, 4140.0], [870.0, 4019.666666666667], [868.0, 7156.0], [866.0, 6882.0], [874.0, 4884.5], [872.0, 7143.0], [876.0, 3753.25], [878.0, 4875.0], [896.0, 5157.0], [910.0, 7062.0], [900.0, 7357.0], [898.0, 7371.0], [902.0, 7084.0], [904.0, 3388.833333333333], [908.0, 3298.375], [906.0, 7068.0], [914.0, 3991.666666666667], [912.0, 7056.0], [924.0, 4105.0], [926.0, 7310.0], [922.0, 3559.8], [920.0, 7319.0], [916.0, 4091.666666666667], [918.0, 7328.0], [932.0, 6748.0], [930.0, 4902.5], [928.0, 4195.0], [942.0, 7268.0], [934.0, 7028.0], [952.0, 6958.0], [954.0, 4784.0], [956.0, 4922.5], [958.0, 3746.2], [946.0, 6980.0], [948.0, 4780.0], [950.0, 4411.0], [944.0, 3804.5], [936.0, 4774.0], [938.0, 4764.0], [940.0, 2544.0], [962.0, 6944.0], [964.0, 4920.5], [960.0, 6956.0], [966.0, 3767.75], [970.0, 6931.0], [972.0, 3781.25], [974.0, 4919.5], [976.0, 6917.0], [988.0, 6629.0], [990.0, 4923.5], [984.0, 6632.0], [986.0, 4174.0], [978.0, 4259.666666666667], [980.0, 4927.5], [982.0, 6910.0], [996.0, 4100.0], [992.0, 4370.333333333333], [1006.0, 6877.0], [994.0, 5365.0], [998.0, 4195.666666666667], [1014.0, 4948.0], [1012.0, 3852.5], [1010.0, 6593.0], [1008.0, 6869.0], [1022.0, 6856.0], [1018.0, 4313.333333333333], [1016.0, 6563.0], [1020.0, 3761.2], [1002.0, 5072.0], [1000.0, 6898.0], [1004.0, 4044.5], [1028.0, 6832.0], [1032.0, 4827.5], [1052.0, 4966.0], [1024.0, 6841.0], [1048.0, 4971.0], [1044.0, 6522.0], [1036.0, 6825.0], [1072.0, 7011.0], [1076.0, 4670.0], [1080.0, 6730.0], [1056.0, 4365.666666666667], [1060.0, 5040.0], [1064.0, 5242.5], [1068.0, 4227.5], [1040.0, 4758.25], [1092.0, 4982.5], [1088.0, 4985.5], [1116.0, 6370.0], [1112.0, 4442.0], [1108.0, 6659.0], [1096.0, 5120.5], [1136.0, 3879.2], [1100.0, 6948.0], [1140.0, 4298.333333333333], [1144.0, 4731.0], [1148.0, 5012.0], [1120.0, 4855.0], [1124.0, 4052.5], [1128.0, 6614.0], [1132.0, 4196.25], [1104.0, 4054.5], [1152.0, 6578.0], [1156.0, 4307.75], [1180.0, 5712.0], [1176.0, 4179.6], [1172.0, 5622.666666666667], [1168.0, 7077.0], [1160.0, 5008.5], [1204.0, 3904.8571428571427], [1208.0, 5040.0], [1212.0, 6422.0], [1200.0, 5019.5], [1164.0, 6272.0], [1196.0, 6479.0], [1192.0, 4361.333333333333], [1184.0, 4884.5], [1188.0, 6496.0], [1220.0, 6408.0], [1216.0, 4886.0], [1244.0, 6377.0], [1240.0, 4246.25], [1236.0, 5594.666666666667], [1232.0, 4445.0], [1224.0, 4771.0], [1228.0, 4064.4], [1252.0, 4991.75], [1256.0, 5052.5], [1260.0, 6057.0], [1248.0, 4090.8333333333335], [1272.0, 4793.5], [1276.0, 6579.0], [1264.0, 4144.75], [1268.0, 6059.0], [1288.0, 6561.0], [1292.0, 4469.75], [1304.0, 4921.0], [1280.0, 6581.0], [1284.0, 4885.0], [1312.0, 5074.0], [1340.0, 5900.0], [1332.0, 5490.5], [1336.0, 4559.0], [1328.0, 5095.5], [1316.0, 5089.5], [1320.0, 5214.5], [1324.0, 4249.0], [1296.0, 4192.666666666667], [1300.0, 4773.0], [1348.0, 5888.0], [1344.0, 4734.8], [1368.0, 5824.0], [1372.0, 4976.5], [1352.0, 5882.0], [1356.0, 4938.333333333333], [1392.0, 4882.4], [1396.0, 5120.0], [1400.0, 4904.0], [1404.0, 5678.0], [1376.0, 5248.0], [1380.0, 6105.0], [1384.0, 4609.0], [1388.0, 5075.666666666667], [1360.0, 4765.666666666667], [1364.0, 5099.0], [1456.0, 5151.5], [1408.0, 4817.666666666667], [1412.0, 4741.333333333333], [1420.0, 5701.0], [1460.0, 5152.0], [1464.0, 5626.0], [1468.0, 4711.333333333333], [1440.0, 5681.0], [1444.0, 4960.666666666667], [1448.0, 5145.5], [1452.0, 5924.0], [1416.0, 4089.285714285714], [1424.0, 4498.25], [1428.0, 6134.0], [1432.0, 5697.0], [1436.0, 5699.0], [1520.0, 5789.0], [1472.0, 5017.0], [1476.0, 5599.0], [1480.0, 5589.0], [1504.0, 5030.0], [1532.0, 4946.5], [1528.0, 4739.5], [1484.0, 5857.0], [1524.0, 5456.0], [1508.0, 5816.0], [1516.0, 5805.0], [1512.0, 5481.0], [1488.0, 4812.25], [1492.0, 4680.5], [1496.0, 5840.0], [1500.0, 4764.0], [1544.0, 5004.666666666667], [1548.0, 5044.0], [1536.0, 4896.666666666667], [1564.0, 5331.0], [1540.0, 5752.0], [1568.0, 5194.0], [1596.0, 5633.0], [1592.0, 5918.0], [1588.0, 4984.25], [1584.0, 5643.0], [1572.0, 5067.8], [1576.0, 5658.0], [1580.0, 5653.0], [1552.0, 5197.75], [1556.0, 5981.0], [1560.0, 5327.5], [1612.0, 5309.0], [1648.0, 5024.0], [1604.0, 5009.75], [1600.0, 5620.0], [1628.0, 6125.0], [1608.0, 5358.0], [1652.0, 5239.0], [1660.0, 5191.8], [1656.0, 5241.666666666667], [1632.0, 5531.5], [1636.0, 5557.0], [1640.0, 4988.2], [1644.0, 5085.5], [1616.0, 6142.0], [1620.0, 5357.5], [1624.0, 5575.0], [1672.0, 5259.666666666667], [1676.0, 5253.5], [1664.0, 5235.5], [1688.0, 5439.0], [1692.0, 4920.0], [1668.0, 5771.0], [1712.0, 5269.0], [1716.0, 5115.0], [1720.0, 5205.666666666667], [1724.0, 5086.0], [1696.0, 5099.333333333333], [1700.0, 5035.25], [1704.0, 5678.0], [1708.0, 5265.5], [1680.0, 5384.5], [1684.0, 5273.333333333333], [1732.0, 5617.0], [1728.0, 5086.0], [1736.0, 5073.333333333333], [1740.0, 5328.0], [1744.0, 5138.5], [1752.0, 5547.666666666667], [1756.0, 5273.25], [1748.0, 5584.0], [1033.0, 3891.25], [1029.0, 5089.0], [1025.0, 7108.0], [1053.0, 4543.333333333333], [1049.0, 3921.5], [1045.0, 4812.0], [1037.0, 6810.0], [1073.0, 4849.0], [1077.0, 4975.5], [1081.0, 4311.0], [1085.0, 5656.0], [1061.0, 3868.1666666666665], [1057.0, 6770.0], [1065.0, 7009.0], [1069.0, 4190.6], [1041.0, 3549.1666666666665], [1089.0, 6706.0], [1113.0, 4341.333333333333], [1117.0, 5275.5], [1109.0, 4250.333333333333], [1093.0, 5125.0], [1097.0, 4988.0], [1101.0, 6675.0], [1141.0, 4872.0], [1149.0, 5015.0], [1145.0, 6317.0], [1137.0, 4731.0], [1121.0, 4984.0], [1125.0, 4996.0], [1129.0, 6612.0], [1133.0, 4179.666666666667], [1105.0, 4341.666666666667], [1157.0, 4956.666666666667], [1161.0, 4457.25], [1181.0, 6228.0], [1177.0, 4275.75], [1173.0, 6522.0], [1169.0, 3643.0000000000005], [1153.0, 6293.0], [1165.0, 5022.5], [1201.0, 4893.0], [1205.0, 5174.0], [1213.0, 5180.5], [1209.0, 6717.0], [1185.0, 4440.333333333333], [1197.0, 3843.0], [1193.0, 4622.666666666667], [1221.0, 6408.0], [1245.0, 5322.0], [1225.0, 4128.0], [1241.0, 4657.75], [1237.0, 4969.333333333333], [1233.0, 4595.0], [1217.0, 4851.0], [1229.0, 6421.0], [1249.0, 4328.5], [1253.0, 6350.0], [1257.0, 4098.142857142857], [1261.0, 6341.0], [1277.0, 4162.6], [1269.0, 6045.0], [1273.0, 6033.0], [1265.0, 4215.5], [1293.0, 5060.0], [1281.0, 5067.5], [1289.0, 4942.0], [1285.0, 6019.0], [1313.0, 4453.833333333334], [1341.0, 5903.0], [1333.0, 6151.0], [1337.0, 4958.25], [1329.0, 5090.5], [1317.0, 4623.0], [1321.0, 6189.0], [1325.0, 5149.75], [1301.0, 5341.5], [1305.0, 5078.5], [1309.0, 5359.5], [1353.0, 5869.0], [1349.0, 4574.0], [1345.0, 5899.0], [1373.0, 5834.0], [1357.0, 6146.0], [1377.0, 4609.0], [1405.0, 4518.4], [1393.0, 5082.333333333333], [1397.0, 6031.0], [1401.0, 4568.6], [1381.0, 4693.333333333333], [1385.0, 4836.5], [1389.0, 4889.333333333333], [1361.0, 5114.5], [1365.0, 4738.0], [1369.0, 4964.0], [1421.0, 4983.0], [1413.0, 4995.0], [1409.0, 6036.0], [1437.0, 4516.5], [1417.0, 5128.0], [1457.0, 5151.5], [1461.0, 5143.0], [1465.0, 5140.5], [1469.0, 5901.0], [1441.0, 5547.5], [1445.0, 7040.0], [1449.0, 4691.0], [1453.0, 5237.5], [1425.0, 5126.0], [1429.0, 5977.0], [1433.0, 5701.0], [1477.0, 5153.5], [1473.0, 4789.75], [1501.0, 5557.0], [1497.0, 4894.5], [1481.0, 5027.0], [1485.0, 5848.0], [1521.0, 5037.0], [1525.0, 4703.4], [1529.0, 5039.0], [1533.0, 5319.0], [1505.0, 5812.0], [1509.0, 5169.0], [1513.0, 4870.333333333333], [1517.0, 4627.4], [1493.0, 4886.5], [1549.0, 5743.5], [1541.0, 4710.333333333334], [1537.0, 5750.0], [1565.0, 5701.0], [1561.0, 5330.0], [1545.0, 5090.333333333333], [1585.0, 5655.0], [1589.0, 5062.0], [1593.0, 4736.833333333333], [1569.0, 5693.0], [1597.0, 5617.0], [1573.0, 5336.5], [1577.0, 5671.0], [1581.0, 5345.0], [1553.0, 5182.0], [1557.0, 5326.5], [1609.0, 5184.0], [1605.0, 5268.666666666667], [1601.0, 5629.0], [1629.0, 5580.0], [1613.0, 5083.333333333333], [1633.0, 5133.25], [1637.0, 5553.0], [1657.0, 4908.4], [1661.0, 5251.666666666667], [1649.0, 4950.0], [1653.0, 4961.25], [1641.0, 4990.2], [1645.0, 5263.0], [1617.0, 5774.5], [1621.0, 5100.666666666667], [1625.0, 5196.25], [1677.0, 5528.5], [1669.0, 5522.5], [1665.0, 5117.75], [1673.0, 5206.0], [1701.0, 5255.5], [1705.0, 5257.75], [1709.0, 5398.0], [1697.0, 5967.0], [1725.0, 5265.5], [1721.0, 5002.5], [1717.0, 5116.5], [1713.0, 5257.5], [1681.0, 5462.0], [1685.0, 5449.0], [1689.0, 5249.5], [1693.0, 5250.0], [1729.0, 5065.0], [1733.0, 5409.0], [1757.0, 4995.5], [1737.0, 5070.333333333333], [1745.0, 5356.8], [1741.0, 5319.0], [1749.0, 5309.0], [1753.0, 5201.0], [517.0, 4563.0], [513.0, 3053.5], [527.0, 7840.0], [525.0, 3076.25], [515.0, 3553.0], [519.0, 8409.0], [537.0, 3681.0], [539.0, 2516.3333333333335], [541.0, 7811.0], [543.0, 7814.0], [529.0, 8106.0], [531.0, 4713.5], [535.0, 2566.857142857143], [533.0, 3856.6666666666665], [521.0, 4846.0], [523.0, 3759.0], [569.0, 7463.0], [571.0, 3146.0], [547.0, 2667.5], [549.0, 7801.0], [551.0, 7791.0], [573.0, 7454.0], [575.0, 7745.0], [563.0, 3712.666666666667], [565.0, 2853.8], [567.0, 3201.25], [561.0, 4720.5], [553.0, 7774.0], [555.0, 3707.0], [557.0, 3519.0], [559.0, 4586.5], [545.0, 7799.0], [583.0, 3377.5], [577.0, 3233.5], [591.0, 4591.5], [579.0, 3656.666666666667], [585.0, 5146.5], [593.0, 7401.0], [605.0, 7673.0], [607.0, 4602.0], [601.0, 7407.0], [603.0, 3859.6666666666665], [595.0, 3470.0], [599.0, 7696.0], [597.0, 4884.0], [581.0, 7706.0], [589.0, 3463.75], [587.0, 7434.0], [613.0, 7377.0], [615.0, 4614.0], [609.0, 3960.666666666667], [623.0, 4752.5], [621.0, 3881.0], [611.0, 4470.5], [617.0, 3498.333333333333], [627.0, 3975.0], [625.0, 7363.0], [637.0, 4766.0], [639.0, 7621.0], [635.0, 3802.0], [633.0, 7622.0], [629.0, 4068.0], [631.0, 7343.0], [619.0, 3604.333333333333], [665.0, 7561.0], [641.0, 1740.0], [645.0, 4762.5], [647.0, 7590.0], [667.0, 3004.8], [669.0, 3854.666666666667], [671.0, 7540.0], [657.0, 4763.5], [659.0, 4764.5], [661.0, 3201.6], [663.0, 7553.0], [643.0, 4762.0], [651.0, 3638.0], [649.0, 7592.0], [653.0, 3224.25], [655.0, 7581.0], [679.0, 4791.5], [675.0, 4649.0], [673.0, 7548.0], [687.0, 7237.0], [677.0, 3868.0], [681.0, 7538.0], [691.0, 4660.5], [703.0, 7489.0], [689.0, 7240.0], [701.0, 3022.2], [697.0, 4660.0], [699.0, 4658.5], [693.0, 4519.5], [695.0, 3792.333333333333], [685.0, 2140.3333333333335], [683.0, 7530.0], [709.0, 4659.0], [705.0, 3194.4], [719.0, 4520.5], [707.0, 3810.333333333333], [711.0, 3198.8], [729.0, 3932.666666666667], [731.0, 3507.75], [733.0, 3853.0], [735.0, 3515.25], [721.0, 7179.0], [723.0, 3835.333333333333], [725.0, 3836.666666666667], [727.0, 7724.0], [715.0, 3164.3333333333335], [713.0, 7194.0], [717.0, 4668.5], [767.0, 7634.0], [737.0, 4037.0], [739.0, 4046.0], [753.0, 3285.4], [755.0, 3963.0], [757.0, 4822.0], [759.0, 4959.5], [765.0, 4829.5], [743.0, 7690.0], [761.0, 7640.0], [763.0, 3623.0], [741.0, 3520.75], [747.0, 3596.25], [745.0, 7681.0], [749.0, 8500.0], [751.0, 7677.0], [773.0, 7622.0], [771.0, 5105.5], [769.0, 3563.0], [781.0, 7325.0], [783.0, 5113.5], [775.0, 7613.0], [793.0, 7033.0], [797.0, 3090.285714285714], [795.0, 3473.0], [785.0, 3331.6], [787.0, 4980.5], [791.0, 7314.0], [789.0, 3531.75], [777.0, 3574.25], [779.0, 7333.0], [807.0, 2419.0], [803.0, 4034.666666666667], [801.0, 4828.0], [813.0, 7271.0], [815.0, 6964.0], [805.0, 4841.5], [831.0, 4714.0], [827.0, 6962.0], [829.0, 6969.0], [825.0, 6963.0], [817.0, 4329.0], [819.0, 6973.0], [821.0, 6975.0], [823.0, 3206.666666666667], [809.0, 3569.75], [811.0, 4036.0], [837.0, 3235.0], [833.0, 4722.0], [845.0, 6932.0], [847.0, 5155.5], [839.0, 4861.5], [857.0, 3454.0], [859.0, 3921.0], [863.0, 3489.8333333333335], [849.0, 6930.0], [861.0, 6894.0], [851.0, 4737.0], [855.0, 4722.5], [853.0, 3918.333333333333], [835.0, 4744.0], [841.0, 4736.0], [843.0, 3466.4], [889.0, 3776.5], [865.0, 3926.333333333333], [879.0, 7136.0], [871.0, 4122.333333333333], [891.0, 4325.333333333333], [895.0, 3374.3333333333335], [893.0, 7094.0], [881.0, 4037.333333333333], [883.0, 3900.5], [885.0, 7109.0], [887.0, 7103.0], [869.0, 3539.5], [867.0, 6879.0], [873.0, 7145.0], [875.0, 7141.0], [877.0, 3689.5], [897.0, 4889.5], [911.0, 7056.0], [901.0, 4251.333333333333], [899.0, 7068.0], [903.0, 3729.5], [905.0, 4254.666666666667], [907.0, 7071.0], [909.0, 3743.5], [913.0, 7053.0], [925.0, 7289.0], [927.0, 4759.5], [921.0, 7322.0], [923.0, 4097.333333333333], [915.0, 3686.0], [917.0, 4894.5], [919.0, 7031.0], [933.0, 3644.4], [931.0, 4898.0], [941.0, 4854.0], [929.0, 3684.8], [943.0, 4771.5], [935.0, 7018.0], [953.0, 4913.5], [955.0, 6698.0], [957.0, 3888.0], [959.0, 4143.0], [945.0, 3717.6], [947.0, 6972.0], [951.0, 5056.5], [949.0, 4506.666666666667], [937.0, 3986.75], [939.0, 6738.0], [963.0, 3769.25], [961.0, 6683.0], [965.0, 6940.0], [967.0, 4921.5], [969.0, 4787.0], [973.0, 4254.333333333333], [971.0, 6929.0], [975.0, 6921.0], [977.0, 3673.4], [991.0, 6626.0], [987.0, 4086.666666666667], [989.0, 6883.0], [985.0, 3636.6], [979.0, 4258.333333333333], [983.0, 6897.0], [981.0, 6914.0], [999.0, 4947.0], [995.0, 4801.5], [993.0, 3490.666666666667], [1007.0, 6884.0], [997.0, 3760.25], [1015.0, 4677.0], [1013.0, 4118.333333333333], [1011.0, 4680.5], [1009.0, 7424.0], [1021.0, 4947.0], [1023.0, 6842.0], [1017.0, 6579.0], [1019.0, 6574.0], [1001.0, 6864.0], [1003.0, 4943.0], [1005.0, 3980.75], [1030.0, 7089.0], [1078.0, 4588.333333333333], [1054.0, 7054.0], [1026.0, 6839.0], [1046.0, 6798.0], [1050.0, 4824.5], [1042.0, 4089.0], [1034.0, 4154.333333333333], [1038.0, 6810.0], [1074.0, 4433.5], [1082.0, 4841.0], [1086.0, 3783.0], [1058.0, 4464.333333333333], [1062.0, 4833.333333333333], [1066.0, 4979.5], [1070.0, 6739.0], [1090.0, 6977.0], [1098.0, 4079.2], [1118.0, 4359.0], [1114.0, 4994.0], [1110.0, 4859.0], [1106.0, 5127.5], [1094.0, 6694.0], [1102.0, 6393.0], [1138.0, 4850.5], [1142.0, 4147.0], [1146.0, 6309.0], [1150.0, 4106.5], [1122.0, 6613.0], [1130.0, 4643.0], [1134.0, 6878.0], [1158.0, 6278.0], [1178.0, 5165.5], [1154.0, 4401.333333333333], [1182.0, 4442.666666666667], [1174.0, 4430.666666666667], [1170.0, 4606.0], [1162.0, 4883.0], [1206.0, 4330.25], [1210.0, 6436.0], [1166.0, 6539.0], [1202.0, 6709.0], [1190.0, 4818.25], [1194.0, 4373.75], [1198.0, 4898.5], [1186.0, 6495.0], [1214.0, 6454.0], [1222.0, 6421.0], [1226.0, 4899.5], [1242.0, 4777.0], [1246.0, 6658.0], [1238.0, 4917.5], [1234.0, 6400.0], [1218.0, 3988.2], [1230.0, 6115.0], [1254.0, 6082.0], [1258.0, 6074.0], [1262.0, 6059.0], [1250.0, 6908.0], [1278.0, 5067.0], [1274.0, 6583.0], [1270.0, 5060.5], [1266.0, 4783.0], [1334.0, 6441.0], [1282.0, 4576.0], [1286.0, 4534.75], [1290.0, 5996.0], [1314.0, 5929.0], [1342.0, 4923.0], [1338.0, 6175.0], [1294.0, 6540.0], [1330.0, 4862.0], [1318.0, 5354.5], [1322.0, 4895.333333333333], [1326.0, 5091.5], [1298.0, 5984.5], [1302.0, 5352.0], [1306.0, 4886.5], [1310.0, 4599.333333333333], [1350.0, 4436.0], [1346.0, 5237.0], [1366.0, 4959.0], [1374.0, 4753.75], [1370.0, 4978.5], [1358.0, 6148.0], [1394.0, 6075.0], [1398.0, 6064.0], [1402.0, 5126.0], [1406.0, 5123.5], [1382.0, 4600.0], [1378.0, 5824.0], [1386.0, 6346.0], [1390.0, 4981.5], [1354.0, 4578.75], [1362.0, 4767.0], [1422.0, 5693.0], [1410.0, 4918.333333333333], [1414.0, 6021.0], [1418.0, 4646.333333333333], [1458.0, 5236.0], [1462.0, 4786.0], [1466.0, 5289.0], [1470.0, 5145.5], [1442.0, 4875.333333333333], [1446.0, 5673.0], [1450.0, 4571.999999999999], [1454.0, 5940.0], [1426.0, 7105.0], [1430.0, 4856.666666666667], [1434.0, 4999.0], [1438.0, 4546.571428571428], [1482.0, 4524.0], [1498.0, 4845.666666666667], [1474.0, 4761.6], [1478.0, 4738.0], [1534.0, 4804.0], [1530.0, 4794.666666666667], [1526.0, 4577.5], [1522.0, 5177.5], [1486.0, 5856.0], [1506.0, 5166.0], [1510.0, 4857.666666666667], [1514.0, 4631.2], [1518.0, 4873.666666666667], [1490.0, 5710.0], [1494.0, 4851.0], [1502.0, 5810.0], [1542.0, 5181.0], [1538.0, 4803.0], [1566.0, 5021.333333333333], [1562.0, 5207.333333333333], [1546.0, 5258.0], [1598.0, 4703.0], [1594.0, 5632.0], [1590.0, 5157.666666666667], [1586.0, 5659.0], [1550.0, 5719.0], [1570.0, 5034.0], [1574.0, 5195.0], [1578.0, 5078.8], [1582.0, 5653.0], [1554.0, 5013.0], [1558.0, 5051.0], [1610.0, 5610.0], [1602.0, 5216.5], [1630.0, 6950.0], [1606.0, 5158.333333333333], [1614.0, 5074.5], [1650.0, 5236.5], [1654.0, 5048.666666666667], [1658.0, 5384.0], [1662.0, 5234.0], [1638.0, 5221.0], [1634.0, 5563.0], [1642.0, 4931.833333333333], [1646.0, 5103.0], [1618.0, 5101.666666666667], [1622.0, 5009.666666666667], [1626.0, 5089.5], [1666.0, 5119.25], [1686.0, 5222.5], [1690.0, 5438.0], [1694.0, 5191.333333333333], [1670.0, 5130.0], [1674.0, 5630.666666666667], [1678.0, 5170.333333333333], [1714.0, 5401.0], [1718.0, 5320.666666666667], [1722.0, 5044.0], [1726.0, 6188.0], [1698.0, 5258.5], [1706.0, 5005.099999999999], [1702.0, 5659.0], [1710.0, 5393.5], [1682.0, 5458.0], [1730.0, 5170.333333333334], [1758.0, 5275.666666666667], [1734.0, 5352.0], [1742.0, 5413.0], [1738.0, 5336.0], [1746.0, 5311.0], [1754.0, 5571.0], [1750.0, 5577.0], [1031.0, 4156.0], [1039.0, 2830.0], [1055.0, 4138.25], [1027.0, 6837.0], [1047.0, 6521.0], [1051.0, 7067.0], [1035.0, 4064.666666666667], [1079.0, 4042.75], [1087.0, 4320.0], [1083.0, 6712.0], [1075.0, 4449.25], [1063.0, 6753.0], [1071.0, 6746.0], [1067.0, 5242.0], [1043.0, 6526.0], [1095.0, 4982.5], [1099.0, 4606.666666666667], [1115.0, 4540.666666666667], [1111.0, 4295.0], [1119.0, 6644.0], [1091.0, 6430.0], [1103.0, 5264.5], [1147.0, 4388.333333333333], [1151.0, 4021.75], [1143.0, 4866.0], [1139.0, 6605.0], [1123.0, 3771.125], [1131.0, 4721.0], [1127.0, 6630.5], [1135.0, 4862.5], [1107.0, 6667.0], [1155.0, 5003.0], [1179.0, 5303.5], [1183.0, 4435.0], [1171.0, 3226.5], [1175.0, 6793.0], [1159.0, 4313.25], [1163.0, 4516.333333333333], [1167.0, 7088.0], [1203.0, 4080.2], [1215.0, 4398.333333333333], [1207.0, 5178.5], [1211.0, 6426.0], [1195.0, 6194.0], [1199.0, 6471.0], [1191.0, 4753.0], [1187.0, 6494.0], [1223.0, 6421.0], [1231.0, 4417.333333333333], [1243.0, 6370.0], [1239.0, 4916.5], [1219.0, 6420.0], [1247.0, 6367.0], [1227.0, 4778.5], [1255.0, 6062.0], [1259.0, 4722.0], [1263.0, 4221.75], [1279.0, 5209.5], [1275.0, 4835.333333333333], [1271.0, 3912.75], [1267.0, 5335.5], [1291.0, 4692.833333333333], [1295.0, 4866.333333333333], [1283.0, 3835.0], [1311.0, 4701.666666666667], [1287.0, 6554.0], [1343.0, 4652.333333333333], [1339.0, 5910.0], [1335.0, 5234.0], [1331.0, 5638.0], [1315.0, 5084.0], [1319.0, 6205.0], [1323.0, 4631.0], [1327.0, 5218.5], [1299.0, 5985.0], [1303.0, 4433.0], [1307.0, 6234.5], [1355.0, 4372.4], [1351.0, 5242.5], [1367.0, 4683.333333333333], [1347.0, 5884.0], [1375.0, 4600.0], [1359.0, 5107.0], [1379.0, 5817.0], [1403.0, 6037.0], [1407.0, 4980.0], [1395.0, 6597.0], [1399.0, 6030.0], [1383.0, 4846.0], [1387.0, 4569.25], [1391.0, 4983.0], [1363.0, 5512.0], [1371.0, 4875.666666666667], [1415.0, 6015.0], [1435.0, 4993.0], [1411.0, 4541.5], [1439.0, 5951.0], [1419.0, 6287.0], [1423.0, 4701.75], [1459.0, 5914.0], [1463.0, 4674.4], [1467.0, 5895.0], [1471.0, 5886.0], [1443.0, 4955.666666666667], [1447.0, 6232.0], [1451.0, 6217.0], [1455.0, 5942.0], [1427.0, 4278.0], [1431.0, 4479.428571428572], [1483.0, 5575.5], [1475.0, 4908.333333333333], [1503.0, 5022.5], [1495.0, 5844.0], [1499.0, 4938.0], [1479.0, 5295.5], [1487.0, 4459.666666666667], [1523.0, 5505.0], [1527.0, 5058.8], [1531.0, 5764.0], [1535.0, 5458.0], [1507.0, 4635.0], [1511.0, 4394.5], [1515.0, 5038.0], [1519.0, 4862.0], [1491.0, 5030.0], [1543.0, 5098.333333333333], [1539.0, 5035.0], [1563.0, 5318.5], [1567.0, 5084.5], [1559.0, 5000.0], [1547.0, 5593.5], [1551.0, 5286.333333333333], [1587.0, 5646.0], [1591.0, 5362.0], [1595.0, 5619.0], [1599.0, 5070.0], [1575.0, 5308.333333333333], [1579.0, 5035.4], [1583.0, 5665.0], [1571.0, 5334.5], [1555.0, 5978.0], [1611.0, 5369.5], [1615.0, 5027.75], [1603.0, 5211.75], [1627.0, 5083.5], [1631.0, 5297.666666666667], [1607.0, 5617.0], [1635.0, 6102.0], [1663.0, 5252.5], [1655.0, 5244.0], [1659.0, 5510.0], [1651.0, 5245.0], [1639.0, 5223.5], [1643.0, 4949.333333333333], [1647.0, 5257.0], [1619.0, 5093.333333333333], [1623.0, 5577.0], [1675.0, 5240.0], [1679.0, 5360.333333333333], [1667.0, 5494.0], [1695.0, 4965.0], [1671.0, 5263.0], [1703.0, 5685.0], [1707.0, 5113.5], [1711.0, 5218.333333333333], [1699.0, 5106.333333333333], [1727.0, 5346.0], [1723.0, 5073.25], [1719.0, 5156.0], [1715.0, 5111.0], [1683.0, 5392.5], [1687.0, 5182.0], [1691.0, 5023.0], [1759.0, 5221.8], [1731.0, 5021.0], [1755.0, 5566.0], [1735.0, 5034.25], [1739.0, 5413.5], [1743.0, 5280.0], [1747.0, 5360.0], [1751.0, 5176.333333333333], [1.0, 8879.0]], "isOverall": false, "label": "Products", "isController": false}, {"data": [[916.3127500000027, 4709.843249999996]], "isOverall": false, "label": "Products-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1759.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 755.0, "minX": 1.732949546E12, "maxY": 299692.0, "series": [{"data": [[1.732949565E12, 283918.0], [1.732949564E12, 295330.0], [1.732949563E12, 289138.0], [1.732949546E12, 5337.0], [1.732949567E12, 176683.0], [1.732949566E12, 299692.0], [1.73294956E12, 288531.0], [1.732949559E12, 283493.0], [1.732949558E12, 289542.0], [1.732949562E12, 286402.0], [1.732949561E12, 283331.0], [1.732949554E12, 274908.0], [1.732949553E12, 272429.0], [1.732949557E12, 276533.0], [1.732949556E12, 283487.0], [1.732949555E12, 292384.0], [1.732949549E12, 273215.0], [1.732949548E12, 269475.0], [1.732949547E12, 267039.0], [1.732949552E12, 280673.0], [1.732949551E12, 269391.0], [1.73294955E12, 282382.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.732949565E12, 49493.0], [1.732949564E12, 49417.0], [1.732949563E12, 48122.0], [1.732949546E12, 755.0], [1.732949567E12, 29955.0], [1.732949566E12, 49347.0], [1.73294956E12, 48738.0], [1.732949559E12, 48070.0], [1.732949558E12, 48457.0], [1.732949562E12, 49712.0], [1.732949561E12, 47415.0], [1.732949554E12, 47880.0], [1.732949553E12, 45099.0], [1.732949557E12, 48812.0], [1.732949556E12, 47696.0], [1.732949555E12, 47832.0], [1.732949549E12, 45662.0], [1.732949548E12, 44133.0], [1.732949547E12, 46791.0], [1.732949552E12, 47220.0], [1.732949551E12, 48380.0], [1.73294955E12, 46475.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.732949567E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 45.666666666666664, "minX": 1.732949546E12, "maxY": 8783.727272727272, "series": [{"data": [[1.732949565E12, 8063.054455445544], [1.732949564E12, 7605.600000000001], [1.732949563E12, 7257.0666666666675], [1.732949546E12, 45.666666666666664], [1.732949567E12, 8783.727272727272], [1.732949566E12, 8467.270000000002], [1.73294956E12, 5983.395939086296], [1.732949559E12, 5659.770408163264], [1.732949558E12, 5142.260204081634], [1.732949562E12, 6852.861386138615], [1.732949561E12, 6459.580310880826], [1.732949554E12, 3463.5103092783497], [1.732949553E12, 3103.169398907104], [1.732949557E12, 4828.0353535353515], [1.732949556E12, 4337.8911917098485], [1.732949555E12, 4022.16923076923], [1.732949549E12, 1401.6378378378383], [1.732949548E12, 891.1777777777779], [1.732949547E12, 329.8421052631579], [1.732949552E12, 2623.166666666667], [1.732949551E12, 2264.2588832487327], [1.73294955E12, 1817.457446808511]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.732949567E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 45.666666666666664, "minX": 1.732949546E12, "maxY": 8783.727272727272, "series": [{"data": [[1.732949565E12, 8063.044554455448], [1.732949564E12, 7605.5700000000015], [1.732949563E12, 7257.05128205128], [1.732949546E12, 45.666666666666664], [1.732949567E12, 8783.727272727272], [1.732949566E12, 8467.265000000005], [1.73294956E12, 5983.390862944163], [1.732949559E12, 5659.755102040814], [1.732949558E12, 5142.24489795918], [1.732949562E12, 6852.851485148518], [1.732949561E12, 6459.559585492229], [1.732949554E12, 3463.4484536082473], [1.732949553E12, 3103.0928961748637], [1.732949557E12, 4828.020202020201], [1.732949556E12, 4337.865284974096], [1.732949555E12, 4022.1435897435917], [1.732949549E12, 1401.589189189189], [1.732949548E12, 891.1222222222223], [1.732949547E12, 329.80000000000007], [1.732949552E12, 2623.151041666667], [1.732949551E12, 2264.223350253806], [1.73294955E12, 1817.4148936170213]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.732949567E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.4650000000000001, "minX": 1.732949546E12, "maxY": 4.447368421052631, "series": [{"data": [[1.732949565E12, 0.5891089108910894], [1.732949564E12, 0.6349999999999996], [1.732949563E12, 0.4871794871794869], [1.732949546E12, 4.0], [1.732949567E12, 0.628099173553719], [1.732949566E12, 0.4650000000000001], [1.73294956E12, 0.5431472081218272], [1.732949559E12, 0.4795918367346938], [1.732949558E12, 0.5204081632653057], [1.732949562E12, 0.5445544554455447], [1.732949561E12, 0.7357512953367875], [1.732949554E12, 1.1082474226804127], [1.732949553E12, 0.650273224043716], [1.732949557E12, 0.6717171717171714], [1.732949556E12, 0.6113989637305703], [1.732949555E12, 0.7179487179487176], [1.732949549E12, 0.9567567567567569], [1.732949548E12, 1.5166666666666666], [1.732949547E12, 4.447368421052631], [1.732949552E12, 0.6406249999999998], [1.732949551E12, 0.6446700507614209], [1.73294955E12, 0.9095744680851069]], "isOverall": false, "label": "Products", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.732949567E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 42.0, "minX": 1.732949546E12, "maxY": 9139.0, "series": [{"data": [[1.732949565E12, 8697.0], [1.732949564E12, 8673.0], [1.732949563E12, 8500.0], [1.732949546E12, 49.0], [1.732949567E12, 9027.0], [1.732949566E12, 9139.0], [1.73294956E12, 7446.0], [1.732949559E12, 6950.0], [1.732949558E12, 6229.0], [1.732949562E12, 7866.0], [1.732949561E12, 7372.0], [1.732949554E12, 5096.0], [1.732949553E12, 4617.0], [1.732949557E12, 5962.0], [1.732949556E12, 6020.0], [1.732949555E12, 5254.0], [1.732949549E12, 2375.0], [1.732949548E12, 1853.0], [1.732949547E12, 866.0], [1.732949552E12, 3411.0], [1.732949551E12, 3017.0], [1.73294955E12, 2807.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.732949565E12, 8422.0], [1.732949564E12, 7979.5], [1.732949563E12, 7681.0], [1.732949546E12, 49.0], [1.732949567E12, 8881.0], [1.732949566E12, 8625.8], [1.73294956E12, 6276.6], [1.732949559E12, 6018.5], [1.732949558E12, 5574.0], [1.732949562E12, 7070.6], [1.732949561E12, 6808.8], [1.732949554E12, 3883.0000000000005], [1.732949553E12, 3578.6], [1.732949557E12, 5205.8], [1.732949556E12, 4641.6], [1.732949555E12, 4612.2], [1.732949549E12, 1675.4000000000005], [1.732949548E12, 1141.0], [1.732949547E12, 531.8000000000001], [1.732949552E12, 2930.2000000000003], [1.732949551E12, 2510.0], [1.73294955E12, 2161.9]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.732949565E12, 8644.5], [1.732949564E12, 8663.52], [1.732949563E12, 8452.0], [1.732949546E12, 49.0], [1.732949567E12, 9026.52], [1.732949566E12, 8924.980000000001], [1.73294956E12, 7180.0199999999995], [1.732949559E12, 6933.5], [1.732949558E12, 6197.84], [1.732949562E12, 7830.280000000001], [1.732949561E12, 7362.38], [1.732949554E12, 4736.279999999996], [1.732949553E12, 4245.039999999996], [1.732949557E12, 5746.0], [1.732949556E12, 6017.78], [1.732949555E12, 5079.410000000002], [1.732949549E12, 2363.44], [1.732949548E12, 1685.2999999999986], [1.732949547E12, 852.6000000000003], [1.732949552E12, 3368.52], [1.732949551E12, 2940.0000000000014], [1.73294955E12, 2798.48]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.732949565E12, 8445.5], [1.732949564E12, 8170.3], [1.732949563E12, 7724.0], [1.732949546E12, 49.0], [1.732949567E12, 8997.6], [1.732949566E12, 8642.7], [1.73294956E12, 6442.5], [1.732949559E12, 6120.5], [1.732949558E12, 5660.2], [1.732949562E12, 7310.0], [1.732949561E12, 7069.9], [1.732949554E12, 4002.6], [1.732949553E12, 3811.7999999999997], [1.732949557E12, 5382.000000000001], [1.732949556E12, 4914.499999999997], [1.732949555E12, 4835.5], [1.732949549E12, 1948.1999999999998], [1.732949548E12, 1356.5], [1.732949547E12, 622.25], [1.732949552E12, 3071.8], [1.732949551E12, 2642.0], [1.73294955E12, 2306.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.732949565E12, 7625.0], [1.732949564E12, 7179.0], [1.732949563E12, 6792.0], [1.732949546E12, 42.0], [1.732949567E12, 8649.0], [1.732949566E12, 7968.0], [1.73294956E12, 5557.0], [1.732949559E12, 5144.0], [1.732949558E12, 4712.0], [1.732949562E12, 6353.0], [1.732949561E12, 5982.0], [1.732949554E12, 3052.0], [1.732949553E12, 2601.0], [1.732949557E12, 4319.0], [1.732949556E12, 3895.0], [1.732949555E12, 3476.0], [1.732949549E12, 882.0], [1.732949548E12, 431.0], [1.732949547E12, 64.0], [1.732949552E12, 2189.0], [1.732949551E12, 1807.0], [1.73294955E12, 1347.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.732949565E12, 8053.0], [1.732949564E12, 7576.5], [1.732949563E12, 7230.0], [1.732949546E12, 46.0], [1.732949567E12, 8780.0], [1.732949566E12, 8479.0], [1.73294956E12, 5906.0], [1.732949559E12, 5661.0], [1.732949558E12, 5081.0], [1.732949562E12, 6810.0], [1.732949561E12, 6436.0], [1.732949554E12, 3401.0], [1.732949553E12, 3007.0], [1.732949557E12, 4852.0], [1.732949556E12, 4272.0], [1.732949555E12, 3989.0], [1.732949549E12, 1421.0], [1.732949548E12, 859.0], [1.732949547E12, 328.5], [1.732949552E12, 2588.0], [1.732949551E12, 2278.0], [1.73294955E12, 1778.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.732949567E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 46.0, "minX": 3.0, "maxY": 8780.0, "series": [{"data": [[180.0, 859.0], [183.0, 3007.0], [190.0, 328.5], [185.0, 1421.0], [188.0, 1778.5], [3.0, 46.0], [197.0, 5582.5], [192.0, 2588.0], [194.0, 3401.0], [195.0, 6792.0], [193.0, 5983.5], [198.0, 4852.0], [196.0, 5439.0], [202.0, 7655.0], [200.0, 8254.0], [121.0, 8780.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[180.0, 828.5], [183.0, 3124.0], [190.0, 319.5], [185.0, 1433.0], [188.0, 1641.5], [197.0, 2381.0], [192.0, 2566.0], [194.0, 3373.0], [195.0, 4817.0], [193.0, 5327.0], [198.0, 4916.0], [196.0, 5374.0], [202.0, 7805.0], [200.0, 8105.0], [121.0, 8723.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 202.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 46.0, "minX": 3.0, "maxY": 8780.0, "series": [{"data": [[180.0, 859.0], [183.0, 3007.0], [190.0, 328.5], [185.0, 1421.0], [188.0, 1778.5], [3.0, 46.0], [197.0, 5582.5], [192.0, 2588.0], [194.0, 3401.0], [195.0, 6792.0], [193.0, 5983.5], [198.0, 4852.0], [196.0, 5439.0], [202.0, 7655.0], [200.0, 8254.0], [121.0, 8780.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[180.0, 828.0], [183.0, 3124.0], [190.0, 319.5], [185.0, 1433.0], [188.0, 1641.5], [197.0, 2381.0], [192.0, 2566.0], [194.0, 3373.0], [195.0, 4817.0], [193.0, 5327.0], [198.0, 4916.0], [196.0, 5374.0], [202.0, 7804.0], [200.0, 8105.0], [121.0, 8723.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 202.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 70.0, "minX": 1.732949546E12, "maxY": 356.0, "series": [{"data": [[1.732949546E12, 70.0], [1.732949558E12, 240.0], [1.732949554E12, 334.0], [1.732949553E12, 333.0], [1.732949557E12, 334.0], [1.732949556E12, 333.0], [1.732949555E12, 333.0], [1.732949549E12, 333.0], [1.732949548E12, 334.0], [1.732949547E12, 356.0], [1.732949552E12, 334.0], [1.732949551E12, 332.0], [1.73294955E12, 334.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.732949558E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.732949546E12, "maxY": 181.0, "series": [{"data": [[1.732949565E12, 174.0], [1.732949564E12, 178.0], [1.732949563E12, 179.0], [1.732949546E12, 3.0], [1.732949567E12, 111.0], [1.732949566E12, 181.0], [1.73294956E12, 177.0], [1.732949559E12, 174.0], [1.732949558E12, 175.0], [1.732949562E12, 175.0], [1.732949561E12, 173.0], [1.732949554E12, 167.0], [1.732949553E12, 167.0], [1.732949557E12, 171.0], [1.732949556E12, 173.0], [1.732949555E12, 178.0], [1.732949549E12, 167.0], [1.732949548E12, 164.0], [1.732949547E12, 166.0], [1.732949552E12, 171.0], [1.732949551E12, 169.0], [1.73294955E12, 170.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.732949565E12, 28.0], [1.732949564E12, 22.0], [1.732949563E12, 16.0], [1.732949567E12, 10.0], [1.732949566E12, 19.0], [1.73294956E12, 20.0], [1.732949559E12, 22.0], [1.732949558E12, 21.0], [1.732949562E12, 27.0], [1.732949561E12, 20.0], [1.732949554E12, 27.0], [1.732949553E12, 16.0], [1.732949557E12, 27.0], [1.732949556E12, 20.0], [1.732949555E12, 17.0], [1.732949549E12, 18.0], [1.732949548E12, 16.0], [1.732949547E12, 24.0], [1.732949552E12, 21.0], [1.732949551E12, 28.0], [1.73294955E12, 18.0]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.732949567E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.732949546E12, "maxY": 181.0, "series": [{"data": [[1.732949565E12, 28.0], [1.732949564E12, 22.0], [1.732949563E12, 16.0], [1.732949567E12, 10.0], [1.732949566E12, 19.0], [1.73294956E12, 20.0], [1.732949559E12, 22.0], [1.732949558E12, 21.0], [1.732949562E12, 27.0], [1.732949561E12, 20.0], [1.732949554E12, 27.0], [1.732949553E12, 16.0], [1.732949557E12, 27.0], [1.732949556E12, 20.0], [1.732949555E12, 17.0], [1.732949549E12, 18.0], [1.732949548E12, 16.0], [1.732949547E12, 24.0], [1.732949552E12, 21.0], [1.732949551E12, 28.0], [1.73294955E12, 18.0]], "isOverall": false, "label": "Products-failure", "isController": false}, {"data": [[1.732949565E12, 174.0], [1.732949564E12, 178.0], [1.732949563E12, 179.0], [1.732949546E12, 3.0], [1.732949567E12, 111.0], [1.732949566E12, 181.0], [1.73294956E12, 177.0], [1.732949559E12, 174.0], [1.732949558E12, 175.0], [1.732949562E12, 175.0], [1.732949561E12, 173.0], [1.732949554E12, 167.0], [1.732949553E12, 167.0], [1.732949557E12, 171.0], [1.732949556E12, 173.0], [1.732949555E12, 178.0], [1.732949549E12, 167.0], [1.732949548E12, 164.0], [1.732949547E12, 166.0], [1.732949552E12, 171.0], [1.732949551E12, 169.0], [1.73294955E12, 170.0]], "isOverall": false, "label": "Products-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.732949567E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.732949546E12, "maxY": 181.0, "series": [{"data": [[1.732949565E12, 174.0], [1.732949564E12, 178.0], [1.732949563E12, 179.0], [1.732949546E12, 3.0], [1.732949567E12, 111.0], [1.732949566E12, 181.0], [1.73294956E12, 177.0], [1.732949559E12, 174.0], [1.732949558E12, 175.0], [1.732949562E12, 175.0], [1.732949561E12, 173.0], [1.732949554E12, 167.0], [1.732949553E12, 167.0], [1.732949557E12, 171.0], [1.732949556E12, 173.0], [1.732949555E12, 178.0], [1.732949549E12, 167.0], [1.732949548E12, 164.0], [1.732949547E12, 166.0], [1.732949552E12, 171.0], [1.732949551E12, 169.0], [1.73294955E12, 170.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.732949565E12, 28.0], [1.732949564E12, 22.0], [1.732949563E12, 16.0], [1.732949567E12, 10.0], [1.732949566E12, 19.0], [1.73294956E12, 20.0], [1.732949559E12, 22.0], [1.732949558E12, 21.0], [1.732949562E12, 27.0], [1.732949561E12, 20.0], [1.732949554E12, 27.0], [1.732949553E12, 16.0], [1.732949557E12, 27.0], [1.732949556E12, 20.0], [1.732949555E12, 17.0], [1.732949549E12, 18.0], [1.732949548E12, 16.0], [1.732949547E12, 24.0], [1.732949552E12, 21.0], [1.732949551E12, 28.0], [1.73294955E12, 18.0]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.732949567E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

